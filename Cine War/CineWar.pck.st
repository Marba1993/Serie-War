'From Cuis 5.0 of 7 November 2016 [latest update: #3174] on 28 January 2021 at 11:57:03 pm'!
'Description Please enter a description for this package'!
!provides: 'CineWar' 1 2!
!requires: 'Collection - Filter' 1 7 nil!
!classDefinition: #BlackPlayOffTest category: #CineWar!
TestCase subclass: #BlackPlayOffTest
	instanceVariableNames: 'blackPlayOff saw residentEvil playOff'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'BlackPlayOffTest class' category: #CineWar!
BlackPlayOffTest class
	instanceVariableNames: ''!

!classDefinition: #CategoriaTest category: #CineWar!
TestCase subclass: #CategoriaTest
	instanceVariableNames: 'unaCategoria unaPelicula'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'CategoriaTest class' category: #CineWar!
CategoriaTest class
	instanceVariableNames: ''!

!classDefinition: #CineWarTest category: #CineWar!
TestCase subclass: #CineWarTest
	instanceVariableNames: 'estacionZombie elFinalDeTodo veintiCuatroHorasParaVivir venom bestiaDeCarga matrix2 tombRaider transformers yaNoMeSientoAGustoEnEsteMundo vhs2 camaraOscura categoriaHorror categoriaAlternativo categoriaTension categoriaEntretenimiento hackers deadPool2 sinRastro laMula doceHorasParaSobrevivir todosContraElFuego operacionOverlord tierraHostil laFormaDelAgua venYEncuentrame jackass piratasDelCaribe4 godzilla2 escuadronT34 pandillasSalvajes maligno elUltimoSoldado elProyectoAndromeda festinDiabolico carreraDeLaMuerte losIndestructibles2 viudas pacienteCero masacreZombie asesinoCanibal torturaExperimental laListaNegra adiosVayaConDios asesinadaALos17 laMorgue2 laChicaEnLasFotografias sombrasSalvajes elSeñorDeLosAnillos aire elAngel elCuartoDelMiedo elPrecioDeLaCodicia laNaranjaMecanica sietePecadosCapitales elGranSecuestroDeMrHeineken efectoMariposa3 johnCarter sinCity dias3096 panicoYLocuraEnLasVegas puntoMuerto inmigrantesilegales alLimite angelesYDemonios aplicacionSiniestra titeresAsesinos laDamaDeNegro elDiaDeLosMuertosVivientes2 coleccionDeMuertosVivos grandTheftAuto nadaEsLoQueParece2 apocalipto veintiDosDeJulio papillonLaGranFuga elCamino cineWar residentEvil3 destinoFinal3 elRoboDelSiglo solosEnElFinDelMundo parasitos fragmentado'
	classVariableNames: 'ElAngel'
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'CineWarTest class' category: #CineWar!
CineWarTest class
	instanceVariableNames: ''!

!classDefinition: #EndMvMTest category: #CineWar!
TestCase subclass: #EndMvMTest
	instanceVariableNames: 'saw residentEvil endMvM'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EndMvMTest class' category: #CineWar!
EndMvMTest class
	instanceVariableNames: ''!

!classDefinition: #IntroMvMTest category: #CineWar!
TestCase subclass: #IntroMvMTest
	instanceVariableNames: 'intro saw residentEvil'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'IntroMvMTest class' category: #CineWar!
IntroMvMTest class
	instanceVariableNames: ''!

!classDefinition: #LeagueTest category: #CineWar!
TestCase subclass: #LeagueTest
	instanceVariableNames: 'saw residentEvil destinoFinal league animal torturaExperimental entreSombras venom losIndestructibles bestiaDeCarga vhs2 historiaDeUltratumba gonjiam adios masacreZombie estacionZombie elFinalDeTodo veintiCuatroHorasParaVivir categoriaEntretenimiento categoriaAlternativo categoriaTension categoriaHorror categoriaSuspenso categoriaDrama categoriaAccion categoriaTerror matrix2 venyEncuentrame tombRaider transformers nadaEsloQueParece2 todosContraFuego ghostRider3 piratasDeCaribe3 yaNoMeSientoAGustoEnEsteMundo residentEvil2 hellFest laMorgue2 elSandman doceHorasParaVivir saw7 camaraOscura laChicaEnLasFotografias asesinadaALos17'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'LeagueTest class' category: #CineWar!
LeagueTest class
	instanceVariableNames: ''!

!classDefinition: #NegativoTest category: #CineWar!
TestCase subclass: #NegativoTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'NegativoTest class' category: #CineWar!
NegativoTest class
	instanceVariableNames: ''!

!classDefinition: #OnFireTest category: #CineWar!
TestCase subclass: #OnFireTest
	instanceVariableNames: 'saw residentEvil destinoFinal listaDePeliculasEnZonaRoja listaDePeliculasEnZonaSegura onFire'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'OnFireTest class' category: #CineWar!
OnFireTest class
	instanceVariableNames: ''!

!classDefinition: #PeliculaTest category: #CineWar!
TestCase subclass: #PeliculaTest
	instanceVariableNames: 'unaPelicula'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'PeliculaTest class' category: #CineWar!
PeliculaTest class
	instanceVariableNames: ''!

!classDefinition: #PlayOffTest category: #CineWar!
TestCase subclass: #PlayOffTest
	instanceVariableNames: 'playOff saw residentEvil'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'PlayOffTest class' category: #CineWar!
PlayOffTest class
	instanceVariableNames: ''!

!classDefinition: #PointExpressTest category: #CineWar!
TestCase subclass: #PointExpressTest
	instanceVariableNames: 'unaPelicula point'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'PointExpressTest class' category: #CineWar!
PointExpressTest class
	instanceVariableNames: ''!

!classDefinition: #PositivoTest category: #CineWar!
TestCase subclass: #PositivoTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'PositivoTest class' category: #CineWar!
PositivoTest class
	instanceVariableNames: ''!

!classDefinition: #PreEndMvMTest category: #CineWar!
TestCase subclass: #PreEndMvMTest
	instanceVariableNames: 'pre saw residentEvil'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'PreEndMvMTest class' category: #CineWar!
PreEndMvMTest class
	instanceVariableNames: ''!

!classDefinition: #PreTicketMvMTest category: #CineWar!
TestCase subclass: #PreTicketMvMTest
	instanceVariableNames: 'ticket categoriaSuspenso residentEvil destinoFinal'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'PreTicketMvMTest class' category: #CineWar!
PreTicketMvMTest class
	instanceVariableNames: ''!

!classDefinition: #SpinOffTest category: #CineWar!
TestCase subclass: #SpinOffTest
	instanceVariableNames: 'zonaEnRiesgo saw residentEvil destinoFinal unaCategoria league spinOff'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'SpinOffTest class' category: #CineWar!
SpinOffTest class
	instanceVariableNames: ''!

!classDefinition: #StageGroupTest category: #CineWar!
TestCase subclass: #StageGroupTest
	instanceVariableNames: 'sg saw residentEvil destinoFinal point laMorgue'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'StageGroupTest class' category: #CineWar!
StageGroupTest class
	instanceVariableNames: ''!

!classDefinition: #AnalizadorDeBonus category: #CineWar!
Object subclass: #AnalizadorDeBonus
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'AnalizadorDeBonus class' category: #CineWar!
AnalizadorDeBonus class
	instanceVariableNames: ''!

!classDefinition: #EstadoDeCuatripleEmpate category: #CineWar!
AnalizadorDeBonus subclass: #EstadoDeCuatripleEmpate
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoDeCuatripleEmpate class' category: #CineWar!
EstadoDeCuatripleEmpate class
	instanceVariableNames: ''!

!classDefinition: #EstadoDeDobleEmpate category: #CineWar!
AnalizadorDeBonus subclass: #EstadoDeDobleEmpate
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoDeDobleEmpate class' category: #CineWar!
EstadoDeDobleEmpate class
	instanceVariableNames: ''!

!classDefinition: #EstadoDeEmpateNulo category: #CineWar!
AnalizadorDeBonus subclass: #EstadoDeEmpateNulo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoDeEmpateNulo class' category: #CineWar!
EstadoDeEmpateNulo class
	instanceVariableNames: ''!

!classDefinition: #EstadoDeTripleEmpate category: #CineWar!
AnalizadorDeBonus subclass: #EstadoDeTripleEmpate
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoDeTripleEmpate class' category: #CineWar!
EstadoDeTripleEmpate class
	instanceVariableNames: ''!

!classDefinition: #AnalizadorDeCantidadDePeliculas category: #CineWar!
Object subclass: #AnalizadorDeCantidadDePeliculas
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'AnalizadorDeCantidadDePeliculas class' category: #CineWar!
AnalizadorDeCantidadDePeliculas class
	instanceVariableNames: ''!

!classDefinition: #EstadoDeCantidadIgualACero category: #CineWar!
AnalizadorDeCantidadDePeliculas subclass: #EstadoDeCantidadIgualACero
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoDeCantidadIgualACero class' category: #CineWar!
EstadoDeCantidadIgualACero class
	instanceVariableNames: ''!

!classDefinition: #EstadoDeCantidadMayorACero category: #CineWar!
AnalizadorDeCantidadDePeliculas subclass: #EstadoDeCantidadMayorACero
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoDeCantidadMayorACero class' category: #CineWar!
EstadoDeCantidadMayorACero class
	instanceVariableNames: ''!

!classDefinition: #AnalizadorDeCantidadDePeliculasInscriptas category: #CineWar!
Object subclass: #AnalizadorDeCantidadDePeliculasInscriptas
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'AnalizadorDeCantidadDePeliculasInscriptas class' category: #CineWar!
AnalizadorDeCantidadDePeliculasInscriptas class
	instanceVariableNames: ''!

!classDefinition: #EstadoCumpleConLaCantidadMinimaDePeliculasInscritasYPeliculasReservadas category: #CineWar!
AnalizadorDeCantidadDePeliculasInscriptas subclass: #EstadoCumpleConLaCantidadMinimaDePeliculasInscritasYPeliculasReservadas
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoCumpleConLaCantidadMinimaDePeliculasInscritasYPeliculasReservadas class' category: #CineWar!
EstadoCumpleConLaCantidadMinimaDePeliculasInscritasYPeliculasReservadas class
	instanceVariableNames: ''!

!classDefinition: #EstadoNoCumpleConLaCantidadMinimaDePeliculasInscriptas category: #CineWar!
AnalizadorDeCantidadDePeliculasInscriptas subclass: #EstadoNoCumpleConLaCantidadMinimaDePeliculasInscriptas
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoNoCumpleConLaCantidadMinimaDePeliculasInscriptas class' category: #CineWar!
EstadoNoCumpleConLaCantidadMinimaDePeliculasInscriptas class
	instanceVariableNames: ''!

!classDefinition: #EstadoNoCumpleConLaCantidadMinimaDePeliculasInscriptasNiConLasPeliculasReservadas category: #CineWar!
AnalizadorDeCantidadDePeliculasInscriptas subclass: #EstadoNoCumpleConLaCantidadMinimaDePeliculasInscriptasNiConLasPeliculasReservadas
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoNoCumpleConLaCantidadMinimaDePeliculasInscriptasNiConLasPeliculasReservadas class' category: #CineWar!
EstadoNoCumpleConLaCantidadMinimaDePeliculasInscriptasNiConLasPeliculasReservadas class
	instanceVariableNames: ''!

!classDefinition: #EstadoNoCumpleConLasPeliculasReservadas category: #CineWar!
AnalizadorDeCantidadDePeliculasInscriptas subclass: #EstadoNoCumpleConLasPeliculasReservadas
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoNoCumpleConLasPeliculasReservadas class' category: #CineWar!
EstadoNoCumpleConLasPeliculasReservadas class
	instanceVariableNames: ''!

!classDefinition: #AnalizadorDeCategoria category: #CineWar!
Object subclass: #AnalizadorDeCategoria
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'AnalizadorDeCategoria class' category: #CineWar!
AnalizadorDeCategoria class
	instanceVariableNames: ''!

!classDefinition: #EstadoDeGeneroExistente category: #CineWar!
AnalizadorDeCategoria subclass: #EstadoDeGeneroExistente
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoDeGeneroExistente class' category: #CineWar!
EstadoDeGeneroExistente class
	instanceVariableNames: ''!

!classDefinition: #EstadoDeGeneroInexistente category: #CineWar!
AnalizadorDeCategoria subclass: #EstadoDeGeneroInexistente
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoDeGeneroInexistente class' category: #CineWar!
EstadoDeGeneroInexistente class
	instanceVariableNames: ''!

!classDefinition: #AnalizadorDeEstadoBlackPlayOff category: #CineWar!
Object subclass: #AnalizadorDeEstadoBlackPlayOff
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'AnalizadorDeEstadoBlackPlayOff class' category: #CineWar!
AnalizadorDeEstadoBlackPlayOff class
	instanceVariableNames: ''!

!classDefinition: #EstadoBlackPlayOffEmpatado category: #CineWar!
AnalizadorDeEstadoBlackPlayOff subclass: #EstadoBlackPlayOffEmpatado
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoBlackPlayOffEmpatado class' category: #CineWar!
EstadoBlackPlayOffEmpatado class
	instanceVariableNames: ''!

!classDefinition: #EstadoGanadorBlackPlayOffPeliculaA category: #CineWar!
AnalizadorDeEstadoBlackPlayOff subclass: #EstadoGanadorBlackPlayOffPeliculaA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoGanadorBlackPlayOffPeliculaA class' category: #CineWar!
EstadoGanadorBlackPlayOffPeliculaA class
	instanceVariableNames: ''!

!classDefinition: #EstadoGanadorBlackPlayOffPeliculaB category: #CineWar!
AnalizadorDeEstadoBlackPlayOff subclass: #EstadoGanadorBlackPlayOffPeliculaB
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoGanadorBlackPlayOffPeliculaB class' category: #CineWar!
EstadoGanadorBlackPlayOffPeliculaB class
	instanceVariableNames: ''!

!classDefinition: #AnalizadorDeEstadoDePreTicket category: #CineWar!
Object subclass: #AnalizadorDeEstadoDePreTicket
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'AnalizadorDeEstadoDePreTicket class' category: #CineWar!
AnalizadorDeEstadoDePreTicket class
	instanceVariableNames: ''!

!classDefinition: #EstadoDePreTicketNoVacio category: #CineWar!
AnalizadorDeEstadoDePreTicket subclass: #EstadoDePreTicketNoVacio
	instanceVariableNames: 'procesador decodificador impresora'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoDePreTicketNoVacio class' category: #CineWar!
EstadoDePreTicketNoVacio class
	instanceVariableNames: ''!

!classDefinition: #EstadoDePreticketVacio category: #CineWar!
AnalizadorDeEstadoDePreTicket subclass: #EstadoDePreticketVacio
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoDePreticketVacio class' category: #CineWar!
EstadoDePreticketVacio class
	instanceVariableNames: ''!

!classDefinition: #AnalizadorDeEstadoDeTandaBlackPlayOff category: #CineWar!
Object subclass: #AnalizadorDeEstadoDeTandaBlackPlayOff
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'AnalizadorDeEstadoDeTandaBlackPlayOff class' category: #CineWar!
AnalizadorDeEstadoDeTandaBlackPlayOff class
	instanceVariableNames: ''!

!classDefinition: #EstadoDeListaDePuntosBlackPlayOffNoVacia category: #CineWar!
AnalizadorDeEstadoDeTandaBlackPlayOff subclass: #EstadoDeListaDePuntosBlackPlayOffNoVacia
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoDeListaDePuntosBlackPlayOffNoVacia class' category: #CineWar!
EstadoDeListaDePuntosBlackPlayOffNoVacia class
	instanceVariableNames: ''!

!classDefinition: #EstadoDeListaDePuntosBlackPlayOffVacia category: #CineWar!
AnalizadorDeEstadoDeTandaBlackPlayOff subclass: #EstadoDeListaDePuntosBlackPlayOffVacia
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoDeListaDePuntosBlackPlayOffVacia class' category: #CineWar!
EstadoDeListaDePuntosBlackPlayOffVacia class
	instanceVariableNames: ''!

!classDefinition: #AnalizadorDePuntaje category: #CineWar!
Object subclass: #AnalizadorDePuntaje
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'AnalizadorDePuntaje class' category: #CineWar!
AnalizadorDePuntaje class
	instanceVariableNames: ''!

!classDefinition: #EstadoDePuntajeNegativo category: #CineWar!
AnalizadorDePuntaje subclass: #EstadoDePuntajeNegativo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoDePuntajeNegativo class' category: #CineWar!
EstadoDePuntajeNegativo class
	instanceVariableNames: ''!

!classDefinition: #EstadoDePuntajePositivo category: #CineWar!
AnalizadorDePuntaje subclass: #EstadoDePuntajePositivo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoDePuntajePositivo class' category: #CineWar!
EstadoDePuntajePositivo class
	instanceVariableNames: ''!

!classDefinition: #AutorizadorDeEstadoDeTanda category: #CineWar!
Object subclass: #AutorizadorDeEstadoDeTanda
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'AutorizadorDeEstadoDeTanda class' category: #CineWar!
AutorizadorDeEstadoDeTanda class
	instanceVariableNames: ''!

!classDefinition: #EstadoDePrimerPuntoNegativo category: #CineWar!
AutorizadorDeEstadoDeTanda subclass: #EstadoDePrimerPuntoNegativo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoDePrimerPuntoNegativo class' category: #CineWar!
EstadoDePrimerPuntoNegativo class
	instanceVariableNames: ''!

!classDefinition: #EstadoDePrimerPuntoPositivo category: #CineWar!
AutorizadorDeEstadoDeTanda subclass: #EstadoDePrimerPuntoPositivo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoDePrimerPuntoPositivo class' category: #CineWar!
EstadoDePrimerPuntoPositivo class
	instanceVariableNames: ''!

!classDefinition: #AutorizadorDeRonda category: #CineWar!
Object subclass: #AutorizadorDeRonda
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'AutorizadorDeRonda class' category: #CineWar!
AutorizadorDeRonda class
	instanceVariableNames: ''!

!classDefinition: #EstadoDePuntoNegativo category: #CineWar!
AutorizadorDeRonda subclass: #EstadoDePuntoNegativo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoDePuntoNegativo class' category: #CineWar!
EstadoDePuntoNegativo class
	instanceVariableNames: ''!

!classDefinition: #EstadoDePuntoPositivo category: #CineWar!
AutorizadorDeRonda subclass: #EstadoDePuntoPositivo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoDePuntoPositivo class' category: #CineWar!
EstadoDePuntoPositivo class
	instanceVariableNames: ''!

!classDefinition: #BlackPlayOff category: #CineWar!
Object subclass: #BlackPlayOff
	instanceVariableNames: 'puntosPeliculaA puntosPeliculaB ticket listaRegistroPuntosPeliculaA listaRegistroPuntosPeliculaB'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'BlackPlayOff class' category: #CineWar!
BlackPlayOff class
	instanceVariableNames: ''!

!classDefinition: #Bonus category: #CineWar!
Object subclass: #Bonus
	instanceVariableNames: 'baseDeDatos'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'Bonus class' category: #CineWar!
Bonus class
	instanceVariableNames: ''!

!classDefinition: #Categoria category: #CineWar!
Object subclass: #Categoria
	instanceVariableNames: 'peliculas idCategoria'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'Categoria class' category: #CineWar!
Categoria class
	instanceVariableNames: ''!

!classDefinition: #Alternativo category: #CineWar!
Categoria subclass: #Alternativo
	instanceVariableNames: 'generos'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'Alternativo class' category: #CineWar!
Alternativo class
	instanceVariableNames: ''!

!classDefinition: #Entretenimiento category: #CineWar!
Categoria subclass: #Entretenimiento
	instanceVariableNames: 'generos'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'Entretenimiento class' category: #CineWar!
Entretenimiento class
	instanceVariableNames: ''!

!classDefinition: #Horror category: #CineWar!
Categoria subclass: #Horror
	instanceVariableNames: 'generos'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'Horror class' category: #CineWar!
Horror class
	instanceVariableNames: ''!

!classDefinition: #Tension category: #CineWar!
Categoria subclass: #Tension
	instanceVariableNames: 'generos'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'Tension class' category: #CineWar!
Tension class
	instanceVariableNames: ''!

!classDefinition: #CineWar category: #CineWar!
Object subclass: #CineWar
	instanceVariableNames: 'league stageA stageB stageC stageD finalTicket procesador cajaDePreTicketPlayOff decodificador impresora precuelaTicket topPuntajesRanking cupoReservadoStageGroupI cupoReservadoStageGroupII cupoReservadoStageGroupIII cupoReservadoStageGroupIV preticketstagegroupI preticketstagegroupII preticketstagegroupIII preticketstagegroupIV preticketMvM introMvMA introMvMB introMvMC introMvMD endMvM preEndMvMA preEndMvMB globalCineWar'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'CineWar class' category: #CineWar!
CineWar class
	instanceVariableNames: ''!

!classDefinition: #Cupo category: #CineWar!
Object subclass: #Cupo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'Cupo class' category: #CineWar!
Cupo class
	instanceVariableNames: ''!

!classDefinition: #CupoOne category: #CineWar!
Cupo subclass: #CupoOne
	instanceVariableNames: 'ganadorCupoOne'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'CupoOne class' category: #CineWar!
CupoOne class
	instanceVariableNames: ''!

!classDefinition: #CupoSecond category: #CineWar!
Cupo subclass: #CupoSecond
	instanceVariableNames: 'ganadorCupoSecond'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'CupoSecond class' category: #CineWar!
CupoSecond class
	instanceVariableNames: ''!

!classDefinition: #CupoThird category: #CineWar!
Cupo subclass: #CupoThird
	instanceVariableNames: 'ganadorCupoThird'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'CupoThird class' category: #CineWar!
CupoThird class
	instanceVariableNames: ''!

!classDefinition: #LastCupo category: #CineWar!
Cupo subclass: #LastCupo
	instanceVariableNames: 'ganadorLastCupo'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'LastCupo class' category: #CineWar!
LastCupo class
	instanceVariableNames: ''!

!classDefinition: #Decodificador category: #CineWar!
Object subclass: #Decodificador
	instanceVariableNames: 'listaNuevaCodificada listaTicketCodificados'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'Decodificador class' category: #CineWar!
Decodificador class
	instanceVariableNames: ''!

!classDefinition: #DefinidorDePuntos category: #CineWar!
Object subclass: #DefinidorDePuntos
	instanceVariableNames: 'posibilidades'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'DefinidorDePuntos class' category: #CineWar!
DefinidorDePuntos class
	instanceVariableNames: ''!

!classDefinition: #DefinidorDePuntosBlackPlayOff category: #CineWar!
Object subclass: #DefinidorDePuntosBlackPlayOff
	instanceVariableNames: 'posibilidades'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'DefinidorDePuntosBlackPlayOff class' category: #CineWar!
DefinidorDePuntosBlackPlayOff class
	instanceVariableNames: ''!

!classDefinition: #DefinidorDePuntosPlayOff category: #CineWar!
Object subclass: #DefinidorDePuntosPlayOff
	instanceVariableNames: 'posibilidades'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'DefinidorDePuntosPlayOff class' category: #CineWar!
DefinidorDePuntosPlayOff class
	instanceVariableNames: ''!

!classDefinition: #DefinidorDeZona category: #CineWar!
Object subclass: #DefinidorDeZona
	instanceVariableNames: 'zonas zonasPosibles'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'DefinidorDeZona class' category: #CineWar!
DefinidorDeZona class
	instanceVariableNames: ''!

!classDefinition: #DetectorGanadorMvM category: #CineWar!
Object subclass: #DetectorGanadorMvM
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'DetectorGanadorMvM class' category: #CineWar!
DetectorGanadorMvM class
	instanceVariableNames: ''!

!classDefinition: #EstadoDeEmpateEnMvM category: #CineWar!
DetectorGanadorMvM subclass: #EstadoDeEmpateEnMvM
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoDeEmpateEnMvM class' category: #CineWar!
EstadoDeEmpateEnMvM class
	instanceVariableNames: ''!

!classDefinition: #EstadoDeGanadorPeliculaAEnMvM category: #CineWar!
DetectorGanadorMvM subclass: #EstadoDeGanadorPeliculaAEnMvM
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoDeGanadorPeliculaAEnMvM class' category: #CineWar!
EstadoDeGanadorPeliculaAEnMvM class
	instanceVariableNames: ''!

!classDefinition: #EstadoDeGanadorPeliculaBEnMvM category: #CineWar!
DetectorGanadorMvM subclass: #EstadoDeGanadorPeliculaBEnMvM
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoDeGanadorPeliculaBEnMvM class' category: #CineWar!
EstadoDeGanadorPeliculaBEnMvM class
	instanceVariableNames: ''!

!classDefinition: #DetectorGanadorPlayOff category: #CineWar!
Object subclass: #DetectorGanadorPlayOff
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'DetectorGanadorPlayOff class' category: #CineWar!
DetectorGanadorPlayOff class
	instanceVariableNames: ''!

!classDefinition: #EstadoDeGanadorPeliculaAEnPlayOffEnStageGroup category: #CineWar!
DetectorGanadorPlayOff subclass: #EstadoDeGanadorPeliculaAEnPlayOffEnStageGroup
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoDeGanadorPeliculaAEnPlayOffEnStageGroup class' category: #CineWar!
EstadoDeGanadorPeliculaAEnPlayOffEnStageGroup class
	instanceVariableNames: ''!

!classDefinition: #EstadoDeGanadorPeliculaBEnPlayOffEnStageGroup category: #CineWar!
DetectorGanadorPlayOff subclass: #EstadoDeGanadorPeliculaBEnPlayOffEnStageGroup
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoDeGanadorPeliculaBEnPlayOffEnStageGroup class' category: #CineWar!
EstadoDeGanadorPeliculaBEnPlayOffEnStageGroup class
	instanceVariableNames: ''!

!classDefinition: #EstadoDePlayOffEmpatado category: #CineWar!
DetectorGanadorPlayOff subclass: #EstadoDePlayOffEmpatado
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoDePlayOffEmpatado class' category: #CineWar!
EstadoDePlayOffEmpatado class
	instanceVariableNames: ''!

!classDefinition: #EndTicket category: #CineWar!
Object subclass: #EndTicket
	instanceVariableNames: 'topPeliculas puntajeDeTop peliculasGanadorasDeBonusInvitacion campeonCineWar subCampeonCineWar'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EndTicket class' category: #CineWar!
EndTicket class
	instanceVariableNames: ''!

!classDefinition: #FinalPrecuelaTicket category: #CineWar!
Object subclass: #FinalPrecuelaTicket
	instanceVariableNames: 'dataPeliculasEnOutSide'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'FinalPrecuelaTicket class' category: #CineWar!
FinalPrecuelaTicket class
	instanceVariableNames: ''!

!classDefinition: #FinalTicketCineWar category: #CineWar!
Object subclass: #FinalTicketCineWar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'FinalTicketCineWar class' category: #CineWar!
FinalTicketCineWar class
	instanceVariableNames: ''!

!classDefinition: #FinalTicketCineWarMvM category: #CineWar!
FinalTicketCineWar subclass: #FinalTicketCineWarMvM
	instanceVariableNames: 'primeraTandaPointExpressDePrimeraRondaDePeliculaA primeraTandaPointExpressDePrimeraRondaDePeliculaB segundaTandaPointExpressDePrimeraRondaDePeliculaA segundaTandaPointExpressDePrimeraRondaDePeliculaB repechajeTandaPointExpressDePrimeraRondaDePeliculaA repechajeTandaPointExpressDePrimeraRondaDePeliculaB primeraTandaPointExpressDeRondaRevanchaDePeliculaA primeraTandaPointExpressDeRondaRevanchaDePeliculaB segundaTandaPointExpressDeRondaRevanchaDePeliculaA segundaTandaPointExpressDeRondaRevanchaDePeliculaB repechajeTandaPointExpressDeRondaRevanchaDePeliculaA repechajeTandaPointExpressDeRondaRevanchaDePeliculaB puntajeFinalPeliculaA puntajeFinalPeliculaB primeraPelicula segundaPelicula subCampeonColiseum tituloMvM'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'FinalTicketCineWarMvM class' category: #CineWar!
FinalTicketCineWarMvM class
	instanceVariableNames: ''!

!classDefinition: #FinalTicketCineWarStageGroup category: #CineWar!
FinalTicketCineWar subclass: #FinalTicketCineWarStageGroup
	instanceVariableNames: 'tituloStageGroup primerGanadorDeCupo segundoGanadorDeCupo tercerGanadorDeCupo primeraTandaPointEnPrimeraRondaDePeliculaA primeraTandaPointEnPrimeraRondaDePeliculaB primeraTandaPointEnPrimeraRondaDePeliculaC primeraTandaPointEnPrimeraRondaDePeliculaD primeraTandaPointEnRondaRevanchaDePeliculaA primeraTandaPointEnRondaRevanchaDePeliculaB primeraTandaPointEnRondaRevanchaDePeliculaC primeraTandaPointEnRondaRevanchaDePeliculaD repechajeTandaPointEnPrimeraRondaDePeliculaA repechajeTandaPointEnPrimeraRondaDePeliculaB repechajeTandaPointEnPrimeraRondaDePeliculaC repechajeTandaPointEnPrimeraRondaDePeliculaD segundaTandaPointEnPrimeraRondaDePeliculaA segundaTandaPointEnPrimeraRondaDePeliculaB segundaTandaPointEnPrimeraRondaDePeliculaC segundaTandaPointEnPrimeraRondaDePeliculaD segundaTandaPointEnRondaRevanchaDePeliculaA segundaTandaPointEnRondaRevanchaDePeliculaB segundaTandaPointEnRondaRevanchaDePeliculaC segundaTandaPointEnRondaRevanchaDePeliculaD repechajeTandaPointEnRondaRevanchaDePeliculaA repechajeTandaPointEnRondaRevanchaDePeliculaB repechajeTandaPointEnRondaRevanchaDePeliculaC repechajeTandaPointEnRondaRevanchaDePeliculaD ganadorBonusComodin ganadorBonusPromocion ganadorBonusInvitacion lastPelicula puntajeDeGanadorBonusComodin puntajeDeGanadorBonusPromocion puntajeDeGanadorBonusInvitacion puntajeDeLastPelicula cuartoGanadorDeCupo'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'FinalTicketCineWarStageGroup class' category: #CineWar!
FinalTicketCineWarStageGroup class
	instanceVariableNames: ''!

!classDefinition: #FinalTicketPlayOff category: #CineWar!
Object subclass: #FinalTicketPlayOff
	instanceVariableNames: 'tituloTicket primeraPeliculaDelTicket tandaPointPlayOffDePrimeraPelicula tandaPointBlackPlayOffDePrimeraPelicula segundaPeliculaDelTicket tandaPointPlayOffDeSegundaPelicula tandaPointBlackPlayOffDeSegundaPelicula'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'FinalTicketPlayOff class' category: #CineWar!
FinalTicketPlayOff class
	instanceVariableNames: ''!

!classDefinition: #Impresora category: #CineWar!
Object subclass: #Impresora
	instanceVariableNames: 'hojaDeImpresion'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'Impresora class' category: #CineWar!
Impresora class
	instanceVariableNames: ''!

!classDefinition: #League category: #CineWar!
Object subclass: #League
	instanceVariableNames: 'categorias cupoOne cupoSecond cupoThird lastCupo spinOff ganadorSpinOff categoriaTension categoriaAlternativo categoriaEntretenimiento categoriaHorror'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'League class' category: #CineWar!
League class
	instanceVariableNames: ''!

!classDefinition: #MvM category: #CineWar!
Object subclass: #MvM
	instanceVariableNames: 'global point playOff ticket procesador idMvM preTicketFinalMvM preTicketPreFinalMvM'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'MvM class' category: #CineWar!
MvM class
	instanceVariableNames: ''!

!classDefinition: #EndMvM category: #CineWar!
MvM subclass: #EndMvM
	instanceVariableNames: 'ganadorEndMvM endMvmFinalistaA endMvmFinalistaB perdedorEndMvM'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EndMvM class' category: #CineWar!
EndMvM class
	instanceVariableNames: ''!

!classDefinition: #IntroMvM category: #CineWar!
MvM subclass: #IntroMvM
	instanceVariableNames: 'ganadorComodin ganadorPromocion ganadorIntroMvM perdedorIntroMvM'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'IntroMvM class' category: #CineWar!
IntroMvM class
	instanceVariableNames: ''!

!classDefinition: #PreEndMvM category: #CineWar!
MvM subclass: #PreEndMvM
	instanceVariableNames: 'ganadorIntroMvMA ganadorIntroMvMB ganadorPreEndMvM perdedorPreEndMvM'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'PreEndMvM class' category: #CineWar!
PreEndMvM class
	instanceVariableNames: ''!

!classDefinition: #OnFire category: #CineWar!
Object subclass: #OnFire
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'OnFire class' category: #CineWar!
OnFire class
	instanceVariableNames: ''!

!classDefinition: #Pelicula category: #CineWar!
Object subclass: #Pelicula
	instanceVariableNames: 'nombre genero'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'Pelicula class' category: #CineWar!
Pelicula class
	instanceVariableNames: ''!

!classDefinition: #PlayOff category: #CineWar!
Object subclass: #PlayOff
	instanceVariableNames: 'primerPunto segundoPunto tercerPunto cuartoPunto quintoPunto total registroBlackPlayOff unBlackPlayOff ganadorPlayOff perdedorPlayOff ticket subTicketPrimerDueloDeTripleEmpateBonusComodin subTicketDueloUnicoDeBonusComodin subTicketSegundoDueloDeTripleEmpateDeBonusComodin subTicketPrimerDueloDeCuatripleEmpateDeBonusComodin subTicketSegundoDueloDeCuatripleEmpateDeBonusComodin subTicketTercerDueloDeCuatripleEmpateDeBonusComodin subTicketDueloUnicoDeBonusPromocion subTicketPrimerDueloDeTripleEmpateBonusPromocion subTicketSegundoDueloDeTripleEmpateDeBonusPromocion subTicketDueloUnicoDeBonusInvitacion listaPuntosBlackPlayOffParticipanteA listaPuntosBlackPlayOffParticipanteB subTicketFinalMvM subTicketPreFinalMvMB subTicketPreFinalMvMA'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'PlayOff class' category: #CineWar!
PlayOff class
	instanceVariableNames: ''!

!classDefinition: #PointExpress category: #CineWar!
Object subclass: #PointExpress
	instanceVariableNames: 'registro ticket primeraTanda primeraTandaII primeraTandaIII primeraTandaIV tandaRepechaje tandaRepechajeII tandaRepechajeIII tandaRepechajeIV segundaTanda segundaTandaII segundaTandaIII segundaTandaIV'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'PointExpress class' category: #CineWar!
PointExpress class
	instanceVariableNames: ''!

!classDefinition: #PreTicketMvM category: #CineWar!
Object subclass: #PreTicketMvM
	instanceVariableNames: 'dataOutsideStageGroupColiseum dataInsideStageGroupColiseum dataRanking dataPrimeraTandaPointExpressEnPrimeraRondaDeIntroMvM dataPrimeraTandaPointExpressEnRondaRevanchaDeIntroMvM dataSegundaTandaPointExpressEnPrimeraRondaDeIntroMvM dataSegundaTandaPointExpressEnRondaRevanchaDeIntroMvM dataTandaRepechajePointExpressEnPrimeraRondaDeIntroMvM dataTandaRepechajePointExpressEnRondaRevanchaDeIntroMvM dataPrimeraTandaPointExpressEnPrimeraRondaDeEndMvM dataPrimeraTandaPointExpressEnPrimeraRondaDePreEndMvM dataPrimeraTandaPointExpressEnRondaRevanchaDeEndMvM dataPrimeraTandaPointExpressEnRondaRevanchaDePreEndMvM dataSegundaTandaPointExpressEnPrimeraRondaDeEndMvM dataSegundaTandaPointExpressEnPrimeraRondaDePreEndMvM dataSegundaTandaPointExpressEnRondaRevanchaDeEndMvM dataSegundaTandaPointExpressEnRondaRevanchaDePreEndMvM dataTandaRepechajePointExpressEnPrimeraRondaDeEndMvM dataTandaRepechajePointExpressEnPrimeraRondaDePreEndMvM dataTandaRepechajePointExpressEnRondaRevanchaDeEndMvM dataTandaRepechajePointExpressEnRondaRevanchaDePreEndMvM'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'PreTicketMvM class' category: #CineWar!
PreTicketMvM class
	instanceVariableNames: ''!

!classDefinition: #PreTicketPlayOff category: #CineWar!
Object subclass: #PreTicketPlayOff
	instanceVariableNames: 'dataInsidePlayOffEnPreTicket'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'PreTicketPlayOff class' category: #CineWar!
PreTicketPlayOff class
	instanceVariableNames: ''!

!classDefinition: #PreTicketStageGroup category: #CineWar!
Object subclass: #PreTicketStageGroup
	instanceVariableNames: 'dataSegundaTandaDePointExpressEnPrimeraRondaStageGroup dataPrimeraTandaDePointExpressEnPrimeraRondaStageGroup dataRepechajeTandaDePointExpressEnPrimeraRondaStageGroup dataPrimeraTandaDePointExpressEnPrimeraRondaStageGroupII dataSegundaTandaDePointExpressEnPrimeraRondaStageGroupII dataRepechajeTandaDePointExpressEnPrimeraRondaStageGroupII dataPrimeraTandaDePointExpressEnPrimeraRondaStageGroupIII dataSegundaTandaDePointExpressEnPrimeraRondaStageGroupIII dataRepechajeTandaDePointExpressEnPrimeraRondaStageGroupIII dataPrimeraTandaDePointExpressEnPrimeraRondaStageGroupIV dataSegundaTandaDePointExpressEnPrimeraRondaStageGroupIV dataRepechajeTandaDePointExpressEnPrimeraRondaStageGroupIV dataPrimeraTandaDePointExpressEnRondaRevanchaStageGroup dataSegundaTandaDePointExpressEnRondaRevanchaStageGroup dataRepechajeTandaDePointExpressEnRondaRevanchaStageGroup dataPrimeraTandaDePointExpressEnRondaRevanchaStageGroupII dataSegundaTandaDePointExpressEnRondaRevanchaStageGroupII dataRepechajeTandaDePointExpressEnRondaRevanchaStageGroupII dataPrimeraTandaDePointExpressEnRondaRevanchaStageGroupIII dataSegundaTandaDePointExpressEnRondaRevanchaStageGroupIII dataRepechajeTandaDePointExpressEnRondaRevanchaStageGroupIII dataPrimeraTandaDePointExpressEnRondaRevanchaStageGroupIV dataSegundaTandaDePointExpressEnRondaRevanchaStageGroupIV dataRepechajeTandaDePointExpressEnRondaRevanchaStageGroupIV tituloTicket dataRanking dataInsideStageGroup'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'PreTicketStageGroup class' category: #CineWar!
PreTicketStageGroup class
	instanceVariableNames: ''!

!classDefinition: #PrecuelaTicket category: #CineWar!
Object subclass: #PrecuelaTicket
	instanceVariableNames: 'dataOutSidePeliculasEnStageGroup'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'PrecuelaTicket class' category: #CineWar!
PrecuelaTicket class
	instanceVariableNames: ''!

!classDefinition: #Procesador category: #CineWar!
Object subclass: #Procesador
	instanceVariableNames: 'finalTicket finalTicketStageGroup listaDePreticketPlayOffProcesados decodificador impresora finalPrecuelaTicket codificacionAuxiliarC codificacionAuxiliarB codificacionAuxiliarA finalTicketMvM listaDePreticketCineWarProcesados'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'Procesador class' category: #CineWar!
Procesador class
	instanceVariableNames: ''!

!classDefinition: #ProveedorDeCantidadDePeliculas category: #CineWar!
Object subclass: #ProveedorDeCantidadDePeliculas
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'ProveedorDeCantidadDePeliculas class' category: #CineWar!
ProveedorDeCantidadDePeliculas class
	instanceVariableNames: ''!

!classDefinition: #EstadoDeMasDeUnaPelicula category: #CineWar!
ProveedorDeCantidadDePeliculas subclass: #EstadoDeMasDeUnaPelicula
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoDeMasDeUnaPelicula class' category: #CineWar!
EstadoDeMasDeUnaPelicula class
	instanceVariableNames: ''!

!classDefinition: #EstadoDeUnaUnicaPelicula category: #CineWar!
ProveedorDeCantidadDePeliculas subclass: #EstadoDeUnaUnicaPelicula
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoDeUnaUnicaPelicula class' category: #CineWar!
EstadoDeUnaUnicaPelicula class
	instanceVariableNames: ''!

!classDefinition: #ProveedorDeEstadoCantidadDePeliculasEnLastRango category: #CineWar!
Object subclass: #ProveedorDeEstadoCantidadDePeliculasEnLastRango
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'ProveedorDeEstadoCantidadDePeliculasEnLastRango class' category: #CineWar!
ProveedorDeEstadoCantidadDePeliculasEnLastRango class
	instanceVariableNames: ''!

!classDefinition: #EstadoActualDeLastCupoConPeliculas category: #CineWar!
ProveedorDeEstadoCantidadDePeliculasEnLastRango subclass: #EstadoActualDeLastCupoConPeliculas
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoActualDeLastCupoConPeliculas class' category: #CineWar!
EstadoActualDeLastCupoConPeliculas class
	instanceVariableNames: ''!

!classDefinition: #EstadoActualDeUltimoCupoSinPeliculas category: #CineWar!
ProveedorDeEstadoCantidadDePeliculasEnLastRango subclass: #EstadoActualDeUltimoCupoSinPeliculas
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoActualDeUltimoCupoSinPeliculas class' category: #CineWar!
EstadoActualDeUltimoCupoSinPeliculas class
	instanceVariableNames: ''!

!classDefinition: #ProveedorDeEstadoDeCategoria category: #CineWar!
Object subclass: #ProveedorDeEstadoDeCategoria
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'ProveedorDeEstadoDeCategoria class' category: #CineWar!
ProveedorDeEstadoDeCategoria class
	instanceVariableNames: ''!

!classDefinition: #EstadoConPeliculasEnCategoria category: #CineWar!
ProveedorDeEstadoDeCategoria subclass: #EstadoConPeliculasEnCategoria
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoConPeliculasEnCategoria class' category: #CineWar!
EstadoConPeliculasEnCategoria class
	instanceVariableNames: ''!

!classDefinition: #EstadoSinPeliculasEnCategoria category: #CineWar!
ProveedorDeEstadoDeCategoria subclass: #EstadoSinPeliculasEnCategoria
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoSinPeliculasEnCategoria class' category: #CineWar!
EstadoSinPeliculasEnCategoria class
	instanceVariableNames: ''!

!classDefinition: #ProveedorDeEstadoDeZonaRoja category: #CineWar!
Object subclass: #ProveedorDeEstadoDeZonaRoja
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'ProveedorDeEstadoDeZonaRoja class' category: #CineWar!
ProveedorDeEstadoDeZonaRoja class
	instanceVariableNames: ''!

!classDefinition: #EstadoDeZonaConPeliculas category: #CineWar!
ProveedorDeEstadoDeZonaRoja subclass: #EstadoDeZonaConPeliculas
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoDeZonaConPeliculas class' category: #CineWar!
EstadoDeZonaConPeliculas class
	instanceVariableNames: ''!

!classDefinition: #EstadoDeZonaVacia category: #CineWar!
ProveedorDeEstadoDeZonaRoja subclass: #EstadoDeZonaVacia
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'EstadoDeZonaVacia class' category: #CineWar!
EstadoDeZonaVacia class
	instanceVariableNames: ''!

!classDefinition: #Puntaje category: #CineWar!
Object subclass: #Puntaje
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'Puntaje class' category: #CineWar!
Puntaje class
	instanceVariableNames: ''!

!classDefinition: #Negativo category: #CineWar!
Puntaje subclass: #Negativo
	instanceVariableNames: 'simbolo'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'Negativo class' category: #CineWar!
Negativo class
	instanceVariableNames: ''!

!classDefinition: #Positivo category: #CineWar!
Puntaje subclass: #Positivo
	instanceVariableNames: 'simbolo'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'Positivo class' category: #CineWar!
Positivo class
	instanceVariableNames: ''!

!classDefinition: #RecolectorDePuntos category: #CineWar!
Object subclass: #RecolectorDePuntos
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'RecolectorDePuntos class' category: #CineWar!
RecolectorDePuntos class
	instanceVariableNames: ''!

!classDefinition: #Registro category: #CineWar!
Object subclass: #Registro
	instanceVariableNames: 'baseDeDatos'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'Registro class' category: #CineWar!
Registro class
	instanceVariableNames: ''!

!classDefinition: #Simbolo category: #CineWar!
Object subclass: #Simbolo
	instanceVariableNames: 'idSimbolo'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'Simbolo class' category: #CineWar!
Simbolo class
	instanceVariableNames: ''!

!classDefinition: #O category: #CineWar!
Simbolo subclass: #O
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'O class' category: #CineWar!
O class
	instanceVariableNames: ''!

!classDefinition: #X category: #CineWar!
Simbolo subclass: #X
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'X class' category: #CineWar!
X class
	instanceVariableNames: ''!

!classDefinition: #SpinOff category: #CineWar!
Object subclass: #SpinOff
	instanceVariableNames: 'zonaEnRiesgo ganadorCupoReservado'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'SpinOff class' category: #CineWar!
SpinOff class
	instanceVariableNames: ''!

!classDefinition: #StageGroup category: #CineWar!
Object subclass: #StageGroup
	instanceVariableNames: 'peliculas registroPrimeraRonda registroRondaRevancha registroPuntajeTotal ranking bonus playOffOne playOffSecond playOffThird idStage pointExpress ticket preTicketBonusComodin preTicketBonusPromocion preTicketBonusInvitacion procesador'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'StageGroup class' category: #CineWar!
StageGroup class
	instanceVariableNames: ''!

!classDefinition: #SubTicketPlayOff category: #CineWar!
Object subclass: #SubTicketPlayOff
	instanceVariableNames: 'dataPrimerPunto dataSegundoPunto dataTercerPunto dataCuartoPunto dataQuintoPunto dataIntancePlayOff dataPeliculasEnVersus dataPuntoBlackPlayOffPeliculaA dataPuntoBlackPlayOffPeliculaB'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'SubTicketPlayOff class' category: #CineWar!
SubTicketPlayOff class
	instanceVariableNames: ''!

!classDefinition: #SumadorDePuntos category: #CineWar!
Object subclass: #SumadorDePuntos
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'SumadorDePuntos class' category: #CineWar!
SumadorDePuntos class
	instanceVariableNames: ''!

!classDefinition: #SumadorDePuntosPlayOff category: #CineWar!
Object subclass: #SumadorDePuntosPlayOff
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'SumadorDePuntosPlayOff class' category: #CineWar!
SumadorDePuntosPlayOff class
	instanceVariableNames: ''!

!classDefinition: #Zona category: #CineWar!
Object subclass: #Zona
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'Zona class' category: #CineWar!
Zona class
	instanceVariableNames: ''!

!classDefinition: #ZonaEnRiesgo category: #CineWar!
Zona subclass: #ZonaEnRiesgo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'ZonaEnRiesgo class' category: #CineWar!
ZonaEnRiesgo class
	instanceVariableNames: ''!

!classDefinition: #ZonaSegura category: #CineWar!
Zona subclass: #ZonaSegura
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CineWar'!
!classDefinition: 'ZonaSegura class' category: #CineWar!
ZonaSegura class
	instanceVariableNames: ''!


!BlackPlayOffTest methodsFor: 'Running' stamp: 'MB 3/23/2019 21:08:51'!
setUp
	blackPlayOff _ BlackPlayOff new.
	saw _ Pelicula
		nombre: 'Saw'
		genero: 'Suspenso'.
	residentEvil _ Pelicula
		nombre: 'Resident Evil'
		genero: 'Terror'.
	playOff _ PlayOff new.! !

!BlackPlayOffTest methodsFor: 'Test' stamp: 'MB 1/13/2019 21:20:55'!
test001_DespuesDeParticiparDeUnaRondaBlackPlayOffHayUnGanador


	blackPlayOff definirBlackPlayOff: saw vs: residentEvil en: playOff.
	
	
	Assert isTrue: playOff tieneUnGanador .! !

!BlackPlayOffTest methodsFor: 'Private Test - BlackPlayOff' stamp: 'MB 12/12/2018 15:09:27'!
test002_SIDespuesDeLaRondaBlackPlayOffLaPeliculaBFalloElPuntoTerminaLaPartida
	
	blackPlayOff
		registrarPuntajePositivoEn: blackPlayOff puntosPeliculaA
		en: playOff
		de: saw.
		
	blackPlayOff
		registrarPuntajeNegativoEn: blackPlayOff puntosPeliculaB
		en: playOff
		de: residentEvil.
		
	Assert
		that: (blackPlayOff unEstadoDeBlackPlayOff: saw vs: residentEvil en: playOff) isEqualTo: EstadoGanadorBlackPlayOffPeliculaA.! !

!BlackPlayOffTest methodsFor: 'Private Test - BlackPlayOff' stamp: 'MB 12/12/2018 15:08:08'!
test003_SIDespuesDeLaRondaBlackPlayOffNingunoFalloElPuntoTerminaLaPartida
	
	blackPlayOff
		registrarPuntajePositivoEn: blackPlayOff puntosPeliculaA
		en: playOff
		de: saw.
		
	blackPlayOff
		registrarPuntajePositivoEn: blackPlayOff puntosPeliculaB
		en: playOff
		de: residentEvil.
		
	Assert
		that: (blackPlayOff unEstadoDeBlackPlayOff: saw vs: residentEvil en: playOff) isEqualTo: EstadoBlackPlayOffEmpatado.! !

!BlackPlayOffTest methodsFor: 'Private Test - BlackPlayOff' stamp: 'MB 12/12/2018 15:10:17'!
test004_SIDespuesDeLaRondaBlackPlayOffLaPeliculaAFalloElPuntoTerminaLaPartida
	
	blackPlayOff
		registrarPuntajeNegativoEn: blackPlayOff puntosPeliculaA
		en: playOff
		de: saw.
		
	blackPlayOff
		registrarPuntajePositivoEn: blackPlayOff puntosPeliculaB
		en: playOff
		de: residentEvil.
		
	Assert
		that: (blackPlayOff unEstadoDeBlackPlayOff: saw vs: residentEvil en: playOff) isEqualTo: EstadoGanadorBlackPlayOffPeliculaB.! !

!CategoriaTest methodsFor: 'Running' stamp: 'MB 3/23/2019 22:55:32'!
setUp
	unaCategoria _ Tension new.
	unaPelicula _ Pelicula
		nombre: 'Saw'
		genero: 'Suspenso'.! !

!CategoriaTest methodsFor: 'Test' stamp: 'MB 11/1/2018 20:08:42'!
test001_UnaCategoriaNuevaEstaVacia


	Assert isTrue: unaCategoria noTienePeliculasRegistradas.! !

!CategoriaTest methodsFor: 'Test' stamp: 'MB 12/14/2018 16:34:43'!
test002_UnaCategoriaNoEstaVaciaCuandoTieneAlMenosUnaPeliculaRegistrada
	
	unaCategoria agregarPelicula: unaPelicula.
	
	Assert isTrue: (unaCategoria tienePelicula: unaPelicula).
	
	Assert isFalse: unaCategoria noTienePeliculasRegistradas.! !

!CineWarTest methodsFor: 'Running' stamp: 'MB 1/6/2021 00:33:23'!
setUp
	cineWar _ CineWar new.
	venom _ Pelicula
		nombre: 'Venom'
		genero: 'Heroes'.
	hackers _ Pelicula
		nombre: 'Hackers'
		genero: 'Drama'.
	deadPool2 _ Pelicula
		nombre: 'Deadpool 2'
		genero: 'Heroes'.
	elFinalDeTodo _ Pelicula
		nombre: 'El final de todo'
		genero: 'Zombie'.
	transformers _ Pelicula
		nombre: 'Transformers'
		genero: 'Accion'.
	sinRastro _ Pelicula
		nombre: 'Sin rastros'
		genero: 'Drama'.
	laMula _ Pelicula
		nombre: 'La mula'
		genero: 'Drama'.
	doceHorasParaSobrevivir _ Pelicula
		nombre: '12 horas para sobrevivir '
		genero: 'Suspenso'.
	residentEvil3 _ Pelicula
		nombre: 'Resident evil 3'
		genero: 'Zombie'.
	bestiaDeCarga _ Pelicula
		nombre: 'Bestia de carga'
		genero: 'Drama'.
	estacionZombie _ Pelicula
		nombre: 'Estacion zombie'
		genero: 'Zombie'.
	operacionOverlord _ Pelicula
		nombre: 'Operacion overlord'
		genero: 'Zombie'.
	matrix2 _ Pelicula
		nombre: 'Matrix 2'
		genero: 'Ciencia Ficcion'.
	yaNoMeSientoAGustoEnEsteMundo _ Pelicula
		nombre: 'Ya no me siento a gusto en este mundo'
		genero: 'Drama'.
	vhs2 _ Pelicula
		nombre: 'Vhs 2'
		genero: 'Terror'.
	tierraHostil _ Pelicula
		nombre: 'Tierra hostil'
		genero: 'Belica'.
	laFormaDelAgua _ Pelicula
		nombre: 'La forma del agua'
		genero: 'Ciencia Ficcion'.
	camaraOscura _ Pelicula
		nombre: 'Camara oscura'
		genero: 'Suspenso'.
	tombRaider _ Pelicula
		nombre: 'Tomb raider'
		genero: 'Heroes'.
	jackass _ Pelicula
		nombre: 'Jackass'
		genero: 'Comedia'.
	piratasDelCaribe4 _ Pelicula
		nombre: 'Piratas del caribe 4'
		genero: 'Aventura'.
	godzilla2 _ Pelicula
		nombre: 'Godzilla 2'
		genero: 'Fantasia'.
	escuadronT34 _ Pelicula
		nombre: 'EscuadronT34'
		genero: 'Belica'.
	pandillasSalvajes _ Pelicula
		nombre: 'Pandillas salvajes'
		genero: 'Drama'.
	maligno _ Pelicula
		nombre: 'Maligno'
		genero: 'Slasher'.
	elUltimoSoldado _ Pelicula
		nombre: 'El ultimo soldado'
		genero: 'Belica'.
	elProyectoAndromeda _ Pelicula
		nombre: 'El proyecto andromeda'
		genero: 'Ciencia Ficcion'.
	festinDiabolico _ Pelicula
		nombre: 'Festin diabolico'
		genero: 'Terror'.
	carreraDeLaMuerte _ Pelicula
		nombre: 'Carrera de la muerte'
		genero: 'Accion'.
	losIndestructibles2 _ Pelicula
		nombre: 'Los indestructibles 2'
		genero: 'Accion'.
	elAngel _ Pelicula
		nombre: 'El angel'
		genero: 'Drama'.
	viudas _ Pelicula
		nombre: 'Viudas'
		genero: 'Drama'.
	pacienteCero _ Pelicula
		nombre: 'Paciente cero'
		genero: 'Zombie'.
	masacreZombie _ Pelicula
		nombre: 'Masacre zombie'
		genero: 'Zombie'.
	asesinoCanibal _ Pelicula
		nombre: 'Asesino canibal'
		genero: 'Suspenso'.
	torturaExperimental _ Pelicula
		nombre: 'Tortura experimental'
		genero: 'Drama'.
	laListaNegra _ Pelicula
		nombre: 'La lista negra'
		genero: 'Drama'.
	adiosVayaConDios _ Pelicula
		nombre: 'Adios vaya con dios'
		genero: 'Drama'.
	asesinadaALos17 _ Pelicula
		nombre: 'Asesinada a los 17'
		genero: 'Suspenso'.
	laMorgue2 _ Pelicula
		nombre: 'La Morgue 2'
		genero: 'Terror'.
	laChicaEnLasFotografias _ Pelicula
		nombre: 'La chica en las fotografias'
		genero: 'Suspenso'.
	sombrasSalvajes _ Pelicula
		nombre: 'Sombras salvajes'
		genero: 'Suspenso'.
	elSeñorDeLosAnillos _ Pelicula
		nombre: 'El señor de los anillos'
		genero: 'Accion'.
	aire _ Pelicula
		nombre: 'Aire'
		genero: 'Drama'.
	elCuartoDelMiedo _ Pelicula
		nombre: 'El cuarto del miedo'
		genero: 'Terror'.
	elPrecioDeLaCodicia _ Pelicula
		nombre: 'El precio de la codicia'
		genero: 'Drama'.
	laNaranjaMecanica _ Pelicula
		nombre: 'La naranja mecanica'
		genero: 'Suspenso'.
	sietePecadosCapitales _ Pelicula
		nombre: 'Siete pecados capitales'
		genero: 'Suspenso'.
	elGranSecuestroDeMrHeineken _ Pelicula
		nombre: 'El gran secuestro de mr heineken'
		genero: 'RoyalLife'.
	efectoMariposa3 _ Pelicula
		nombre: 'Efecto mariposa 3'
		genero: 'Drama'.
	johnCarter _ Pelicula
		nombre: 'John carter'
		genero: 'Fantasia'.
	sinCity _ Pelicula
		nombre: 'Sin city '
		genero: 'Accion'.
	dias3096 _ Pelicula
		nombre: '3096 dias'
		genero: 'RoyalLife'.
	panicoYLocuraEnLasVegas _ Pelicula
		nombre: 'Panico y locura en las vegas'
		genero: 'Comedia'.
	puntoMuerto _ Pelicula
		nombre: 'Punto muerto '
		genero: 'Accion'.
	inmigrantesilegales _ Pelicula
		nombre: 'Inmigrantes ilegales'
		genero: 'Drama'.
	alLimite _ Pelicula
		nombre: 'Al limite'
		genero: 'Drama'.
	angelesYDemonios _ Pelicula
		nombre: 'Angeles & demonios'
		genero: 'Suspenso'.
	aplicacionSiniestra _ Pelicula
		nombre: 'Aplicacion siniestra'
		genero: 'Suspenso'.
	titeresAsesinos _ Pelicula
		nombre: 'Titeres asesinos'
		genero: 'Terror'.
	laDamaDeNegro _ Pelicula
		nombre: 'La dama de negro'
		genero: 'Terror'.
	elDiaDeLosMuertosVivientes2 _ Pelicula
		nombre: 'El dia de los muertos vivientes 2'
		genero: 'Zombie'.
	grandTheftAuto _ Pelicula
		nombre: 'Grand theft auto'
		genero: 'RoyalLife'.
	nadaEsLoQueParece2 _ Pelicula
		nombre: 'Nada es lo que parece 2'
		genero: 'Aventura'.
	destinoFinal3 _ Pelicula
		nombre: 'Destino Final 3'
		genero: 'Suspenso'.
	apocalipto _ Pelicula
		nombre: 'Apocalipto'
		genero: 'Drama'.
	veintiDosDeJulio _ Pelicula
		nombre: '22 De Julio'
		genero: 'Belica'.
	papillonLaGranFuga _ Pelicula
		nombre: 'Papillon la gran fuga'
		genero: 'Accion'.
	elCamino _ Pelicula
		nombre: 'El Camino'
		genero: 'Drama'.
	elRoboDelSiglo _ Pelicula
		nombre: 'El robo del siglo'
		genero: 'Drama'.
	solosEnElFinDelMundo _ Pelicula
		nombre: 'Solos en el fin del mundo'
		genero: 'Accion'.
	parasitos _ Pelicula
		nombre: 'Parasitos'
		genero: 'Drama'.
	fragmentado _ Pelicula
		nombre: 'Fragmentado'
		genero: 'Drama'.
	
	
	
	
	cineWar
		asignarPeliculaReservadaI: elFinalDeTodo ;
		asignarPeliculaReservadaII: deadPool2 ;
		asignarPeliculaReservadaIII: sinCity ;
		asignarPeliculaReservadaIV: angelesYDemonios .
	cineWar
		inscribirPelicula: venom;
		inscribirPelicula: hackers;
		inscribirPelicula: deadPool2;
		inscribirPelicula: elFinalDeTodo;
		inscribirPelicula: transformers;
		inscribirPelicula: sinRastro;
		inscribirPelicula: laMula;
		inscribirPelicula: doceHorasParaSobrevivir;
		inscribirPelicula: residentEvil3;
		inscribirPelicula: bestiaDeCarga;
		inscribirPelicula: estacionZombie;
		inscribirPelicula: operacionOverlord;
		inscribirPelicula: matrix2;
		inscribirPelicula: yaNoMeSientoAGustoEnEsteMundo;
		inscribirPelicula: vhs2;
		inscribirPelicula: tierraHostil;
		inscribirPelicula: laFormaDelAgua;
		inscribirPelicula: camaraOscura;
		inscribirPelicula: tombRaider;
		inscribirPelicula: jackass;
		inscribirPelicula: piratasDelCaribe4;
		inscribirPelicula: godzilla2;
		inscribirPelicula: escuadronT34;
		inscribirPelicula: maligno;
		inscribirPelicula: elUltimoSoldado;
		inscribirPelicula: elProyectoAndromeda;
		inscribirPelicula: festinDiabolico;
		inscribirPelicula: carreraDeLaMuerte;
		inscribirPelicula: elAngel;
		inscribirPelicula: viudas;
		inscribirPelicula: pacienteCero;
		inscribirPelicula: masacreZombie;
		inscribirPelicula: asesinoCanibal;
		inscribirPelicula: losIndestructibles2;
		inscribirPelicula: torturaExperimental;
		inscribirPelicula: laListaNegra;
		inscribirPelicula: adiosVayaConDios;
		inscribirPelicula: asesinadaALos17;
		inscribirPelicula: laMorgue2;
		inscribirPelicula: laChicaEnLasFotografias;
		inscribirPelicula: sombrasSalvajes;
		inscribirPelicula: elSeñorDeLosAnillos;
		inscribirPelicula: aire;
		inscribirPelicula: elCuartoDelMiedo;
		inscribirPelicula: elPrecioDeLaCodicia;
		inscribirPelicula: laNaranjaMecanica;
		inscribirPelicula: sietePecadosCapitales;
		inscribirPelicula: elGranSecuestroDeMrHeineken;
		inscribirPelicula: efectoMariposa3;
		inscribirPelicula: johnCarter;
		inscribirPelicula: sinCity;
		inscribirPelicula: dias3096;
		inscribirPelicula: panicoYLocuraEnLasVegas;
		inscribirPelicula: puntoMuerto;
		inscribirPelicula: inmigrantesilegales;
		inscribirPelicula: alLimite;
		inscribirPelicula: angelesYDemonios;
		inscribirPelicula: aplicacionSiniestra;
		inscribirPelicula: titeresAsesinos;
		inscribirPelicula: laDamaDeNegro;
		inscribirPelicula: elDiaDeLosMuertosVivientes2;
		inscribirPelicula: grandTheftAuto;
		inscribirPelicula: nadaEsLoQueParece2;
		inscribirPelicula: destinoFinal3;
		inscribirPelicula: apocalipto;
		inscribirPelicula: veintiDosDeJulio;
		inscribirPelicula: papillonLaGranFuga;
		inscribirPelicula: elCamino;
		inscribirPelicula: fragmentado ;
		inscribirPelicula: parasitos ;
		inscribirPelicula: elRoboDelSiglo ;
		inscribirPelicula: solosEnElFinDelMundo .! !

!CineWarTest methodsFor: 'Test' stamp: 'MB 4/6/2020 22:56:09'!
test000_CineWarNoPuedeInscribrirUnaPeliculaEnUnLeaguePorQueNoExisteGeneroPerteneciente
	| unaPelicula |
	unaPelicula _ Pelicula
		nombre: 'Cien Metros sobre el cielo'
		genero: 'Romantico'.
	Assert
		should: [ cineWar inscribirPelicula: unaPelicula ]
		signal: Error
		withDescription: 'No existe el genero de la pelicula en ninguna categoria'.! !

!CineWarTest methodsFor: 'Test' stamp: 'MB 4/6/2020 22:56:12'!
test001_CineWarInscribeUnaPeliculaEnUnLeague
	| unaPelicula |
	unaPelicula _ Pelicula
		nombre: 'Saw 7'
		genero: 'Suspenso'.
	cineWar inscribirPelicula: unaPelicula.
	Assert isTrue: (cineWar tieneInscripto: unaPelicula).! !

!CineWarTest methodsFor: 'Test' stamp: 'MB 4/10/2020 01:57:55'!
test002_CineWarDefineChampionshipCineWar
	cineWar definirChampionshipCineWar.
	Assert isTrue: cineWar cumpleConLosRequerimientoDeTodosStagueGroup.
	Assert isTrue: cineWar cumpleConLosRequerimientoDeTodosIntroMvM.
	Assert isTrue: cineWar cumpleConLosRequerimientoDeTodosPreEndMvM.
	Assert isTrue: cineWar cumpleConLosRequerimientoDeElEndMvM.
	Assert isTrue: cineWar tieneGanadorCineWar.! !

!CineWarTest methodsFor: 'Private Test - Coliseum' stamp: 'MB 4/6/2020 22:56:09'!
test003_CineWarDespuesDeLosSpinOffNoDebeTenerElTicketPrecuelaVacio
	cineWar
		armarStageReservadoConId: cineWar stageA;
		armarStageConId: cineWar stageB;
		armarStageConId: cineWar stageC;
		armarStageConId: cineWar stageD.
	cineWar league registrarPeliculasOutsideStageGroupEnTicket: cineWar precuelaTicket.
	Assert isTrue: cineWar noTieneTicketPrecuelaVacio.! !

!CineWarTest methodsFor: 'Private Test - Coliseum' stamp: 'MB 4/6/2020 22:56:09'!
test004_CineWarDespuesDeLosStageGroupNoDebeTenerElTicketStageGroupVacio
	cineWar
		armarStageReservadoConId: cineWar stageA;
		armarStageConId: cineWar stageB;
		armarStageConId: cineWar stageC;
		armarStageConId: cineWar stageD.
	cineWar league registrarPeliculasOutsideStageGroupEnTicket: cineWar precuelaTicket.
	cineWar stageA definirStageGroupEnTicket: cineWar preticketstagegroupI.
	cineWar stageB definirStageGroupEnTicket: cineWar preticketstagegroupII.
	cineWar stageC definirStageGroupEnTicket: cineWar preticketstagegroupIII.
	cineWar stageD definirStageGroupEnTicket: cineWar preticketstagegroupIV.
	Assert isTrue: cineWar noTieneTicketsStageGroupVacio.! !

!CineWarTest methodsFor: 'Private Test - Coliseum' stamp: 'MB 4/6/2020 22:56:09'!
test005_CineWarDespuesDeLosIntroMvMNoDebeTenerElTicketColiseumVacio
	cineWar
		armarStageReservadoConId: cineWar stageA;
		armarStageConId: cineWar stageB;
		armarStageConId: cineWar stageC;
		armarStageConId: cineWar stageD.
	cineWar league registrarPeliculasOutsideStageGroupEnTicket: cineWar precuelaTicket.
	cineWar stageA definirStageGroupEnTicket: cineWar preticketstagegroupI.
	cineWar stageB definirStageGroupEnTicket: cineWar preticketstagegroupII.
	cineWar stageC definirStageGroupEnTicket: cineWar preticketstagegroupIII.
	cineWar stageD definirStageGroupEnTicket: cineWar preticketstagegroupIV.
	cineWar armarIntroMvM.
	cineWar introMvMA
		mvmEntre: cineWar introMvMA ganadorComodin
		vs: cineWar introMvMA ganadorPromocion
		enTicket: cineWar preticketMvM.
	cineWar introMvMB
		mvmEntre: cineWar introMvMB ganadorComodin
		vs: cineWar introMvMB ganadorPromocion
		enTicket: cineWar preticketMvM.
	cineWar introMvMC
		mvmEntre: cineWar introMvMC ganadorComodin
		vs: cineWar introMvMC ganadorPromocion
		enTicket: cineWar preticketMvM.
	cineWar introMvMD
		mvmEntre: cineWar introMvMD ganadorComodin
		vs: cineWar introMvMD ganadorPromocion
		enTicket: cineWar preticketMvM.
	Assert isTrue: cineWar noTieneTicketIntroMvMVacio.! !

!CineWarTest methodsFor: 'Private Test - Coliseum' stamp: 'MB 4/6/2020 22:56:12'!
test006_CineWarDespuesDeLosPreEndMvMNoDebeTenerElTicketColiseumMvMVacio
	cineWar
		armarStageReservadoConId: cineWar stageA;
		armarStageConId: cineWar stageB;
		armarStageConId: cineWar stageC;
		armarStageConId: cineWar stageD.
	cineWar league registrarPeliculasOutsideStageGroupEnTicket: cineWar precuelaTicket.
	cineWar stageA definirStageGroupEnTicket: cineWar preticketstagegroupI.
	cineWar stageB definirStageGroupEnTicket: cineWar preticketstagegroupII.
	cineWar stageC definirStageGroupEnTicket: cineWar preticketstagegroupIII.
	cineWar stageD definirStageGroupEnTicket: cineWar preticketstagegroupIV.
	cineWar armarIntroMvM.
	cineWar introMvMA
		mvmEntre: cineWar introMvMA ganadorComodin
		vs: cineWar introMvMA ganadorPromocion
		enTicket: cineWar preticketMvM.
	cineWar introMvMB
		mvmEntre: cineWar introMvMB ganadorComodin
		vs: cineWar introMvMB ganadorPromocion
		enTicket: cineWar preticketMvM.
	cineWar introMvMC
		mvmEntre: cineWar introMvMC ganadorComodin
		vs: cineWar introMvMC ganadorPromocion
		enTicket: cineWar preticketMvM.
	cineWar introMvMD
		mvmEntre: cineWar introMvMD ganadorComodin
		vs: cineWar introMvMD ganadorPromocion
		enTicket: cineWar preticketMvM.
	cineWar armarPreEndMvM.
	cineWar preEndMvMA
		preEndMvMEntre: cineWar preEndMvMA ganadorIntroMvMA
		vs: cineWar preEndMvMA ganadorIntroMvMB
		enTicket: cineWar preticketMvM.
	cineWar preEndMvMB
		preEndMvMEntre: cineWar preEndMvMB ganadorIntroMvMA
		vs: cineWar preEndMvMB ganadorIntroMvMB
		enTicket: cineWar preticketMvM.
	Assert isTrue: cineWar noTieneTicketPreEndMvM.! !

!CineWarTest methodsFor: 'Private Test - Coliseum' stamp: 'MB 4/6/2020 22:56:12'!
test007_CineWarDespuesDeElEndMvMNoDebeTenerElTicketColiseumMvMVacio
	cineWar
		armarStageReservadoConId: cineWar stageA;
		armarStageConId: cineWar stageB;
		armarStageConId: cineWar stageC;
		armarStageConId: cineWar stageD.
	cineWar league registrarPeliculasOutsideStageGroupEnTicket: cineWar precuelaTicket.
	cineWar stageA definirStageGroupEnTicket: cineWar preticketstagegroupI.
	cineWar stageB definirStageGroupEnTicket: cineWar preticketstagegroupII.
	cineWar stageC definirStageGroupEnTicket: cineWar preticketstagegroupIII.
	cineWar stageD definirStageGroupEnTicket: cineWar preticketstagegroupIV.
	cineWar armarIntroMvM.
	cineWar introMvMA
		mvmEntre: cineWar introMvMA ganadorComodin
		vs: cineWar introMvMA ganadorPromocion
		enTicket: cineWar preticketMvM.
	cineWar introMvMB
		mvmEntre: cineWar introMvMB ganadorComodin
		vs: cineWar introMvMB ganadorPromocion
		enTicket: cineWar preticketMvM.
	cineWar introMvMC
		mvmEntre: cineWar introMvMC ganadorComodin
		vs: cineWar introMvMC ganadorPromocion
		enTicket: cineWar preticketMvM.
	cineWar introMvMD
		mvmEntre: cineWar introMvMD ganadorComodin
		vs: cineWar introMvMD ganadorPromocion
		enTicket: cineWar preticketMvM.
	cineWar armarPreEndMvM.
	cineWar preEndMvMA
		preEndMvMEntre: cineWar preEndMvMA ganadorIntroMvMA
		vs: cineWar preEndMvMA ganadorIntroMvMB
		enTicket: cineWar preticketMvM.
	cineWar preEndMvMB
		preEndMvMEntre: cineWar preEndMvMB ganadorIntroMvMA
		vs: cineWar preEndMvMB ganadorIntroMvMB
		enTicket: cineWar preticketMvM.
	cineWar armarEndMvM.
	cineWar endMvM
		endMvmEntre: cineWar endMvM endMvmFinalistaA
		vs: cineWar endMvM endMvMFinalistaB
		enTicket: cineWar preticketMvM.
	Assert isTrue: cineWar noTieneTicketEndMvMVacio.! !

!CineWarTest methodsFor: 'Private Test - Coliseum' stamp: 'MB 4/6/2020 22:57:26'!
test008_CineWarDespuesDelCineWarNoDebeTenerElTicketPlayOffVacio
	cineWar
		armarStageReservadoConId: cineWar stageA;
		armarStageConId: cineWar stageB;
		armarStageConId: cineWar stageC;
		armarStageConId: cineWar stageD.
	cineWar league registrarPeliculasOutsideStageGroupEnTicket: cineWar precuelaTicket.
	cineWar stageA definirStageGroupEnTicket: cineWar preticketstagegroupI.
	cineWar stageB definirStageGroupEnTicket: cineWar preticketstagegroupII.
	cineWar stageC definirStageGroupEnTicket: cineWar preticketstagegroupIII.
	cineWar stageD definirStageGroupEnTicket: cineWar preticketstagegroupIV.
	cineWar armarIntroMvM.
	cineWar introMvMA
		mvmEntre: cineWar introMvMA ganadorComodin
		vs: cineWar introMvMA ganadorPromocion
		enTicket: cineWar preticketMvM.
	cineWar introMvMB
		mvmEntre: cineWar introMvMB ganadorComodin
		vs: cineWar introMvMB ganadorPromocion
		enTicket: cineWar preticketMvM.
	cineWar introMvMC
		mvmEntre: cineWar introMvMC ganadorComodin
		vs: cineWar introMvMC ganadorPromocion
		enTicket: cineWar preticketMvM.
	cineWar introMvMD
		mvmEntre: cineWar introMvMD ganadorComodin
		vs: cineWar introMvMD ganadorPromocion
		enTicket: cineWar preticketMvM.
	cineWar armarPreEndMvM.
	cineWar preEndMvMA
		preEndMvMEntre: cineWar preEndMvMA ganadorIntroMvMA
		vs: cineWar preEndMvMA ganadorIntroMvMB
		enTicket: cineWar preticketMvM.
	cineWar preEndMvMB
		preEndMvMEntre: cineWar preEndMvMB ganadorIntroMvMA
		vs: cineWar preEndMvMB ganadorIntroMvMB
		enTicket: cineWar preticketMvM.
	cineWar armarEndMvM.
	cineWar endMvM
		endMvmEntre: cineWar endMvM endMvmFinalistaA
		vs: cineWar endMvM endMvMFinalistaB
		enTicket: cineWar preticketMvM.
	Assert isTrue: cineWar noTieneTicketEndMvMVacio.! !

!CineWarTest methodsFor: 'Private Test - Coliseum' stamp: 'MB 4/6/2020 23:23:07'!
test009_CineWarNoEmpiezaSiNoCumpleConLaCantidaMinimaDePeliculasInscriptasEnCategoriasYEnPeliculasReservadas
	| unColi p1 |
	p1 _ Pelicula
		nombre: 'Venom'
		genero: 'Heroe'.
	unColi _ CineWar new.
	unColi asignarPeliculaReservadaI: p1.
	Assert
		should: [ unColi definirChampionshipCineWar ]
		signal: Error
		withDescription: 'No hay suficientes peliculas inscriptas, capacidad minima: 16 peliculas ( 12 libres + 4 reservado )'.! !

!CineWarTest methodsFor: 'Private Test - Coliseum' stamp: 'MB 4/6/2020 23:23:07'!
test010_CineWarNoEmpiezaSiNoCumpleConLaCantidaMinimaDePeliculasInscriptasEnCategorias
	| unColiseum p1 p2 p3 p4 |
	p1 _ Pelicula
		nombre: 'Venom'
		genero: 'Heroe'.
	p2 _ Pelicula
		nombre: 'Venom'
		genero: 'Heroe'.
	p3 _ Pelicula
		nombre: 'Venom'
		genero: 'Heroe'.
	p4 _ Pelicula
		nombre: 'Venom'
		genero: 'Heroe'.
	unColiseum _ CineWar new.
	unColiseum
		asignarPeliculaReservadaI: p1;
		asignarPeliculaReservadaII: p2;
		asignarPeliculaReservadaIII: p3;
		asignarPeliculaReservadaIV: p4.
	Assert
		should: [ unColiseum definirChampionshipCineWar ]
		signal: Error
		withDescription: 'Cumples con las peliculas reservadas pero no hay suficientes peliculas inscriptas: 12 Peliculas'.! !

!CineWarTest methodsFor: 'Private Test - Coliseum' stamp: 'MB 4/6/2020 23:23:07'!
test011_CineWarNoEmpiezaSiNoCumpleConLasPeliculasReservadas
	| unColiseum p1 p2 p3 p4 p5 p6 p7 p8 p9 p10 p11 p12 |
	p1 _ Pelicula
		nombre: 'Venom'
		genero: 'Heroes'.
	p2 _ Pelicula
		nombre: 'Venom'
		genero: 'Heroes'.
	p3 _ Pelicula
		nombre: 'Venom'
		genero: 'Heroes'.
	p4 _ Pelicula
		nombre: 'Venom'
		genero: 'Heroes'.
	p5 _ Pelicula
		nombre: 'Venom'
		genero: 'Heroes'.
	p6 _ Pelicula
		nombre: 'Venom'
		genero: 'Heroes'.
	p7 _ Pelicula
		nombre: 'Venom'
		genero: 'Heroes'.
	p8 _ Pelicula
		nombre: 'Venom'
		genero: 'Heroes'.
	p9 _ Pelicula
		nombre: 'Venom'
		genero: 'Heroes'.
	p10 _ Pelicula
		nombre: 'Venom'
		genero: 'Heroes'.
	p11 _ Pelicula
		nombre: 'Venom'
		genero: 'Heroes'.
	p12 _ Pelicula
		nombre: 'Venom'
		genero: 'Heroes'.
	unColiseum _ CineWar new.
	unColiseum
		inscribirPelicula: p1;
		inscribirPelicula: p2;
		inscribirPelicula: p3;
		inscribirPelicula: p4;
		inscribirPelicula: p5;
		inscribirPelicula: p6;
		inscribirPelicula: p7;
		inscribirPelicula: p8;
		inscribirPelicula: p9;
		inscribirPelicula: p10;
		inscribirPelicula: p11;
		inscribirPelicula: p12.
	Assert
		should: [ unColiseum definirChampionshipCineWar ]
		signal: Error
		withDescription: 'Cumples con la cantidad de peliculas inscriptas pero no con las peliculas reservadas'.! !

!EndMvMTest methodsFor: 'Running' stamp: 'MB 8/17/2019 14:32:18'!
setUp
	endMvM _ EndMvM idMvM: 'A'.
	saw _ Pelicula
		nombre: 'Saw'
		genero: 'Suspenso'.
	residentEvil _ Pelicula
		nombre: 'Resident Evil'
		genero: 'Terror'.! !

!EndMvMTest methodsFor: 'Test' stamp: 'MB 8/17/2019 14:32:18'!
test001_EnfrentarEnEndMvMEntreDosPeliculas
	endMvM
		realizarPrimeraRondaMvM: saw
		vs: residentEvil
		enTicket: endMvM ticket.
	endMvM
		realizarRevanchaMvM: saw
		vs: residentEvil
		enTicket: endMvM ticket.
	endMvM
		definirGanadorEndMvMEntre: saw
		vs: residentEvil.
	Assert isTrue: (endMvM ganoElEndMvM: saw) | (endMvM ganoElEndMvM: residentEvil).! !

!EndMvMTest methodsFor: 'Private test - EndMvM' stamp: 'MB 8/17/2019 14:32:19'!
test002_EnCasoDeGanarLaPeliculaASeCoronaGanadorEndMvM
	endMvM global
		guardarPuntaje: 20
		de: saw.
	endMvM global
		guardarPuntaje: 10
		de: residentEvil.
	endMvM
		definirGanadorMvMEntre: saw
		vs: residentEvil.
	Assert isTrue: (endMvM ganoElEndMvM: saw) | (endMvM ganoElEndMvM: residentEvil).! !

!EndMvMTest methodsFor: 'Private test - EndMvM' stamp: 'MB 8/17/2019 14:32:18'!
test003_EnCasoDeGanarLaPeliculaBSeCoronaGanadorEndMvM
	endMvM global
		guardarPuntaje: 10
		de: saw.
	endMvM global
		guardarPuntaje: 20
		de: residentEvil.
	endMvM
		definirGanadorMvMEntre: saw
		vs: residentEvil.
	Assert isTrue: (endMvM ganoElEndMvM: saw) | (endMvM ganoElEndMvM: residentEvil).! !

!EndMvMTest methodsFor: 'Private test - EndMvM' stamp: 'MB 8/18/2019 00:14:24'!
test004_EnCasoDeEmpatePreEndMvMSeCoronaAlGanadorConPlayOff
	endMvM global
		guardarPuntaje: 20
		de: saw.
	endMvM global
		guardarPuntaje: 20
		de: residentEvil.
	endMvM
		definirGanadorEndMvMEntre: saw
		vs: residentEvil.
	Assert isTrue: (endMvM ganoElEndMvM: saw) | (endMvM ganoElEndMvM: residentEvil).! !

!IntroMvMTest methodsFor: 'Running' stamp: 'MB 8/12/2019 19:18:50'!
setUp
	intro _ IntroMvM idMvM: 'A'.
	saw _ Pelicula
		nombre: 'Saw'
		genero: 'Suspenso'.
	residentEvil _ Pelicula
		nombre: 'Resident Evil'
		genero: 'Terror'.
	intro asignarGanadorDeUnComodin: saw.
	intro asignarGanadorDeUnPromocion: residentEvil.! !

!IntroMvMTest methodsFor: 'Test' stamp: 'MB 8/12/2019 19:46:33'!
test001_UnIntroMvMTieneUnGanadorDeUnComodin
	Assert isTrue: intro tieneUnGanadorDeComodin.
	Assert
		that: intro ganadorComodin
		isEqualTo: saw.! !

!IntroMvMTest methodsFor: 'Test' stamp: 'MB 8/12/2019 19:46:53'!
test002_UnIntroMvMTieneUnGanadorDeUnPromocion
	Assert isTrue: intro tieneUnGanadorDePromocion.
	Assert
		that: intro ganadorPromocion
		isEqualTo: residentEvil.! !

!IntroMvMTest methodsFor: 'Test' stamp: 'MB 8/12/2019 19:54:06'!
test003_EnfrentarEnMvMAlGanadorDeComodinVsGanadorPromocion
	intro
		mvmEntre: saw
		vs: residentEvil
		enTicket: intro ticket.
	Assert isTrue: (intro ganoIntroMvM: saw) | (intro ganoIntroMvM: residentEvil).! !

!IntroMvMTest methodsFor: 'Private Test - IntroMvM' stamp: 'MB 8/12/2019 19:54:26'!
test004_EnCasoDeGanarLaPeliculaASeCoronaGanadorIntroMvM
	intro global
		guardarPuntaje: 20
		de: saw.
	intro global
		guardarPuntaje: 10
		de: residentEvil.
	intro
		definirGanadorMvMEntre: saw
		vs: residentEvil.
	Assert isTrue: (intro ganoIntroMvM: saw) | (intro ganoIntroMvM: residentEvil).! !

!IntroMvMTest methodsFor: 'Private Test - IntroMvM' stamp: 'MB 8/12/2019 19:54:50'!
test005_EnCasoDeGanarLaPeliculaBSeCoronaGanadorIntroMvM
	intro global
		guardarPuntaje: 10
		de: saw.
	intro global
		guardarPuntaje: 20
		de: residentEvil.
	intro
		definirGanadorMvMEntre: saw
		vs: residentEvil.
	Assert isTrue: (intro ganoIntroMvM: saw) | (intro ganoIntroMvM: residentEvil).! !

!IntroMvMTest methodsFor: 'Private Test - IntroMvM' stamp: 'MB 8/12/2019 19:20:46'!
test006_EnCasoDeEmpateSeCoronaGanadorAlGanadorComodin
	intro global
		guardarPuntaje: 20
		de: saw.
	intro global
		guardarPuntaje: 20
		de: residentEvil.
	intro
		definirGanadorMvMEntre: saw
		vs: residentEvil.
	Assert isTrue: (intro ganoIntroMvM: saw) | (intro ganoIntroMvM: residentEvil).! !

!LeagueTest methodsFor: 'Running' stamp: 'MB 7/26/2019 18:23:45'!
setUp
	league _ League new.
	
	destinoFinal _ Pelicula
		nombre: 'Destino Final'
		genero: 'Suspenso'.
		
	residentEvil _ Pelicula
		nombre: 'Resident Evil'
		genero: 'Zombie'.
	
	animal _ Pelicula
		nombre: 'Animal'
		genero: 'Drama'.
	torturaExperimental _ Pelicula
		nombre: 'Tortura experimental'
		genero: 'Ciencia Ficcion'.
	entreSombras _ Pelicula
		nombre: 'Entre sombras'
		genero: 'Drama'.
	adios _ Pelicula
		nombre: 'Adios'
		genero: 'Drama'.
	masacreZombie _ Pelicula
		nombre: 'Masacre zombie'
		genero: 'Zombie'.
	estacionZombie _ Pelicula
		nombre: 'Estacion zombie'
		genero: 'Zombie'.
	elFinalDeTodo _ Pelicula
		nombre: 'El final de todo'
		genero: 'Zombie'.
	veintiCuatroHorasParaVivir _ Pelicula
		nombre: '24 horas para vivir'
		genero: 'Accion'.
	venom _ Pelicula
		nombre: 'Venom'
		genero: 'Heroe'.
	losIndestructibles _ Pelicula
		nombre: 'Los indestructibles'
		genero: 'Accion'.
	bestiaDeCarga _ Pelicula
		nombre: 'Bestia de carga'
		genero: 'Accion'.
	matrix2 _ Pelicula
		nombre: 'Matrix 2'
		genero: 'Ciencia Ficcion'.
	venyEncuentrame _ Pelicula
		nombre: 'Ven y encuentrame'
		genero: 'Accion'.
	tombRaider _ Pelicula
		nombre: 'Tomb raider'
		genero: 'Heroe'.
	transformers _ Pelicula
		nombre: 'Transformers'
		genero: 'Ciencia Ficcion'.
	nadaEsloQueParece2 _ Pelicula
		nombre: 'Nada es lo que parece 2'
		genero: 'Aventura'.
	todosContraFuego _ Pelicula
		nombre: 'todosContraFuego'
		genero: 'Drama'.
	ghostRider3 _ Pelicula
		nombre: 'Ghost rider 3'
		genero: 'Heroe'.
	piratasDeCaribe3 _ Pelicula
		nombre: 'Piratas de caribe 3'
		genero: 'Aventura'.
	yaNoMeSientoAGustoEnEsteMundo _ Pelicula
		nombre: 'Ya no me siento a gusto en este mundo'
		genero: 'Drama'.
	residentEvil2 _ Pelicula
		nombre: 'Resident evil 2'
		genero: 'Zombie'.
	hellFest _ Pelicula
		nombre: 'HellFest'
		genero: 'Suspenso'.
	vhs2 _ Pelicula
		nombre: 'Vhs 2'
		genero: 'Terror'.
	historiaDeUltratumba _ Pelicula
		nombre: 'Historia de ultratumba'
		genero: 'Psicologico'.
	gonjiam _ Pelicula
		nombre: 'Gonjiam'
		genero: 'Psicologico'.
	laMorgue2 _ Pelicula
		nombre: 'La morgue 2'
		genero: 'Terror'.
	elSandman _ Pelicula
		nombre: 'El Sandman '
		genero: 'Slasher'.
	doceHorasParaVivir _ Pelicula
		nombre: '12 horas para vivir'
		genero: 'Accion'.
	saw7 _ Pelicula
		nombre: 'Saw 7'
		genero: 'Suspenso'.
	camaraOscura _ Pelicula
		nombre: 'Camara oscura'
		genero: 'Suspenso'.
	laChicaEnLasFotografias _ Pelicula
		nombre: 'La chica en las fotografias'
		genero: 'Suspenso'.
	asesinadaALos17 _ Pelicula
		nombre: 'Asesinada a los 17'
		genero: 'Drama'.
	
	
	league categoriaTension 
		agregarPelicula: saw7;
		agregarPelicula: destinoFinal;
		agregarPelicula: asesinadaALos17;
		agregarPelicula: animal;
		agregarPelicula: torturaExperimental;
		agregarPelicula: entreSombras;
		agregarPelicula: laChicaEnLasFotografias;
		agregarPelicula: camaraOscura ;
		agregarPelicula: yaNoMeSientoAGustoEnEsteMundo ;
		agregarPelicula: laChicaEnLasFotografias ;
		agregarPelicula: adios ;
		agregarPelicula: todosContraFuego .
		
	league categoriaEntretenimiento 
		agregarPelicula: venom;
		agregarPelicula: losIndestructibles;
		agregarPelicula: bestiaDeCarga;
		agregarPelicula: matrix2;
		agregarPelicula: transformers ;
		agregarPelicula: tombRaider ;
		agregarPelicula: piratasDeCaribe3 ;
		agregarPelicula: ghostRider3 ;
		agregarPelicula: veintiCuatroHorasParaVivir ;
		agregarPelicula: venyEncuentrame ;
		agregarPelicula: doceHorasParaVivir .
		
		
	league categoriaHorror 
		agregarPelicula: vhs2;
		agregarPelicula: historiaDeUltratumba;
		agregarPelicula: gonjiam;
		agregarPelicula: elSandman ;
		agregarPelicula: laMorgue2 ;
		agregarPelicula: masacreZombie ;
		agregarPelicula: estacionZombie ;
		agregarPelicula: elFinalDeTodo ;
		agregarPelicula: residentEvil ;
		agregarPelicula: hellFest ;
		agregarPelicula: laChicaEnLasFotografias .
		.
! !

!LeagueTest methodsFor: 'Test' stamp: 'MB 7/26/2019 18:18:54'!
test001_UnLeagueNuevoTieneCategorias
	
	| leagueVacio |
	
	leagueVacio _ League new.
	
	Assert isFalse: leagueVacio noTieneCategorias.! !

!LeagueTest methodsFor: 'Test' stamp: 'MB 7/26/2019 18:25:57'!
test002_UnLeagueTieneAlMenosUnaCategoria
	Assert
		isFalse: league noTieneCategorias;
		isTrue: (league categorias includes: league categoriaEntretenimiento ).! !

!LeagueTest methodsFor: 'Test' stamp: 'MB 7/26/2019 18:26:15'!
test003_UnLeagueRetornaElGanadorDeUnaCategoria
	league ganadorDeCategoria: league categoriaEntretenimiento .
	Assert isTrue: league tieneUnGanador.! !

!LeagueTest methodsFor: 'Private Test - League' stamp: 'MB 12/27/2018 16:54:17'!
test004_LeagueDefineUnaPeliculaDeCupoOne
	
	league mejorPeliculaDeCupoOne.
	
	Assert isTrue: league tieneUnGanadorDeRangoOne.! !

!LeagueTest methodsFor: 'Private Test - League' stamp: 'MB 7/26/2019 18:27:19'!
test005_LeagueDefineUnaPeliculaDeCupoSecondSiElCupoOneNoTienePeliculas
	
	| lg  |
	
	lg _ League new.
	
	lg categoriaTension agregarPelicula: animal.
		
	lg mejorPeliculaDeCupoOne.
	
	Assert isTrue: lg tieneUnGanadorDeRangoOne.
	! !

!LeagueTest methodsFor: 'Private Test - League' stamp: 'MB 12/27/2018 16:57:05'!
test006_LeagueDefineUnaPeliculaDeCupoSecond
	
	league mejorPeliculaDeCupoSecond.
	
	Assert isTrue: league tieneUnGanadorDeRangoSecond.! !

!LeagueTest methodsFor: 'Private Test - League' stamp: 'MB 7/26/2019 19:04:16'!
test007_LeagueDefineUnaPeliculaDeCupoThirdSiElCupoSecondTienePeliculas
	
	
	
	league categoriaEntretenimiento agregarPelicula: bestiaDeCarga.
		
	league mejorPeliculaDeCupoSecond.
	
	Assert isTrue: league tieneUnGanadorDeRangoSecond.
	! !

!LeagueTest methodsFor: 'Private Test - League' stamp: 'MB 12/27/2018 16:57:42'!
test008_LeagueDefineUnaPeliculaDeCupoThird
	
	league mejorPeliculaDeCupoThird.
	
	Assert isTrue: league tieneUnGanadorRangoThird.! !

!LeagueTest methodsFor: 'Private Test - League' stamp: 'MB 7/26/2019 19:05:15'!
test009_LeagueDefineUnaPeliculaDeLastCupoSiElCupoThirdTienePeliculas
	

	
	league categoriaHorror agregarPelicula: vhs2.
	
		
	league mejorPeliculaDeCupoThird.
	
	Assert isTrue: league tieneUnGanadorRangoThird.
	! !

!LeagueTest methodsFor: 'Private Test - League' stamp: 'MB 12/27/2018 16:58:10'!
test010_LeagueDefineUnaPeliculaDeLastCupo
	
	league mejorPeliculaDeLastCupo.
	
	Assert isTrue: league tieneUnGanadorDeLastRango.! !

!LeagueTest methodsFor: 'Private Test - League' stamp: 'MB 7/26/2019 19:07:30'!
test011_LeagueDefineUnaPeliculaDeCupoOneSiLastCupoEstaVacia
	
	league categoriaTension 
		agregarPelicula: destinoFinal;
		agregarPelicula: torturaExperimental;
		agregarPelicula: saw7;
		agregarPelicula: losIndestructibles;
		agregarPelicula: animal;
		agregarPelicula: venom;
		agregarPelicula: bestiaDeCarga;
		agregarPelicula: adios;
		agregarPelicula: veintiCuatroHorasParaVivir.
		
	league categoriaTension 
		agregarPelicula: residentEvil2;
		agregarPelicula: estacionZombie;
		agregarPelicula: vhs2;
		agregarPelicula: masacreZombie;
		agregarPelicula: historiaDeUltratumba;
		agregarPelicula: gonjiam;
		agregarPelicula: laMorgue2;
		agregarPelicula: elSandman.
	
	league mejorPeliculaDeLastCupo.
	
	Assert isTrue: league tieneUnGanadorDeLastRango.! !

!LeagueTest methodsFor: 'Private Test - League' stamp: 'MB 7/26/2019 19:09:33'!
test012_LeagueDefineUnaPeliculaDeCupoSecondSiLastCupoYCupoOneNoTienePeliculas
	
	league categoriaTension 
		agregarPelicula: destinoFinal;
		agregarPelicula: torturaExperimental;
		agregarPelicula: saw7;
		agregarPelicula: animal;
		agregarPelicula: entreSombras;
		agregarPelicula: adios.
		
	league categoriaEntretenimiento 
		agregarPelicula: venom;
		agregarPelicula: losIndestructibles;
		agregarPelicula: veintiCuatroHorasParaVivir;
		agregarPelicula: bestiaDeCarga.
		
	league categoriaHorror 
		agregarPelicula: residentEvil;
		agregarPelicula: masacreZombie;
		agregarPelicula: elFinalDeTodo;
		agregarPelicula: historiaDeUltratumba;
		agregarPelicula: vhs2.
	.
	league mejorPeliculaDeLastCupo.
	
	Assert isTrue: league tieneUnGanadorDeLastRango.! !

!LeagueTest methodsFor: 'Private Test - League' stamp: 'MB 7/26/2019 19:12:23'!
test013_LeagueDefineUnaPeliculaDeCupoThirdSiLastCupoYCupoOneYCupoSecondNoTienePeliculas
	
	league categoriaAlternativo
		agregarPelicula: destinoFinal;
		agregarPelicula: torturaExperimental;
		agregarPelicula: saw7;
		agregarPelicula: gonjiam;
		agregarPelicula: losIndestructibles;
		agregarPelicula: animal;
		agregarPelicula: venom;
		agregarPelicula: entreSombras;
		agregarPelicula: bestiaDeCarga;
		agregarPelicula: historiaDeUltratumba;
		agregarPelicula: vhs2;
		agregarPelicula: residentEvil;
		agregarPelicula: adios;
		agregarPelicula: masacreZombie;
		agregarPelicula: elFinalDeTodo;
		agregarPelicula: veintiCuatroHorasParaVivir.
	
	league mejorPeliculaDeLastCupo.
	
	Assert isTrue: league tieneUnGanadorDeLastRango.! !

!NegativoTest methodsFor: 'Test' stamp: 'MB 1/4/2019 23:11:50'!
test001_ElSimboloDelPuntajeNegativoEsUnaCruz

	| negativo |
	
	negativo _ Negativo new.

	Assert that: negativo simbolo isEqualTo: X! !

!OnFireTest methodsFor: 'Running' stamp: 'MB 3/23/2019 21:08:51'!
setUp
	onFire _ OnFire new.
	saw _ Pelicula
		nombre: 'Saw'
		genero: 'Suspenso'.
	residentEvil _ Pelicula
		nombre: 'ResidentEvil'
		genero: 'Suspenso'.
	destinoFinal _ Pelicula
		nombre: 'DestinoFinal'
		genero: 'Suspenso'.
	listaDePeliculasEnZonaSegura _ OrderedCollection new.
	listaDePeliculasEnZonaRoja _ OrderedCollection new.
	listaDePeliculasEnZonaSegura add: saw.
	listaDePeliculasEnZonaRoja
		add: residentEvil;
		add: destinoFinal.! !

!OnFireTest methodsFor: 'Test' stamp: 'MB 3/22/2019 23:20:23'!
test001_OnFireEliminaUnaPeliculaEnLaListaDePeliculaEnZonaRoja
	Assert
		that: listaDePeliculasEnZonaRoja size
		isEqualTo: 2.
	onFire
		definirOnFire: listaDePeliculasEnZonaRoja
		en: listaDePeliculasEnZonaSegura.
	Assert
		that: listaDePeliculasEnZonaRoja size
		isEqualTo: 0.! !

!PeliculaTest methodsFor: 'Running' stamp: 'MB 3/23/2019 21:08:51'!
setUp
	unaPelicula _ Pelicula
		nombre: 'Saw'
		genero: 'Suspenso'.! !

!PeliculaTest methodsFor: 'Test' stamp: 'MB 10/6/2018 20:29:10'!
test001_UnaPeliculaTieneUnNombreAsignado


	Assert that: unaPelicula nombre isEqualTo: 'Saw'! !

!PeliculaTest methodsFor: 'Test' stamp: 'MB 3/23/2019 21:09:15'!
test002_UnaPeliculaTieneUnaCategoriaAsignada
	Assert
		that: unaPelicula genero
		isEqualTo: 'Suspenso'.! !

!PlayOffTest methodsFor: 'Running' stamp: 'MB 3/23/2019 21:08:51'!
setUp
	playOff _ PlayOff new.
	saw _ Pelicula
		nombre: 'Saw'
		genero: 'Suspenso'.
	residentEvil _ Pelicula
		nombre: 'Resident Evil'
		genero: 'Terror'.! !

!PlayOffTest methodsFor: 'Test' stamp: 'MB 12/11/2018 21:28:58'!
test001_PlayOffDefineElPrimerPuntoDeLaLiguilla
	playOff
		definirRondaPlayOff: saw
		vs: residentEvil.
	Assert isTrue:
		(playOff
			tienePuntoPositivoDeLaLiguilla: playOff primerPunto
			de: saw) |
			(playOff
				tienePuntoNegativoDeLaLiguilla: playOff primerPunto
				de: saw).
	Assert isTrue:
		(playOff
			tienePuntoPositivoDeLaLiguilla: playOff primerPunto
			de: residentEvil) |
			(playOff
				tienePuntoNegativoDeLaLiguilla: playOff primerPunto
				de: residentEvil).! !

!PlayOffTest methodsFor: 'Test' stamp: 'MB 12/11/2018 21:28:58'!
test002_PlayOffDefineElSegundoPuntoDeLaLiguilla
	playOff
		definirRondaPlayOff: saw
		vs: residentEvil.
	Assert isTrue:
		(playOff
			tienePuntoPositivoDeLaLiguilla: playOff segundoPunto
			de: saw) |
			(playOff
				tienePuntoNegativoDeLaLiguilla: playOff segundoPunto
				de: saw).
	Assert isTrue:
		(playOff
			tienePuntoPositivoDeLaLiguilla: playOff segundoPunto
			de: residentEvil) |
			(playOff
				tienePuntoNegativoDeLaLiguilla: playOff segundoPunto
				de: residentEvil).! !

!PlayOffTest methodsFor: 'Test' stamp: 'MB 12/11/2018 21:28:58'!
test003_PlayOffDefineElTercerPuntoDeLaLiguilla
	playOff
		definirRondaPlayOff: saw
		vs: residentEvil.
	Assert isTrue:
		(playOff
			tienePuntoPositivoDeLaLiguilla: playOff tercerPunto
			de: saw) |
			(playOff
				tienePuntoNegativoDeLaLiguilla: playOff tercerPunto
				de: saw).
	Assert isTrue:
		(playOff
			tienePuntoPositivoDeLaLiguilla: playOff tercerPunto
			de: residentEvil) |
			(playOff
				tienePuntoNegativoDeLaLiguilla: playOff tercerPunto
				de: residentEvil).! !

!PlayOffTest methodsFor: 'Test' stamp: 'MB 12/11/2018 21:28:58'!
test004_PlayOffDefineElCuartoPuntoDeLaLiguilla
	playOff
		definirRondaPlayOff: saw
		vs: residentEvil.
	Assert isTrue:
		(playOff
			tienePuntoPositivoDeLaLiguilla: playOff cuartoPunto
			de: saw) |
			(playOff
				tienePuntoNegativoDeLaLiguilla: playOff cuartoPunto
				de: saw).
	Assert isTrue:
		(playOff
			tienePuntoPositivoDeLaLiguilla: playOff cuartoPunto
			de: residentEvil) |
			(playOff
				tienePuntoNegativoDeLaLiguilla: playOff cuartoPunto
				de: residentEvil).! !

!PlayOffTest methodsFor: 'Test' stamp: 'MB 12/11/2018 21:28:58'!
test005_PlayOffDefineElQuintoPuntoDeLaLiguilla
	playOff
		definirRondaPlayOff: saw
		vs: residentEvil.
	Assert isTrue:
		(playOff
			tienePuntoPositivoDeLaLiguilla: playOff quintoPunto
			de: saw) |
			(playOff
				tienePuntoNegativoDeLaLiguilla: playOff quintoPunto
				de: saw).
	Assert isTrue:
		(playOff
			tienePuntoPositivoDeLaLiguilla: playOff quintoPunto
			de: residentEvil) |
			(playOff
				tienePuntoNegativoDeLaLiguilla: playOff quintoPunto
				de: residentEvil).! !

!PlayOffTest methodsFor: 'Test' stamp: 'MB 12/11/2018 21:28:58'!
test006_PlayOffRetornaElResultadoFinal
	playOff
		definirRondaPlayOff: saw
		vs: residentEvil.
	Assert isTrue: (playOff tieneRegistradoUnPuntaje: saw) & (playOff tieneRegistradoUnPuntaje: residentEvil).! !

!PlayOffTest methodsFor: 'Test' stamp: 'MB 12/11/2018 21:33:43'!
test007_PlayOffRetornaElGanadorEntreDosPeliculas
	
	playOff
		versus: saw
		vs: residentEvil.
		
	Assert isTrue: (playOff ganoElPlayOff: saw) | (playOff ganoElPlayOff: residentEvil).! !

!PlayOffTest methodsFor: 'Private Test - PlayOff' stamp: 'MB 12/12/2018 13:53:16'!
test008_SiLaRondaDePlayOffNoHayEmpateCoronaAlGanador
	
	playOff
		
			definirPuntoPositivoPlayOff: saw
			enRonda: playOff primerPunto;
		
			definirPuntoPositivoPlayOff: saw
			enRonda: playOff segundoPunto;
		
			definirPuntoPositivoPlayOff: saw
			enRonda: playOff tercerPunto;
		
			definirPuntoPositivoPlayOff: saw
			enRonda: playOff cuartoPunto;
		
			definirPuntoPositivoPlayOff: saw
			enRonda: playOff quintoPunto;
		
			definirPuntoPositivoPlayOff: residentEvil
			enRonda: playOff primerPunto;
		
			definirPuntoPositivoPlayOff: residentEvil
			enRonda: playOff segundoPunto;
		
			definirPuntoPositivoPlayOff: residentEvil
			enRonda: playOff tercerPunto;
		
			definirPuntoPositivoPlayOff: residentEvil
			enRonda: playOff cuartoPunto;
		
			definirPuntoNegativoPlayOff: residentEvil
			enRonda: playOff quintoPunto.
			
	playOff
		registrarPuntajeTotal: saw;
		registrarPuntajeTotal: residentEvil.
		
	 (playOff definirGanadorPlayOff: saw vs: residentEvil ) definirGanadorVersus: saw vs: residentEvil en: playOff .
		
	Assert isTrue: (playOff tieneUnGanadorEntre: saw vs: residentEvil).
	
	Assert isTrue: ( playOff tieneUnGanador)! !

!PlayOffTest methodsFor: 'Private Test - PlayOff' stamp: 'MB 1/12/2019 23:01:15'!
test009_SiLaRondaDePlayOffHayEmpateNoHayTemporalmenteUnGanador
	
	playOff
		
			definirPuntoPositivoPlayOff: saw
			enRonda: playOff primerPunto;
		
			definirPuntoPositivoPlayOff: saw
			enRonda: playOff segundoPunto;
		
			definirPuntoPositivoPlayOff: saw
			enRonda: playOff tercerPunto;
		
			definirPuntoPositivoPlayOff: saw
			enRonda: playOff cuartoPunto;
		
			definirPuntoPositivoPlayOff: saw
			enRonda: playOff quintoPunto;
		
			definirPuntoPositivoPlayOff: residentEvil
			enRonda: playOff primerPunto;
		
			definirPuntoPositivoPlayOff: residentEvil
			enRonda: playOff segundoPunto;
		
			definirPuntoPositivoPlayOff: residentEvil
			enRonda: playOff tercerPunto;
		
			definirPuntoPositivoPlayOff: residentEvil
			enRonda: playOff cuartoPunto;
		
			definirPuntoPositivoPlayOff: residentEvil
			enRonda: playOff quintoPunto.
			
	playOff
		registrarPuntajeTotal: saw;
		registrarPuntajeTotal: residentEvil.
		
	Assert isTrue: (playOff hayPlayOffEmpatadoEntre: saw vs: residentEvil).
	
	Assert isFalse: playOff tieneUnGanador.
	! !

!PlayOffTest methodsFor: 'Private Test - PlayOff' stamp: 'MB 1/12/2019 22:56:42'!
test010_SiLaRondaDePlayOffHayEmpateCoronaAlGanadorEnBlackPlayOff
	
	playOff
		
			definirPuntoPositivoPlayOff: saw
			enRonda: playOff primerPunto;
		
			definirPuntoPositivoPlayOff: saw
			enRonda: playOff segundoPunto;
		
			definirPuntoPositivoPlayOff: saw
			enRonda: playOff tercerPunto;
		
			definirPuntoPositivoPlayOff: saw
			enRonda: playOff cuartoPunto;
		
			definirPuntoPositivoPlayOff: saw
			enRonda: playOff quintoPunto;
		
			definirPuntoPositivoPlayOff: residentEvil
			enRonda: playOff primerPunto;
		
			definirPuntoPositivoPlayOff: residentEvil
			enRonda: playOff segundoPunto;
		
			definirPuntoPositivoPlayOff: residentEvil
			enRonda: playOff tercerPunto;
		
			definirPuntoPositivoPlayOff: residentEvil
			enRonda: playOff cuartoPunto;
		
			definirPuntoPositivoPlayOff: residentEvil
			enRonda: playOff quintoPunto.
			
	playOff
		registrarPuntajeTotal: saw;
		registrarPuntajeTotal: residentEvil.
		
	(playOff definirGanadorPlayOff: saw vs: residentEvil ) definirGanadorVersus: saw vs: residentEvil en: playOff .
		
	Assert isTrue: (playOff hayPlayOffEmpatadoEntre: saw vs: residentEvil).
	
	Assert isTrue: ( playOff tieneUnGanador) ! !

!PointExpressTest methodsFor: 'Running' stamp: 'MB 3/23/2019 21:08:51'!
setUp
	unaPelicula _ Pelicula
		nombre: 'Saw'
		genero: 'Suspenso'.
	point _ PointExpress new.
	point registrarPelicula: unaPelicula.! !

!PointExpressTest methodsFor: 'Test' stamp: 'MB 10/7/2018 14:32:05'!
test001_UnaNuevaPartidaDePointExpressNoJugoNingunPunto
	
	Assert isTrue: point noJugoNingunPunto.! !

!PointExpressTest methodsFor: 'Test' stamp: 'MB 3/31/2019 01:13:16'!
test002_LasRondasDePointExpressSonColeccionesOrdenadas
	Assert
		that: point primeraTanda species
		isEqualTo: OrderedCollection.
	Assert
		that: point segundaTanda species
		isEqualTo: OrderedCollection.
	Assert
		that: point tandaRepechaje species
		isEqualTo: OrderedCollection.! !

!PointExpressTest methodsFor: 'Test' stamp: 'MB 3/31/2019 01:10:37'!
test003_DefinirLaPrimeraRondaDelPointExpress
	point definirTanda: point primeraTanda.
	Assert isTrue: (point primeraTanda includes: O) | (point primeraTanda includes: X).! !

!PointExpressTest methodsFor: 'Test' stamp: 'MB 3/31/2019 01:13:16'!
test004_DefinirLaSegundaRondaDelPointExpress
	point definirTanda: point segundaTanda.
	Assert isTrue: (point segundaTanda includes: O) | (point segundaTanda includes: X).! !

!PointExpressTest methodsFor: 'Test' stamp: 'MB 3/31/2019 01:12:01'!
test005_DefinirLaRondaRepechajeDelPointExpress
	point definirTanda: point tandaRepechaje.
	Assert isTrue:
		(point
			tieneSimbolo: O
			en: point tandaRepechaje) |
			(point
				tieneSimbolo: X
				en: point tandaRepechaje).! !

!PointExpressTest methodsFor: 'Test' stamp: 'MB 1/12/2019 23:16:04'!
test006_GuardarPuntajeDelPointExpressEnUnaPelicula

	
	point
		definirPrimeraRondaDeStageGroupPara: unaPelicula
		enRegistro: point registro
		enTicket: point ticket.
	
	
	Assert isTrue: ((point puntaje: unaPelicula)  >= 0 ).
	
	Assert isFalse: point noJugoNingunPunto. ! !

!PositivoTest methodsFor: 'Test' stamp: 'MB 10/7/2018 14:28:33'!
test001_ElSimboloDeElPuntajePositivoEsUnCirculo
	
	| positivo |
	positivo _ Positivo new.
	
	Assert
		that: positivo simbolo
		isEqualTo: O.! !

!PreEndMvMTest methodsFor: 'Running' stamp: 'MB 8/17/2019 15:36:49'!
setUp
	pre _ PreEndMvM idMvM: 'A'.
	saw _ Pelicula
		nombre: 'Saw'
		genero: 'Suspenso'.
	residentEvil _ Pelicula
		nombre: 'Resident Evil'
		genero: 'Terror'.! !

!PreEndMvMTest methodsFor: 'Test' stamp: 'MB 8/18/2019 00:13:38'!
test001_EnfrentarEnPreEndMvMEntreDosPeliculas
	pre
		realizarPrimeraRondaMvM: saw
		vs: residentEvil
		enTicket: pre ticket.
	pre
		realizarRevanchaMvM: saw
		vs: residentEvil
		enTicket: pre ticket.
	pre
		definirGanadorPreFinalMvM: saw
		vs: residentEvil.
	Assert isTrue: (pre ganoPreEndMvM: saw) | (pre ganoPreEndMvM: residentEvil).! !

!PreEndMvMTest methodsFor: 'Private test - PreEndMvM' stamp: 'MB 8/18/2019 00:13:02'!
test002_EnCasoDeGanarLaPeliculaASeCoronaGanadorPreEndMvM
	pre global
		guardarPuntaje: 20
		de: saw.
	pre global
		guardarPuntaje: 10
		de: residentEvil.
	pre
		definirGanadorMvMEntre: saw
		vs: residentEvil.
	Assert isTrue: (pre ganoPreEndMvM: saw) | (pre ganoPreEndMvM: residentEvil).! !

!PreEndMvMTest methodsFor: 'Private test - PreEndMvM' stamp: 'MB 8/18/2019 00:13:56'!
test003_EnCasoDeGanarLaPeliculaBSeCoronaGanadorPreEndMvM
	pre global
		guardarPuntaje: 10
		de: saw.
	pre global
		guardarPuntaje: 20
		de: residentEvil.
	pre
		definirGanadorMvMEntre: saw
		vs: residentEvil.
	Assert isTrue: (pre ganoPreEndMvM: saw) | (pre ganoPreEndMvM: residentEvil).! !

!PreEndMvMTest methodsFor: 'Private test - PreEndMvM' stamp: 'MB 8/18/2019 00:14:23'!
test004_EnCasoDeEmpatePreEndMvMSeCoronaAlGanadorConPlayOff
	pre global
		guardarPuntaje: 20
		de: saw.
	pre global
		guardarPuntaje: 20
		de: residentEvil.
	pre
		definirGanadorPreFinalMvM: saw
		vs: residentEvil.
	Assert isTrue: (pre ganoPreEndMvM: saw) | (pre ganoPreEndMvM: residentEvil).! !

!PreTicketMvMTest methodsFor: 'Running' stamp: 'MB 8/12/2019 22:46:08'!
setUp
	ticket _ PreTicketMvM new.
	categoriaSuspenso _ Tension new.
	residentEvil _ Pelicula
		nombre: 'ResidentEvil'
		genero: 'Suspenso'.
	destinoFinal _ Pelicula
		nombre: 'DestinoFinal'
		genero: 'Suspenso'.! !

!PreTicketMvMTest methodsFor: 'Test' stamp: 'MB 4/8/2020 00:12:51'!
test001_UnTicketNuevoNoTieneTicketDeUnaFinalCineWar
	Assert isTrue: ticket noTieneRegistroDeUnaFinalColiseum.! !

!PreTicketMvMTest methodsFor: 'Test' stamp: 'MB 7/23/2019 16:16:03'!
test002_UnTicketTieneEnLaBaseDeDatosUnRegistroDeRanking

	| unRegistro |
	
	unRegistro _ Registro new.
	
	ticket registroRanking: unRegistro de: (Bonus new)  deStage: 'A'.
	
	
	Assert isTrue: (ticket tieneRegistradoUnRegistroRanking: unRegistro).! !

!PreTicketMvMTest methodsFor: 'Test' stamp: 'MB 7/23/2019 16:24:08'!
test003_UnTicketTieneUnaListaDePeliculasEnOutSideStageGroup

	| unaListaDePeliculas unaPelicula |
	
	unaListaDePeliculas _ OrderedCollection new.
	
	unaPelicula _ Pelicula new.
	
	unaListaDePeliculas add: ( unaPelicula ).
	
	ticket agregarPeliculasOutsideStageGroup: unaListaDePeliculas .
	
	Assert isTrue: (ticket tienePeliculasRegistradasEnOutSideStageGroup).
	
	Assert isTrue: ( ticket tienePeliculaEnOutSideStageGroup: unaPelicula ).! !

!PreTicketMvMTest methodsFor: 'Test' stamp: 'MB 8/12/2019 23:35:16'!
test004_UnTicketTieneRegistradoEnLaBaseDeDatosUnaDataPrimeraRondaPointExpressDeIntroMvM
	| unaListaDePuntos unaPelicula |
	unaListaDePuntos _ OrderedCollection new.
	unaListaDePuntos add: Positivo new.
	unaPelicula _ Pelicula
		nombre: 'Saw'
		genero: 'Suspenso'.
	ticket
		guardarDataPrimeraRondaPointExpressDeIntroMvM: unaListaDePuntos
		de: unaPelicula.
	Assert isTrue: ticket tieneRegistradoUnaDataPrimeraRondaPointExpressDeIntroMvM.
	Assert isTrue:
		(ticket
			tieneRegistradoUnaDataPrimeraRondaPointExpressDeIntroMvM: unaListaDePuntos
			dePelicula: unaPelicula).! !

!PreTicketMvMTest methodsFor: 'Test' stamp: 'MB 8/12/2019 23:35:32'!
test005_UnTicketTieneRegistradoEnLaBaseDeDatosUnaDataPrimeraRondaRevanchaPointExpressDeIntroMvM
	| unaListaDePuntos unaPelicula |
	unaListaDePuntos _ OrderedCollection new.
	unaListaDePuntos add: Positivo new.
	unaPelicula _ Pelicula
		nombre: 'Saw'
		genero: 'Suspenso'.
	ticket
		guardarDataPrimeraRondaRevanchaPointExpressDeIntroMvM: unaListaDePuntos
		de: unaPelicula.
	Assert isTrue: ticket tieneRegistradoUnaDataPrimeraRondaRevanchaPointExpressDeIntroMvM.
	Assert isTrue:
		(ticket
			tieneRegistradoUnaDataPrimeraRondaRevanchaPointExpressDeIntroMvM: unaListaDePuntos
			dePelicula: unaPelicula).! !

!PreTicketMvMTest methodsFor: 'Test' stamp: 'MB 8/12/2019 23:35:46'!
test006_UnTicketTieneRegistradoEnLaBaseDeDatosUnaDataRondaRepechajePointExpressIntroMvM
	| unaListaDePuntos unaPelicula |
	unaListaDePuntos _ OrderedCollection new.
	unaListaDePuntos add: Positivo new.
	unaPelicula _ Pelicula
		nombre: 'Saw'
		genero: 'Suspenso'.
	ticket
		guardarDataRondaRepechajePointExpressIntroMvM: unaListaDePuntos
		de: unaPelicula.
	Assert isTrue: ticket tieneRegistradoUnaDataRondaRepechajePointExpressIntroMvM.
	Assert isTrue:
		(ticket
			tieneRegistradoUnaDataRondaRepechajePointExpressIntroMvM: unaListaDePuntos
			dePelicula: unaPelicula).! !

!PreTicketMvMTest methodsFor: 'Test' stamp: 'MB 8/12/2019 23:36:10'!
test007_UnTicketTieneRegistradoEnLaBaseDeDatosUnaDataRondaRepechajeRevanchaPointExpressIntroMvM
	| unaListaDePuntos unaPelicula |
	unaListaDePuntos _ OrderedCollection new.
	unaListaDePuntos add: Positivo new.
	unaPelicula _ Pelicula
		nombre: 'Saw'
		genero: 'Suspenso'.
	ticket
		guardarDataRondaRepechajeRevanchaPointExpressIntroMvM: unaListaDePuntos
		de: unaPelicula.
	Assert isTrue: ticket tieneRegistradoUnaDataRondaRepechajeRevanchaPointExpressIntroMvM.
	Assert isTrue:
		(ticket
			tieneRegistradoUnaDataRondaRepechajeRevanchaPointExpressIntroMvM: unaListaDePuntos
			dePelicula: unaPelicula).! !

!PreTicketMvMTest methodsFor: 'Test' stamp: 'MB 8/12/2019 23:36:25'!
test008_UnTicketTieneRegistradoEnLaBaseDeDatosUnaDataSegundaRondaPointExpressIntroMvM
	| unaListaDePuntos unaPelicula |
	unaListaDePuntos _ OrderedCollection new.
	unaListaDePuntos add: Positivo new.
	unaPelicula _ Pelicula
		nombre: 'Saw'
		genero: 'Suspenso'.
	ticket
		guardarDataSegundaRondaPointExpressIntroMvM: unaListaDePuntos
		de: unaPelicula.
	Assert isTrue: ticket tieneRegistradoUnaDataSegundaRondaPointExpressIntroMvM.
	Assert isTrue:
		(ticket
			tieneRegistradoUnaDataSegundaRondaPointExpressIntroMvM: unaListaDePuntos
			dePelicula: unaPelicula).! !

!PreTicketMvMTest methodsFor: 'Test' stamp: 'MB 8/12/2019 23:36:41'!
test009_UnTicketTieneRegistradoEnLaBaseDeDatosUnaDataSegundaRondaRevanchaPointExpressIntroMvM
	| unaListaDePuntos unaPelicula |
	unaListaDePuntos _ OrderedCollection new.
	unaListaDePuntos add: Positivo new.
	unaPelicula _ Pelicula
		nombre: 'Saw'
		genero: 'Suspenso'.
	ticket
		guardarDataSegundaRondaRevanchaPointExpressIntroMvM: unaListaDePuntos
		de: unaPelicula.
	Assert isTrue: ticket tieneRegistradoUnaDataSegundaRondaRevanchaPointExpressIntroMvM.
	Assert isTrue:
		(ticket
			tieneRegistradoUnaDataSegundaRondaRevanchaPointExpressIntroMvM: unaListaDePuntos
			dePelicula: unaPelicula).! !

!PreTicketMvMTest methodsFor: 'Test' stamp: 'MB 8/18/2019 22:59:13'!
test010_UnTicketTieneRegistradoEnLaBaseDeDatosUnaDataPrimeraRondaPointExpressDePreEndMvM
	| unaListaDePuntos unaPelicula |
	unaListaDePuntos _ OrderedCollection new.
	unaListaDePuntos add: Positivo new.
	unaPelicula _ Pelicula
		nombre: 'Saw'
		genero: 'Suspenso'.
	ticket
		guardarDataPrimeraRondaPointExpressDePreEndMvM: unaListaDePuntos
		de: unaPelicula.
	Assert isTrue: ticket tieneRegistradoUnaDataPrimeraRondaPointExpressDePreEndMvM.
	Assert isTrue:
		(ticket
			tieneRegistradoDataPrimeraRondaPointExpressDePreEndMvM: unaListaDePuntos
			dePelicula: unaPelicula).! !

!PreTicketMvMTest methodsFor: 'Test' stamp: 'MB 8/18/2019 22:59:39'!
test011_UnTicketTieneRegistradoEnLaBaseDeDatosUnaDataPrimeraRondaRevanchaPointExpressDePreEndMvM
	| unaListaDePuntos unaPelicula |
	unaListaDePuntos _ OrderedCollection new.
	unaListaDePuntos add: Positivo new.
	unaPelicula _ Pelicula
		nombre: 'Saw'
		genero: 'Suspenso'.
	ticket
		guardarDataPrimeraRondaRevanchaPointExpressDePreEndMvM: unaListaDePuntos
		de: unaPelicula.
	Assert isTrue: ticket tieneRegistradoUnaDataPrimeraRondaRevanchaPointExpressDePreEndMvM.
	Assert isTrue:
		(ticket
			tieneRegistradoDataPrimeraRondaRevanchaPointExpressDePreEndMvM: unaListaDePuntos
			dePelicula: unaPelicula).! !

!PreTicketMvMTest methodsFor: 'Test' stamp: 'MB 8/18/2019 22:59:58'!
test012_UnTicketTieneRegistradoEnLaBaseDeDatosUnaDataRondaRepechajePointExpressPreEndMvM
	| unaListaDePuntos unaPelicula |
	unaListaDePuntos _ OrderedCollection new.
	unaListaDePuntos add: Positivo new.
	unaPelicula _ Pelicula
		nombre: 'Saw'
		genero: 'Suspenso'.
	ticket
		guardarDataRondaRepechajePointExpressPreEndMvM: unaListaDePuntos
		de: unaPelicula.
	Assert isTrue: ticket tieneRegistradoUnaDataRondaRepechajePointExpressPreEndlMvM.
	Assert isTrue:
		(ticket
			tieneRegistradoDataRondaRepechajePointExpressPreEndMvM: unaListaDePuntos
			dePelicula: unaPelicula).! !

!PreTicketMvMTest methodsFor: 'Test' stamp: 'MB 8/18/2019 23:00:22'!
test013_UnTicketTieneRegistradoEnLaBaseDeDatosUnaDataRondaRepechajeRevanchaPointExpressPreEndMvM
	| unaListaDePuntos unaPelicula |
	unaListaDePuntos _ OrderedCollection new.
	unaListaDePuntos add: Positivo new.
	unaPelicula _ Pelicula
		nombre: 'Saw'
		genero: 'Suspenso'.
	ticket
		guardarDataRondaRepechajeRevanchaPointExpressPreEndMvM: unaListaDePuntos
		de: unaPelicula.
	Assert isTrue: ticket tieneRegistradoUnaDataRondaRepechajeRevanchaPointExpressPreEndMvM.
	Assert isTrue:
		(ticket
			tieneRegistradoDataRondaRepechajeRevanchaPointExpressPreEndMvM: unaListaDePuntos
			dePelicula: unaPelicula).! !

!PreTicketMvMTest methodsFor: 'Test' stamp: 'MB 8/18/2019 23:00:39'!
test014_UnTicketTieneRegistradoEnLaBaseDeDatosUnaDataSegundaRondaPointExpressPreEndMvM
	| unaListaDePuntos unaPelicula |
	unaListaDePuntos _ OrderedCollection new.
	unaListaDePuntos add: Positivo new.
	unaPelicula _ Pelicula
		nombre: 'Saw'
		genero: 'Suspenso'.
	ticket
		guardarDataSegundaRondaPointExpressPreEndMvM: unaListaDePuntos
		de: unaPelicula.
	Assert isTrue: ticket tieneRegistradoUnaDataSegundaRondaPointExpressPreEndMvM.
	Assert isTrue:
		(ticket
			tieneRegistradoDataSegundaRondaPointExpressPreEndMvM: unaListaDePuntos
			dePelicula: unaPelicula).! !

!PreTicketMvMTest methodsFor: 'Test' stamp: 'MB 8/18/2019 23:00:57'!
test015_UnTicketTieneRegistradoEnLaBaseDeDatosUnaDataSegundaRondaRevanchaPointExpressPreEndMvM
	| unaListaDePuntos unaPelicula |
	unaListaDePuntos _ OrderedCollection new.
	unaListaDePuntos add: Positivo new.
	unaPelicula _ Pelicula
		nombre: 'Saw'
		genero: 'Suspenso'.
	ticket
		guardarDataSegundaRondaRevanchaPointExpressPreEndMvM: unaListaDePuntos
		de: unaPelicula.
	Assert isTrue: ticket tieneRegistradoUnaDataSegundaRondaRevanchaPointExpressPreEndMvM.
	Assert isTrue:
		(ticket
			tieneRegistradoDataSegundaRondaRevanchaPointExpressPreEndMvM: unaListaDePuntos
			dePelicula: unaPelicula).! !

!PreTicketMvMTest methodsFor: 'Test' stamp: 'MB 8/18/2019 23:01:16'!
test016_UnTicketTieneRegistradoEnLaBaseDeDatosUnaDataPrimeraRondaPointExpressDeEndMvM
	| unaListaDePuntos unaPelicula |
	unaListaDePuntos _ OrderedCollection new.
	unaListaDePuntos add: Positivo new.
	unaPelicula _ Pelicula
		nombre: 'Saw'
		genero: 'Suspenso'.
	ticket
		guardarDataPrimeraRondaPointExpressDeEndMvM: unaListaDePuntos
		de: unaPelicula.
	Assert isTrue: ticket tieneRegistradoUnaDataPrimeraRondaPointExpressDeEndMvM.
	Assert isTrue:
		(ticket
			tieneRegistradoDataPrimeraRondaPointExpressDeEndMvM: unaListaDePuntos
			dePelicula: unaPelicula).! !

!PreTicketMvMTest methodsFor: 'Test' stamp: 'MB 8/18/2019 23:01:33'!
test017_UnTicketTieneRegistradoEnLaBaseDeDatosUnaDataPrimeraRondaRevanchaPointExpressDeEndMvM
	| unaListaDePuntos unaPelicula |
	unaListaDePuntos _ OrderedCollection new.
	unaListaDePuntos add: Positivo new.
	unaPelicula _ Pelicula
		nombre: 'Saw'
		genero: 'Suspenso'.
	ticket
		guardarDataPrimeraRondaRevanchaPointExpressDeEndMvM: unaListaDePuntos
		de: unaPelicula.
	Assert isTrue: ticket tieneRegistradoUnaDataPrimeraRondaRevanchaPointExpressDeEndMvM.
	Assert isTrue:
		(ticket
			tieneRegistradoDataPrimeraRondaRevanchaPointExpressDeEndMvM: unaListaDePuntos
			dePelicula: unaPelicula).! !

!PreTicketMvMTest methodsFor: 'Test' stamp: 'MB 8/18/2019 23:01:48'!
test018_UnTicketTieneRegistradoEnLaBaseDeDatosUnaDataRondaRepechajePointExpressEndMvM
	| unaListaDePuntos unaPelicula |
	unaListaDePuntos _ OrderedCollection new.
	unaListaDePuntos add: Positivo new.
	unaPelicula _ Pelicula
		nombre: 'Saw'
		genero: 'Suspenso'.
	ticket
		guardarDataRondaRepechajePointExpressEndMvM: unaListaDePuntos
		de: unaPelicula.
	Assert isTrue: ticket tieneRegistradoUnaDataRondaRepechajePointExpressEndMvM.
	Assert isTrue:
		(ticket
			tieneRegistradoDataRondaRepechajePointExpressEndMvM: unaListaDePuntos
			dePelicula: unaPelicula).! !

!PreTicketMvMTest methodsFor: 'Test' stamp: 'MB 8/18/2019 23:02:03'!
test019_UnTicketTieneRegistradoEnLaBaseDeDatosUnaDataSegundaRondaPointExpressEndMvM
	| unaListaDePuntos unaPelicula |
	unaListaDePuntos _ OrderedCollection new.
	unaListaDePuntos add: Positivo new.
	unaPelicula _ Pelicula
		nombre: 'Saw'
		genero: 'Suspenso'.
	ticket
		guardarDataSegundaRondaPointExpressEndMvM: unaListaDePuntos
		de: unaPelicula.
	Assert isTrue: ticket tieneRegistradoUnaDataSegundaRondaPointExpressEndMvM.
	Assert isTrue:
		(ticket
			tieneRegistradoDataSegundaRondaPointExpressEndMvM: unaListaDePuntos
			dePelicula: unaPelicula).! !

!PreTicketMvMTest methodsFor: 'Test' stamp: 'MB 8/18/2019 23:02:19'!
test020_UnTicketTieneRegistradoEnLaBaseDeDatosUnaDataSegundaRondaRevanchaPointExpressEndMvM
	| unaListaDePuntos unaPelicula |
	unaListaDePuntos _ OrderedCollection new.
	unaListaDePuntos add: Positivo new.
	unaPelicula _ Pelicula
		nombre: 'Saw'
		genero: 'Suspenso'.
	ticket
		guardarDataSegundaRondaRevanchaPointExpressEndMvM: unaListaDePuntos
		de: unaPelicula.
	Assert isTrue: ticket tieneRegistradoUnaDataSegundaRondaRevanchaPointExpressEndMvM.
	Assert isTrue:
		(ticket
			tieneRegistradoDataSegundaRondaRevanchaPointExpressEndMvM: unaListaDePuntos
			dePelicula: unaPelicula).! !

!SpinOffTest methodsFor: 'Running' stamp: 'MB 3/24/2019 22:33:06'!
setUp
	spinOff _ SpinOff new.
	league _ League new.
	saw _ Pelicula
		nombre: 'Saw'
		genero: 'Suspenso'.
	residentEvil _ Pelicula
		nombre: 'Resident Evil'
		genero: 'Terror'.
	destinoFinal _ Pelicula
		nombre: 'DestinoFinal'
		genero: 'Suspenso'.
	unaCategoria _ Tension new.
	unaCategoria
		agregarPelicula: saw;
		agregarPelicula: residentEvil;
		agregarPelicula: destinoFinal.
	league agregarCategoria: unaCategoria.! !

!SpinOffTest methodsFor: 'Test' stamp: 'MB 3/22/2019 23:01:06'!
test001_UnSpinOffEligeUnaPeliculaDeUnaLeague
	spinOff
		unaPeliculaEntre: unaCategoria peliculas
		en: league.
	Assert isTrue: league tieneUnGanador.! !

!StageGroupTest methodsFor: 'Running' stamp: 'MB 3/23/2019 21:08:51'!
setUp
	sg _ StageGroup idStage: 'A'.
	saw _ Pelicula
		nombre: 'Saw'
		genero: 'Suspenso'.
	residentEvil _ Pelicula
		nombre: 'ResidentEvil'
		genero: 'Suspenso'.
	destinoFinal _ Pelicula
		nombre: 'DestinoFinal'
		genero: 'Suspenso'.
	laMorgue _ Pelicula
		nombre: 'LaMorgue'
		genero: 'Suspenso'.
	point _ PointExpress new.
	sg
		agregarPelicula: saw;
		agregarPelicula: residentEvil;
		agregarPelicula: destinoFinal;
		agregarPelicula: laMorgue.! !

!StageGroupTest methodsFor: 'Test' stamp: 'MB 11/17/2018 17:01:18'!
test001_StageGroupNuevoNoTienePeliculas
	
	| sgSinPeliculas |
	
	sgSinPeliculas _ StageGroup new.
	
	Assert isTrue: sgSinPeliculas noTienePeliculas.! !

!StageGroupTest methodsFor: 'Test' stamp: 'MB 11/17/2018 17:01:29'!
test002_StageGroupTieneAlMenosUnaPelicula
	
	Assert isFalse: sg noTienePeliculas.
	
	Assert isTrue:( sg peliculas includes: saw)! !

!StageGroupTest methodsFor: 'Test' stamp: 'MB 1/6/2019 17:10:59'!
test003_StageGroupDefinirRonda
	
	sg definirPrimeraRondaStageGroupEnTicket: sg ticket.
	
	Assert isTrue: (sg registroPrimeraRonda baseDeDatos includesKey: saw nombre).! !

!StageGroupTest methodsFor: 'Test' stamp: 'MB 1/6/2019 17:13:24'!
test004_StageGroupDefinirRondaRepechaje
	
	sg definirRondaRevanchaStageGroupEnTicket: sg ticket.
	
	Assert isTrue:( sg registroRondaRevancha baseDeDatos includesKey: (saw nombre))! !

!StageGroupTest methodsFor: 'Test' stamp: 'MB 1/6/2019 17:11:58'!
test005_StageGroupDefinirElGrupo
	
	sg definirStageGroupEnTicket: sg ticket.
	
	Assert isTrue: ((sg puntajeTotal: saw)  >= 0 ).
! !

!StageGroupTest methodsFor: 'Private Test - StageGroup' stamp: 'MB 12/7/2018 18:45:44'!
test006_EnCasoDeNoHaberEmpateEnBonusComodinSeCoronaAlGanadorAlPrimerPuestoDelRanking
	
	sg
		
			agregarPuntajeTotal: 5
			a: saw;
		
			agregarPuntajeTotal: 4
			a: residentEvil;
		
			agregarPuntajeTotal: 3
			a: destinoFinal;
		
			agregarPuntajeTotal: 2
			a: laMorgue.
			
	sg armarRanking.
	
	sg definirBonusComodin.
	
	Assert isFalse: sg noTieneGanadorDeBonusComodin.
	! !

!StageGroupTest methodsFor: 'Private Test - StageGroup' stamp: 'MB 12/7/2018 18:46:04'!
test007_EnCasoDeHaberDobleEmpateEnBonusComodinSeDefineAlGanadorEnPvP
	
	sg
		
			agregarPuntajeTotal: 5
			a: saw;
		
			agregarPuntajeTotal: 5
			a: residentEvil;
		
			agregarPuntajeTotal: 3
			a: destinoFinal;
		
			agregarPuntajeTotal: 2
			a: laMorgue.
			
	sg armarRanking.
	
	sg definirBonusComodin.
	
	Assert isFalse: sg noTieneGanadorDeBonusComodin.! !

!StageGroupTest methodsFor: 'Private Test - StageGroup' stamp: 'MB 12/7/2018 18:46:21'!
test008_EnCasoDeHaberTripleEmpateEnBonusComodinSeDefineAlGanadorEnPvP
	
	sg
		
			agregarPuntajeTotal: 5
			a: saw;
		
			agregarPuntajeTotal: 5
			a: residentEvil;
		
			agregarPuntajeTotal: 5
			a: destinoFinal;
		
			agregarPuntajeTotal: 2
			a: laMorgue.
			
	sg armarRanking.
	
	sg definirBonusComodin.
	
	Assert isFalse: sg noTieneGanadorDeBonusComodin.! !

!StageGroupTest methodsFor: 'Private Test - StageGroup' stamp: 'MB 12/7/2018 18:46:52'!
test009_EnCasoDeHaberCuatripleEmpateEnBonusComodinSeDefineAlGanadorEnPvP
	
	sg
		
			agregarPuntajeTotal: 5
			a: saw;
		
			agregarPuntajeTotal: 5
			a: residentEvil;
		
			agregarPuntajeTotal: 5
			a: destinoFinal;
		
			agregarPuntajeTotal: 5
			a: laMorgue.
			
	sg armarRanking.
	sg definirBonusComodin.
	
	Assert isFalse: sg noTieneGanadorDeBonusComodin.! !

!StageGroupTest methodsFor: 'Private Test - StageGroup' stamp: 'MB 12/7/2018 18:47:00'!
test010_EnCasoDeNoHaberEmpateEnBonusPromocionSeCoronaAlGanadorAlPrimerPuestoDelRanking
	
	sg
		
			agregarPuntajeTotal: 5
			a: saw;
		
			agregarPuntajeTotal: 4
			a: residentEvil;
		
			agregarPuntajeTotal: 3
			a: destinoFinal.
			
	sg armarRanking.
	sg definirBonusPromocion.
	
	Assert isFalse: sg noTieneGanadorDeBonusPromocion.! !

!StageGroupTest methodsFor: 'Private Test - StageGroup' stamp: 'MB 12/7/2018 18:47:08'!
test011_EnCasoDeHaberDobleEmpateEnBonusPromocionSeDefineAlGanadorEnPvP
	
	sg
		
			agregarPuntajeTotal: 5
			a: saw;
		
			agregarPuntajeTotal: 5
			a: residentEvil;
		
			agregarPuntajeTotal: 3
			a: destinoFinal.
			
	sg armarRanking.
	sg definirBonusPromocion.
	
	Assert isFalse: sg noTieneGanadorDeBonusPromocion.! !

!StageGroupTest methodsFor: 'Private Test - StageGroup' stamp: 'MB 12/7/2018 18:47:23'!
test012_EnCasoDeHaberTripleEmpateEnBonusPromocionSeDefineAlGanadorEnPvP
	
	sg
		
			agregarPuntajeTotal: 5
			a: saw;
		
			agregarPuntajeTotal: 5
			a: residentEvil;
		
			agregarPuntajeTotal: 5
			a: destinoFinal.
			
	sg armarRanking.
	sg definirBonusPromocion.
	
	Assert isFalse: sg noTieneGanadorDeBonusPromocion.! !

!StageGroupTest methodsFor: 'Private Test - StageGroup' stamp: 'MB 12/7/2018 18:47:30'!
test013_EnCasoDeNoHaberEmpateEnBonusInvitacionSeCoronaAlGanadorAlPrimerPuestoDelRanking
	sg
		
			agregarPuntajeTotal: 5
			a: saw;
		
			agregarPuntajeTotal: 4
			a: residentEvil.
			
	sg armarRanking.
	sg definirBonusInvitacion.
	
	Assert isFalse: sg noTieneGanadorDeBonusInvitacion.! !

!StageGroupTest methodsFor: 'Private Test - StageGroup' stamp: 'MB 12/7/2018 18:47:46'!
test014_EnCasoDeHaberDobleEmpateEnBonusInvitacionSeDefineAlGanadorEnPvP
	sg
		
			agregarPuntajeTotal: 5
			a: saw;
		
			agregarPuntajeTotal: 5
			a: residentEvil.
			
	sg armarRanking.
	sg definirBonusInvitacion.
	
	Assert isFalse: sg noTieneGanadorDeBonusInvitacion.! !

!AnalizadorDeBonus class methodsFor: 'casos posibles bonus' stamp: 'MB 12/3/2018 23:14:15'!
casosDeBonusPromocion
	
	^ { EstadoDeDobleEmpate . EstadoDeTripleEmpate . EstadoDeEmpateNulo }! !

!AnalizadorDeBonus class methodsFor: 'casos posibles bonus' stamp: 'MB 12/5/2018 19:10:39'!
casosPosiblesBonusComodin
	^ self allSubclasses .! !

!AnalizadorDeBonus class methodsFor: 'casos posibles bonus' stamp: 'MB 12/3/2018 23:57:58'!
casosPosiblesInvitacion
	
	^ { EstadoDeDobleEmpate . EstadoDeEmpateNulo }! !

!AnalizadorDeBonus class methodsFor: 'analizador de bonus' stamp: 'MB 12/5/2018 19:10:15'!
unEstadoBonusComodinPara: unRanking de: unStageGroup
	
	^ (self casosPosiblesBonusComodin detect: [ :unEstado | unEstado puedeHacerseCargoDeBonusComodin: unRanking de: unStageGroup ]) new.! !

!AnalizadorDeBonus class methodsFor: 'analizador de bonus' stamp: 'MB 12/5/2018 19:50:30'!
unEstadoBonusInvitacionPara: unRanking de: unStageGroup 
	
	^ (self casosPosiblesInvitacion detect: [ :unEstado | unEstado puedeHacerseCargoDeBonusInvitacion: unRanking de: unStageGroup ]) new.! !

!AnalizadorDeBonus class methodsFor: 'analizador de bonus' stamp: 'MB 12/5/2018 19:41:11'!
unEstadoBonusPromocionPara: unRanking de: unStageGroup 
	
	^ (self casosDeBonusPromocion detect: [ :unEstado | unEstado puedeHacerseCargoDeBonusPromocion: unRanking de: unStageGroup ]) new.! !

!EstadoDeCuatripleEmpate methodsFor: 'instance status - bonus' stamp: 'MB 1/23/2019 23:19:50'!
definirGanadorComodinPara: unStageGroup 
	
	unStageGroup definirCuatripleEmpateDeBonusComodin.! !

!EstadoDeCuatripleEmpate class methodsFor: 'status - bonus' stamp: 'MB 12/5/2018 19:17:23'!
puedeHacerseCargoDeBonusComodin: unRanking de: unStageGroup 
	
	^ unStageGroup casoDeCuatripleEmpateEnBonusComodin: unRanking ! !

!EstadoDeDobleEmpate methodsFor: 'instance status - bonus' stamp: 'MB 1/20/2019 14:56:51'!
definirGanadorComodinPara: unStageGroup 
	
	unStageGroup definirDobleEmpateDeBonusComodin.! !

!EstadoDeDobleEmpate methodsFor: 'instance status - bonus' stamp: 'MB 1/24/2019 16:12:22'!
definirGanadorInvitacionPara: unStageGroup 
	
	unStageGroup definirDobleEmpateDeBonusInvitacion.! !

!EstadoDeDobleEmpate methodsFor: 'instance status - bonus' stamp: 'MB 1/24/2019 15:37:10'!
definirGanadorPromocionPara: unStageGroup 
	
	unStageGroup  definirDobleEmpateDeBonusPromocion.! !

!EstadoDeDobleEmpate class methodsFor: 'status - bonus' stamp: 'MB 12/5/2018 19:45:38'!
puedeHacerseCargoDeBonusComodin: unRanking de: unStageGroup
	^ unStageGroup casoDeDobleEmpateEnBonusComodin: unRanking.! !

!EstadoDeDobleEmpate class methodsFor: 'status - bonus' stamp: 'MB 12/5/2018 19:52:04'!
puedeHacerseCargoDeBonusInvitacion: unRanking de: unStageGroup 
	
	^ unStageGroup casoDeDobleEmpateEnBonusInvitacion: unRanking! !

!EstadoDeDobleEmpate class methodsFor: 'status - bonus' stamp: 'MB 12/5/2018 19:44:50'!
puedeHacerseCargoDeBonusPromocion: unRanking de: unStageGroup 
	
	^ unStageGroup casoDeDobleEmpateEnBonusPromocion: unRanking! !

!EstadoDeEmpateNulo methodsFor: 'instance status - bonus' stamp: 'MB 11/30/2018 23:59:30'!
definirGanadorComodinPara: unStageGroup 
	
	unStageGroup coronarGanadorComodinAlPrimerPuestoDelRanking! !

!EstadoDeEmpateNulo methodsFor: 'instance status - bonus' stamp: 'MB 12/4/2018 00:00:34'!
definirGanadorInvitacionPara: unStageGroup 
	
	unStageGroup  coronarGanadorInvitacionAlPrimerPuestoDelRanking! !

!EstadoDeEmpateNulo methodsFor: 'instance status - bonus' stamp: 'MB 12/3/2018 23:28:11'!
definirGanadorPromocionPara: unStageGroup 
	
	unStageGroup coronarGanadorPromocionAlPrimerPuestoDelRanking! !

!EstadoDeEmpateNulo class methodsFor: 'status - bonus' stamp: 'MB 12/5/2018 19:14:56'!
puedeHacerseCargoDeBonusComodin: unRanking de: unStageGroup 
	
	^ unStageGroup casoDeEmpateNuloDeBonusComodin: unRanking! !

!EstadoDeEmpateNulo class methodsFor: 'status - bonus' stamp: 'MB 12/5/2018 19:55:16'!
puedeHacerseCargoDeBonusInvitacion: unRanking de: unStageGroup 
	
	^ unStageGroup casoDeEmpateNuloDeBonusComodin: unRanking! !

!EstadoDeEmpateNulo class methodsFor: 'status - bonus' stamp: 'MB 12/5/2018 19:49:59'!
puedeHacerseCargoDeBonusPromocion: unRanking de: unStageGroup 
	
	^ unStageGroup  casoDeEmpateNuloDeBonusComodin: unRanking! !

!EstadoDeTripleEmpate methodsFor: 'instance status - bonus' stamp: 'MB 1/20/2019 14:47:01'!
definirGanadorComodinPara: unStageGroup 
	
	unStageGroup definirTripleEmpateDeBonusComodin.! !

!EstadoDeTripleEmpate methodsFor: 'instance status - bonus' stamp: 'MB 1/24/2019 15:47:37'!
definirGanadorPromocionPara: unStageGroup 
	
	unStageGroup definirTripleEmpateDeBonusPromocion.! !

!EstadoDeTripleEmpate class methodsFor: 'status - bonus' stamp: 'MB 12/5/2018 19:36:43'!
puedeHacerseCargoDeBonusComodin: unRanking de: unStageGroup 
	
	^ unStageGroup casoDeTripleEmpateDeBonusComodin: unRanking! !

!EstadoDeTripleEmpate class methodsFor: 'status - bonus' stamp: 'MB 12/5/2018 19:47:07'!
puedeHacerseCargoDeBonusPromocion: unRanking de: unStageGroup 
	
	^ unStageGroup casoDeTripleEmpateEnBonusPromocion: unRanking! !

!AnalizadorDeCantidadDePeliculas class methodsFor: 'analizador - cantidad de peliculas' stamp: 'MB 3/17/2019 23:29:01'!
unEstadoDeCantidadDePeliculas: unaListaDePeliculas 
	
	^ (self allSubclasses detect: [:unEstado | unEstado puedeHacerseCargo: unaListaDePeliculas ]) new! !

!EstadoDeCantidadIgualACero methodsFor: 'definition - cantidad de peliculas' stamp: 'MB 3/18/2019 00:18:20'!
definirProcesamientoDeFinalPrecuelaTicket: unaListaDePeliculas en: unProcesador 
	
	unProcesador asociarPeliculasEnFinalPrecuelaTicket.! !

!EstadoDeCantidadIgualACero methodsFor: 'definition - cantidad de peliculas' stamp: 'MB 3/26/2019 18:14:15'!
definirProcesamientoPeliculasEnTopTicket: unaListaDeTopPeliculas en: unProcesador
	^ unProcesador codificacionAuxiliarB.! !

!EstadoDeCantidadIgualACero methodsFor: 'definition - cantidad de peliculas' stamp: 'MB 3/26/2019 18:12:25'!
definirProcesamientoPeliculasGanadorasDeBonusInvitacion: unaListaDePeliculas en: unProcesador
	^ unProcesador codificacionAuxiliarC.! !

!EstadoDeCantidadIgualACero class methodsFor: 'status - cantidad peliculas' stamp: 'MB 3/17/2019 23:49:12'!
puedeHacerseCargo: unaListaDePeliculas 
	
	^ unaListaDePeliculas size = 0! !

!EstadoDeCantidadMayorACero methodsFor: 'definition - cantidad de peliculas' stamp: 'MB 3/21/2019 23:54:20'!
definirProcesamientoDeEndTicket: topLista de: unColiseum en: unEndTicket 
	
	| peliculaAProcesar |
	
	peliculaAProcesar _ topLista keys asOrderedCollection .
	
	! !

!EstadoDeCantidadMayorACero methodsFor: 'definition - cantidad de peliculas' stamp: 'MB 3/26/2019 23:53:00'!
definirProcesamientoDeFinalPrecuelaTicket: unaListaDePeliculas en: unProcesador 
	
	| peliculaAProcesar listaAProcesar |
	
	listaAProcesar _ OrderedCollection new.
	
	listaAProcesar addAll: unaListaDePeliculas .
	
	peliculaAProcesar _ listaAProcesar first .
	
	unProcesador procesarPeliculaEnPrecuelaTicket: peliculaAProcesar .
	
	listaAProcesar remove: peliculaAProcesar .
	
	(unProcesador estadoCantidadDePeliculas: listaAProcesar ) definirProcesamientoDeFinalPrecuelaTicket: listaAProcesar en: unProcesador ! !

!EstadoDeCantidadMayorACero methodsFor: 'definition - cantidad de peliculas' stamp: 'MB 3/22/2019 00:31:34'!
definirProcesamientoPeliculasEnTopTicket: unaListaDeTopPeliculas en: unProcesador 
	
	| peliculaAProcesar |
	
	peliculaAProcesar _ unaListaDeTopPeliculas first .
	
	unProcesador procesarTopPelicula: peliculaAProcesar .
	
	unaListaDeTopPeliculas remove: peliculaAProcesar .
	
	^ (unProcesador estadoCantidadDePeliculas: unaListaDeTopPeliculas ) definirProcesamientoPeliculasEnTopTicket: unaListaDeTopPeliculas en: unProcesador ! !

!EstadoDeCantidadMayorACero methodsFor: 'definition - cantidad de peliculas' stamp: 'MB 3/22/2019 01:05:45'!
definirProcesamientoPeliculasGanadorasDeBonusInvitacion: unaListaDePeliculas en: unProcesador 
	
	| peliculaAProcesar |
	
	peliculaAProcesar _ unaListaDePeliculas first .
	
	unProcesador procesarGanadorBonusInvitacion: peliculaAProcesar .
	
	unaListaDePeliculas remove: peliculaAProcesar .
	
	^ (unProcesador estadoCantidadDePeliculas: unaListaDePeliculas ) definirProcesamientoPeliculasGanadorasDeBonusInvitacion: unaListaDePeliculas en: unProcesador ! !

!EstadoDeCantidadMayorACero class methodsFor: 'status - cantidad de peliculas ' stamp: 'MB 3/17/2019 23:33:19'!
puedeHacerseCargo: unaListaDePeliculas 
	
	^ unaListaDePeliculas size > 0! !

!AnalizadorDeCantidadDePeliculasInscriptas class methodsFor: 'analizador - cantidad de peliculas inscriptas' stamp: 'MB 7/23/2019 22:33:55'!
unEstadoDeCantidadDePeliculasInscriptasEn: unColiseum 
	
	^ (self allSubclasses detect: [ :unEstado | unEstado puedeHacerseCargoDe: unColiseum ]) new! !

!EstadoCumpleConLaCantidadMinimaDePeliculasInscritasYPeliculasReservadas methodsFor: 'instance status - cantidad de peliculas inscriptas' stamp: 'MB 8/17/2019 14:44:00'!
definirEstadoActualDelColiseum: unColiseum
	unColiseum armarStageGroup.
	unColiseum definirTodosLosStageGroup.
	unColiseum armarIntroMvM.
	unColiseum definirTodosLosIntroMvM.
	unColiseum armarPreEndMvM.
	unColiseum definirTodosLosPreEndMvM.
	unColiseum armarEndMvM.
	unColiseum definirElEndMvM.! !

!EstadoCumpleConLaCantidadMinimaDePeliculasInscritasYPeliculasReservadas class methodsFor: 'status - cantidad de peliculas inscriptas' stamp: 'MB 7/26/2019 23:45:02'!
puedeHacerseCargoDe: unColiseum
	^ unColiseum cumpleConLaCantidadMinimaDePeliculasInscriptasYConLasPeliculasReservadas.! !

!EstadoNoCumpleConLaCantidadMinimaDePeliculasInscriptas methodsFor: 'instance status - cantidad de peliculas inscriptas' stamp: 'MB 7/26/2019 20:07:24'!
definirEstadoActualDelColiseum: unColiseum 
	
	^ self error: 'Cumples con las peliculas reservadas pero no hay suficientes peliculas inscriptas: 12 Peliculas'! !

!EstadoNoCumpleConLaCantidadMinimaDePeliculasInscriptas class methodsFor: 'status - cantidad de peliculas inscriptas' stamp: 'MB 7/26/2019 23:35:29'!
puedeHacerseCargoDe: unColiseum
	^ unColiseum noCumpleConLaCantidadMinimaDePeliculasInscriptasPeroSiConLasPeliculasReservadas.! !

!EstadoNoCumpleConLaCantidadMinimaDePeliculasInscriptasNiConLasPeliculasReservadas methodsFor: 'instance status - cantidad de peliculas inscriptas' stamp: 'MB 7/23/2019 23:26:37'!
definirEstadoActualDelColiseum: unColiseum 
	
	^ self error: 'No hay suficientes peliculas inscriptas, capacidad minima: 16 peliculas ( 12 libres + 4 reservado )'! !

!EstadoNoCumpleConLaCantidadMinimaDePeliculasInscriptasNiConLasPeliculasReservadas class methodsFor: 'status - cantidad de peliculas inscriptas' stamp: 'MB 7/26/2019 23:43:09'!
puedeHacerseCargoDe: unColiseum
	^ unColiseum noCumpleConLaCantidadMinimaDePeliculasInscriptasNiConLasPeliculasReservadas.! !

!EstadoNoCumpleConLasPeliculasReservadas methodsFor: 'instance status - cantidad de peliculas inscriptas' stamp: 'MB 7/26/2019 22:07:48'!
definirEstadoActualDelColiseum: unColiseum 
	
	^ self error: 'Cumples con la cantidad de peliculas inscriptas pero no con las peliculas reservadas'! !

!EstadoNoCumpleConLasPeliculasReservadas class methodsFor: 'status - cantidad de peliculas inscriptas' stamp: 'MB 7/26/2019 23:43:28'!
puedeHacerseCargoDe: unColiseum
	^ unColiseum noCumpleConLasPeliculasReservadasPeroSiConLaCantidadMinimaDePeliculasInscriptas.! !

!AnalizadorDeCategoria class methodsFor: 'analizador - categoria' stamp: 'MB 3/23/2019 23:20:22'!
unEstadoCategoriaDe: unGenero para: unLeague 
	
	^ (self allSubclasses detect: [:unEstado | unEstado puedeHacerseCargo: unGenero en: unLeague ]) new! !

!EstadoDeGeneroExistente methodsFor: 'instance status - genero' stamp: 'MB 3/23/2019 23:34:31'!
buscarCategoria: unGenero en: unLeague 
	
	^ unLeague buscarCategoriaConGenero: unGenero ! !

!EstadoDeGeneroExistente class methodsFor: 'status - genero' stamp: 'MB 3/23/2019 23:25:39'!
puedeHacerseCargo: unGenero en: unaLeague 
	
	^ unaLeague existeGeneroEnCategorias: unGenero ! !

!EstadoDeGeneroInexistente methodsFor: 'instance status - genero' stamp: 'MB 3/26/2019 21:46:38'!
buscarCategoria: unGenero en: unaLeague 
	
	^ self error: 'No existe el genero de la pelicula en ninguna categoria'! !

!EstadoDeGeneroInexistente class methodsFor: 'status - genero' stamp: 'MB 3/26/2019 21:44:44'!
puedeHacerseCargo: unGenero en: unaLeague 
	
	^ unaLeague noExisteGeneroEnCategorias: unGenero ! !

!AnalizadorDeEstadoBlackPlayOff class methodsFor: 'analizador de estado black playOff' stamp: 'MB 12/7/2018 21:14:16'!
unEstadoDeBlackPlayOffPara: peliculaA vs: peliculaB en: unPlayOff
	^ self allSubclasses detect: [ :unEstado |
		unEstado
			hacerseCargoDe: peliculaA
			vs: peliculaB
			en: unPlayOff ].! !

!EstadoBlackPlayOffEmpatado methodsFor: 'analyze instance - blackplayoff' stamp: 'MB 8/17/2019 15:16:35'!
analizarSiguientePuntoDeBlackPlayOffDeEndMvM: peliculaA vs: peliculaB en: unPlayOff
	unPlayOff blackPlayOff
		definirBlackPlayOffEndMvM: peliculaA
		vs: peliculaB
		en: unPlayOff.! !

!EstadoBlackPlayOffEmpatado methodsFor: 'analyze instance - blackplayoff' stamp: 'MB 8/17/2019 15:16:54'!
analizarSiguientePuntoDeBlackPlayOffDePreEndMvM: peliculaA vs: peliculaB en: unPlayOff
	unPlayOff blackPlayOff
		definirBlackPlayOffPreEndMvMA: peliculaA
		vs: peliculaB
		en: unPlayOff.! !

!EstadoBlackPlayOffEmpatado methodsFor: 'analyze instance - blackplayoff' stamp: 'MB 3/2/2019 00:00:49'!
analizarSiguientePuntoDeBlackPlayOffDePrimerVersusDeCuadripeEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	unPlayOff blackPlayOff definirBlackPlayOffPrimerVersusDeCuatripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff ! !

!EstadoBlackPlayOffEmpatado methodsFor: 'analyze instance - blackplayoff' stamp: 'MB 3/1/2019 23:54:58'!
analizarSiguientePuntoDeBlackPlayOffDePrimerVersusDeTripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	unPlayOff blackPlayOff definirBlackPlayOffPrimerVersusDeTripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff ! !

!EstadoBlackPlayOffEmpatado methodsFor: 'analyze instance - blackplayoff' stamp: 'MB 3/2/2019 22:15:36'!
analizarSiguientePuntoDeBlackPlayOffDePrimerVersusDeTripleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff 
	
	unPlayOff blackPlayOff definirBlackPlayOffPrimerVersusDeTripleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff ! !

!EstadoBlackPlayOffEmpatado methodsFor: 'analyze instance - blackplayoff' stamp: 'MB 3/2/2019 00:22:33'!
analizarSiguientePuntoDeBlackPlayOffDeSegundoVersusDeCuatripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	unPlayOff blackPlayOff definirBlackPlayOffSegundoVersusDeCuatripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff! !

!EstadoBlackPlayOffEmpatado methodsFor: 'analyze instance - blackplayoff' stamp: 'MB 3/1/2019 23:56:26'!
analizarSiguientePuntoDeBlackPlayOffDeSegundoVersusDeTripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	unPlayOff blackPlayOff definirBlackPlayOffSegundoVersusDeTripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff! !

!EstadoBlackPlayOffEmpatado methodsFor: 'analyze instance - blackplayoff' stamp: 'MB 3/2/2019 22:45:32'!
analizarSiguientePuntoDeBlackPlayOffDeSegundoVersusDeTripleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff 

	unPlayOff blackPlayOff definirBlackPlayOffSegundoVersusDeTripleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff ! !

!EstadoBlackPlayOffEmpatado methodsFor: 'analyze instance - blackplayoff' stamp: 'MB 3/2/2019 00:59:40'!
analizarSiguientePuntoDeBlackPlayOffDeTercerVersusDeCuatripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	unPlayOff blackPlayOff definirBlackPlayOffTercerVersusDeCuatripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff ! !

!EstadoBlackPlayOffEmpatado methodsFor: 'analyze instance - blackplayoff' stamp: 'MB 3/1/2019 23:57:07'!
analizarSiguientePuntoDeBlackPlayOffDeUnicoBlackPlayOffDeStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	unPlayOff blackPlayOff definirUnicoBlackPlayOffStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff! !

!EstadoBlackPlayOffEmpatado methodsFor: 'analyze instance - blackplayoff' stamp: 'MB 3/2/2019 23:15:30'!
analizarSiguientePuntoDeBlackPlayOffDeUnicoVersusDeDobleEmpateStageGroupBonusInvitacion: peliculaA vs: peliculaB en: unPlayOff 
	
	unPlayOff blackPlayOff definirBlackPlayOffUnicoVersusDeStageGroupBonusInvitacion: peliculaA vs: peliculaB en: unPlayOff ! !

!EstadoBlackPlayOffEmpatado class methodsFor: 'status - black playOff' stamp: 'MB 12/7/2018 21:13:07'!
analizarSiguientePuntoDeBlackPlayOff: peliculaA vs: peliculaB en: unPlayOff
	unPlayOff blackPlayOff
		definirBlackPlayOff: peliculaA
		vs: peliculaB
		en: unPlayOff.! !

!EstadoBlackPlayOffEmpatado class methodsFor: 'analyze - blackPlayOff' stamp: 'MB 8/17/2019 15:16:36'!
analizarSiguientePuntoDeBlackPlayOffDeEndMvM: peliculaA vs: peliculaB en: unPlayOff
	self crearInstancia
		analizarSiguientePuntoDeBlackPlayOffDeEndMvM: peliculaA
		vs: peliculaB
		en: unPlayOff.! !

!EstadoBlackPlayOffEmpatado class methodsFor: 'analyze - blackPlayOff' stamp: 'MB 8/17/2019 15:16:56'!
analizarSiguientePuntoDeBlackPlayOffDePreEndMvM: peliculaA vs: peliculaB en: unPlayOff
	^ self crearInstancia
		analizarSiguientePuntoDeBlackPlayOffDePreEndMvM: peliculaA
		vs: peliculaB
		en: unPlayOff.! !

!EstadoBlackPlayOffEmpatado class methodsFor: 'analyze - blackPlayOff' stamp: 'MB 3/1/2019 23:59:20'!
analizarSiguientePuntoDeBlackPlayOffDePrimerVersusDeCuadripeEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	self crearInstancia analizarSiguientePuntoDeBlackPlayOffDePrimerVersusDeCuadripeEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff ! !

!EstadoBlackPlayOffEmpatado class methodsFor: 'analyze - blackPlayOff' stamp: 'MB 3/1/2019 23:57:42'!
analizarSiguientePuntoDeBlackPlayOffDePrimerVersusDeTripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	self crearInstancia analizarSiguientePuntoDeBlackPlayOffDePrimerVersusDeTripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff ! !

!EstadoBlackPlayOffEmpatado class methodsFor: 'analyze - blackPlayOff' stamp: 'MB 3/2/2019 22:14:32'!
analizarSiguientePuntoDeBlackPlayOffDePrimerVersusDeTripleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff 
	
	^ self crearInstancia analizarSiguientePuntoDeBlackPlayOffDePrimerVersusDeTripleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff ! !

!EstadoBlackPlayOffEmpatado class methodsFor: 'analyze - blackPlayOff' stamp: 'MB 3/2/2019 00:21:09'!
analizarSiguientePuntoDeBlackPlayOffDeSegundoVersusDeCuatripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	self crearInstancia analizarSiguientePuntoDeBlackPlayOffDeSegundoVersusDeCuatripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff ! !

!EstadoBlackPlayOffEmpatado class methodsFor: 'analyze - blackPlayOff' stamp: 'MB 3/1/2019 23:58:08'!
analizarSiguientePuntoDeBlackPlayOffDeSegundoVersusDeTripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	self crearInstancia analizarSiguientePuntoDeBlackPlayOffDeSegundoVersusDeTripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff ! !

!EstadoBlackPlayOffEmpatado class methodsFor: 'analyze - blackPlayOff' stamp: 'MB 3/2/2019 22:43:30'!
analizarSiguientePuntoDeBlackPlayOffDeSegundoVersusDeTripleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff 
	
	^ self crearInstancia analizarSiguientePuntoDeBlackPlayOffDeSegundoVersusDeTripleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff ! !

!EstadoBlackPlayOffEmpatado class methodsFor: 'analyze - blackPlayOff' stamp: 'MB 3/2/2019 00:58:23'!
analizarSiguientePuntoDeBlackPlayOffDeTercerVersusDeCuatripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	self crearInstancia analizarSiguientePuntoDeBlackPlayOffDeTercerVersusDeCuatripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff! !

!EstadoBlackPlayOffEmpatado class methodsFor: 'analyze - blackPlayOff' stamp: 'MB 3/1/2019 23:58:50'!
analizarSiguientePuntoDeBlackPlayOffDeUnicoBlackPlayOffDeStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	self crearInstancia analizarSiguientePuntoDeBlackPlayOffDeUnicoBlackPlayOffDeStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff ! !

!EstadoBlackPlayOffEmpatado class methodsFor: 'analyze - blackPlayOff' stamp: 'MB 3/2/2019 22:55:49'!
analizarSiguientePuntoDeBlackPlayOffDeUnicoVersusDeDobleEmpateStageGroupBonusInvitacion: peliculaA vs: peliculaB en: unPlayOff 
	
	^ self crearInstancia analizarSiguientePuntoDeBlackPlayOffDeUnicoVersusDeDobleEmpateStageGroupBonusInvitacion: peliculaA vs: peliculaB en: unPlayOff 
	! !

!EstadoBlackPlayOffEmpatado class methodsFor: 'analyze - blackPlayOff' stamp: 'MB 3/2/2019 17:11:18'!
analizarSiguientePuntoDeBlackPlayOffDeUnicoVersusDeDobleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff 
	
	unPlayOff blackPlayOff definirUnicoBlackPlayOffParaStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff
	! !

!EstadoBlackPlayOffEmpatado class methodsFor: 'analyze - blackPlayOff' stamp: 'MB 3/1/2019 23:54:35'!
crearInstancia

	^ self new! !

!EstadoBlackPlayOffEmpatado class methodsFor: 'status - black playOff' stamp: 'MB 12/7/2018 21:12:52'!
hacerseCargoDe: peliculaA vs: peliculaB en: unPlayOff
	^ unPlayOff
		estadoEmpatadoBlackPlayOff: peliculaA
		vs: peliculaB.! !

!EstadoGanadorBlackPlayOffPeliculaA methodsFor: 'instance status - ganador blackplayoff' stamp: 'MB 8/17/2019 15:16:35'!
analizarSiguientePuntoDeBlackPlayOffDeEndMvM: peliculaA vs: peliculaB en: unPlayOff
	| listaDePuntosBlackPlayOffPeliculaA listaDePuntosBlackPlayOffPeliculaB |
	listaDePuntosBlackPlayOffPeliculaA _ unPlayOff listaDePuntosBlackPlayOffParticipanteA.
	listaDePuntosBlackPlayOffPeliculaB _ unPlayOff listaDePuntosBlackPlaOffParticipanteB.
	unPlayOff
		registrarGanadorPlayOff: peliculaA;
		registrarPerdedorPlayOff: peliculaB.
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaAEnSubticketDeFinalPvP: listaDePuntosBlackPlayOffPeliculaA.
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaBEnSubticketDeFinalPvP: listaDePuntosBlackPlayOffPeliculaB.
	unPlayOff resetearListaBlackPlayOff.! !

!EstadoGanadorBlackPlayOffPeliculaA methodsFor: 'instance status - ganador blackplayoff' stamp: 'MB 8/17/2019 15:16:55'!
analizarSiguientePuntoDeBlackPlayOffDePreEndMvM: peliculaA vs: peliculaB en: unPlayOff
	| listaDePuntosBlackPlayOffPeliculaA listaDePuntosBlackPlayOffPeliculaB |
	listaDePuntosBlackPlayOffPeliculaA _ unPlayOff listaDePuntosBlackPlayOffParticipanteA.
	listaDePuntosBlackPlayOffPeliculaB _ unPlayOff listaDePuntosBlackPlaOffParticipanteB.
	unPlayOff
		registrarGanadorPlayOff: peliculaA;
		registrarPerdedorPlayOff: peliculaB.
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaAEnSubticketDePreFinalPvPA: listaDePuntosBlackPlayOffPeliculaA.
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaBEnSubticketDePreFinalPvPA: listaDePuntosBlackPlayOffPeliculaB.
	unPlayOff resetearListaBlackPlayOff.! !

!EstadoGanadorBlackPlayOffPeliculaA methodsFor: 'instance status - ganador blackplayoff' stamp: 'MB 3/3/2019 22:30:54'!
analizarSiguientePuntoDeBlackPlayOffDePrimerVersusDeCuadripeEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	| listaDePuntosBlackPlayOffPeliculaA listaDePuntosBlackPlayOffPeliculaB |
	
	listaDePuntosBlackPlayOffPeliculaA _ unPlayOff listaDePuntosBlackPlayOffParticipanteA.
	
	listaDePuntosBlackPlayOffPeliculaB _ unPlayOff listaDePuntosBlackPlaOffParticipanteB.
	
	unPlayOff
		registrarGanadorPlayOff: peliculaA;
		registrarPerdedorPlayOff: peliculaB.
		
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaAEnSubticketDePrimerVersusDeCuatripleEmpateDeStageGroupEnBonusComodin: listaDePuntosBlackPlayOffPeliculaA .
	
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaBEnSubticketDePrimerVersusDeCuatripleEmpateDeStageGroupEnBonusComodin:  listaDePuntosBlackPlayOffPeliculaB .
	
	unPlayOff resetearListaBlackPlayOff.! !

!EstadoGanadorBlackPlayOffPeliculaA methodsFor: 'instance status - ganador blackplayoff' stamp: 'MB 3/3/2019 22:31:07'!
analizarSiguientePuntoDeBlackPlayOffDePrimerVersusDeTripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	| listaDePuntosBlackPlayOffPeliculaA listaDePuntosBlackPlayOffPeliculaB |
	
	listaDePuntosBlackPlayOffPeliculaA _ unPlayOff listaDePuntosBlackPlayOffParticipanteA.
	
	listaDePuntosBlackPlayOffPeliculaB _ unPlayOff listaDePuntosBlackPlaOffParticipanteB.
	
	unPlayOff
		registrarGanadorPlayOff: peliculaA;
		registrarPerdedorPlayOff: peliculaB.
		
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaAEnSubticketDePrimerVersusDeTripleEmpateDeStageGroupEnBonusComodin: listaDePuntosBlackPlayOffPeliculaA .
	
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaBEnSubticketDePrimerVersusDeTripleEmpateDeStageGroupEnBonusComodin:  listaDePuntosBlackPlayOffPeliculaB .
	
	unPlayOff resetearListaBlackPlayOff.! !

!EstadoGanadorBlackPlayOffPeliculaA methodsFor: 'instance status - ganador blackplayoff' stamp: 'MB 3/3/2019 22:31:29'!
analizarSiguientePuntoDeBlackPlayOffDePrimerVersusDeTripleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff 
	
	| listaDePuntosBlackPlayOffPeliculaA listaDePuntosBlackPlayOffPeliculaB |
	
	listaDePuntosBlackPlayOffPeliculaA _ unPlayOff listaDePuntosBlackPlayOffParticipanteA.
	
	listaDePuntosBlackPlayOffPeliculaB _ unPlayOff listaDePuntosBlackPlaOffParticipanteB.
	
	unPlayOff
		registrarGanadorPlayOff: peliculaA;
		registrarPerdedorPlayOff: peliculaB.
		
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaAEnSubticketDePrimerVersusDeTripleEmpateDeStageGroupEnBonusPromocion: listaDePuntosBlackPlayOffPeliculaA .
	
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaBEnSubticketDePrimerVersusDeTripleEmpateDeStageGroupEnBonusPromocion:  listaDePuntosBlackPlayOffPeliculaB .
	
	unPlayOff resetearListaBlackPlayOff.! !

!EstadoGanadorBlackPlayOffPeliculaA methodsFor: 'instance status - ganador blackplayoff' stamp: 'MB 3/3/2019 22:31:41'!
analizarSiguientePuntoDeBlackPlayOffDeSegundoVersusDeCuatripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	| listaDePuntosBlackPlayOffPeliculaA listaDePuntosBlackPlayOffPeliculaB |
	
	listaDePuntosBlackPlayOffPeliculaA _ unPlayOff listaDePuntosBlackPlayOffParticipanteA.
	
	listaDePuntosBlackPlayOffPeliculaB _ unPlayOff listaDePuntosBlackPlaOffParticipanteB.
	
	unPlayOff
		registrarGanadorPlayOff: peliculaA;
		registrarPerdedorPlayOff: peliculaB.
		
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaAEnSubticketDeSegundoVersusDeCuatripleEmpateDeStageGroupEnBonusComodin: listaDePuntosBlackPlayOffPeliculaA .
	
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaBEnSubticketDeSegundoVersusDeCuatripleEmpateDeStageGroupEnBonusComodin:  listaDePuntosBlackPlayOffPeliculaB .
	
	unPlayOff resetearListaBlackPlayOff.! !

!EstadoGanadorBlackPlayOffPeliculaA methodsFor: 'instance status - ganador blackplayoff' stamp: 'MB 3/3/2019 22:31:50'!
analizarSiguientePuntoDeBlackPlayOffDeSegundoVersusDeTripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	| listaDePuntosBlackPlayOffPeliculaA listaDePuntosBlackPlayOffPeliculaB |
	
	listaDePuntosBlackPlayOffPeliculaA _ unPlayOff listaDePuntosBlackPlayOffParticipanteA.
	
	listaDePuntosBlackPlayOffPeliculaB _ unPlayOff listaDePuntosBlackPlaOffParticipanteB.
	
	unPlayOff
		registrarGanadorPlayOff: peliculaA;
		registrarPerdedorPlayOff: peliculaB.
		
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaAEnSubticketDeSegundoVersusDeTripleEmpateDeStageGroupEnBonusComodin: listaDePuntosBlackPlayOffPeliculaA .
	
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaBEnSubticketDeSegundoVersusDeTripleEmpateDeStageGroupEnBonusComodin:  listaDePuntosBlackPlayOffPeliculaB .
	
	unPlayOff resetearListaBlackPlayOff.! !

!EstadoGanadorBlackPlayOffPeliculaA methodsFor: 'instance status - ganador blackplayoff' stamp: 'MB 3/3/2019 22:32:05'!
analizarSiguientePuntoDeBlackPlayOffDeSegundoVersusDeTripleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff 
	
	| listaDePuntosBlackPlayOffPeliculaA listaDePuntosBlackPlayOffPeliculaB |
	
	listaDePuntosBlackPlayOffPeliculaA _ unPlayOff listaDePuntosBlackPlayOffParticipanteA.
	
	listaDePuntosBlackPlayOffPeliculaB _ unPlayOff listaDePuntosBlackPlaOffParticipanteB.
	
	unPlayOff
		registrarGanadorPlayOff: peliculaA;
		registrarPerdedorPlayOff: peliculaB.
		
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaAEnSubticketDeSegundoVersusDeTripleEmpateDeStageGroupEnBonusPromocion: listaDePuntosBlackPlayOffPeliculaA .
	
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaBEnSubticketDeSegundoVersusDeTripleEmpateDeStageGroupEnBonusPromocion:  listaDePuntosBlackPlayOffPeliculaB .
	
	unPlayOff resetearListaBlackPlayOff.! !

!EstadoGanadorBlackPlayOffPeliculaA methodsFor: 'instance status - ganador blackplayoff' stamp: 'MB 3/3/2019 22:32:21'!
analizarSiguientePuntoDeBlackPlayOffDeUnicoBlackPlayOffDeStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	| listaDePuntosBlackPlayOffPeliculaA listaDePuntosBlackPlayOffPeliculaB |
	
	listaDePuntosBlackPlayOffPeliculaA _ unPlayOff listaDePuntosBlackPlayOffParticipanteA.
	
	listaDePuntosBlackPlayOffPeliculaB _ unPlayOff listaDePuntosBlackPlaOffParticipanteB.
	
	unPlayOff
		registrarGanadorPlayOff: peliculaA;
		registrarPerdedorPlayOff: peliculaB.
		
	unPlayOff registrarListaDePuntosBlackPlayOffDeParticipanteAEnSubticketDeUnicoPlayOffDeStageGroupEnBonusComodin: listaDePuntosBlackPlayOffPeliculaA .
	
	unPlayOff registrarListaDePuntosBlackPlayOffDeParticipanteBEnSubticketDeUnicoPlayOffDeStageGroupEnBonusComodin: listaDePuntosBlackPlayOffPeliculaB .
	
	unPlayOff resetearListaBlackPlayOff.! !

!EstadoGanadorBlackPlayOffPeliculaA methodsFor: 'instance status - ganador blackplayoff' stamp: 'MB 3/3/2019 22:32:33'!
analizarSiguientePuntoDeBlackPlayOffDeUnicoVersusDeDobleEmpateStageGroupBonusInvitacion: peliculaA vs: peliculaB en: unPlayOff 
	
	| listaDePuntosBlackPlayOffPeliculaA listaDePuntosBlackPlayOffPeliculaB |
	
	listaDePuntosBlackPlayOffPeliculaA _ unPlayOff listaDePuntosBlackPlayOffParticipanteA.
	
	listaDePuntosBlackPlayOffPeliculaB _ unPlayOff listaDePuntosBlackPlaOffParticipanteB.
	
	unPlayOff
		registrarGanadorPlayOff: peliculaA;
		registrarPerdedorPlayOff: peliculaB.
		
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaAEnSubticketDeUnicoVersusDeDobleEmpateDeStageGroupEnBonusInvitacion: listaDePuntosBlackPlayOffPeliculaA .
	
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaBEnSubticketDeUnicoVersusDeDobleEmpateDeStageGroupEnBonusInvitacion:  listaDePuntosBlackPlayOffPeliculaB .
	
	unPlayOff resetearListaBlackPlayOff.! !

!EstadoGanadorBlackPlayOffPeliculaA methodsFor: 'instance status - ganador blackplayoff' stamp: 'MB 3/3/2019 22:32:45'!
analizarSiguientePuntoDeBlackPlayOffDeUnicoVersusDeDobleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff 
	
	| listaDePuntosBlackPlayOffPeliculaA listaDePuntosBlackPlayOffPeliculaB |
	
	listaDePuntosBlackPlayOffPeliculaA _ unPlayOff listaDePuntosBlackPlayOffParticipanteA.
	
	listaDePuntosBlackPlayOffPeliculaB _ unPlayOff listaDePuntosBlackPlaOffParticipanteB.
	
	unPlayOff
		registrarGanadorPlayOff: peliculaA;
		registrarPerdedorPlayOff: peliculaB.
		
	unPlayOff registrarListaDePuntosBlackPlayOffDeParticipanteAEnSubticketDeUnicoPlayOffDeStageGroupEnBonusPromocion: listaDePuntosBlackPlayOffPeliculaA .
	
	unPlayOff registrarListaDePuntosBlackPlayOffDeParticipanteBEnSubticketDeUnicoPlayOffDeStageGroupEnBonusPromocion: listaDePuntosBlackPlayOffPeliculaB .
	
	unPlayOff resetearListaBlackPlayOff.! !

!EstadoGanadorBlackPlayOffPeliculaA class methodsFor: 'status - ganador blackplayoff' stamp: 'MB 12/7/2018 21:11:16'!
analizarSiguientePuntoDeBlackPlayOff: peliculaA vs: peliculaB en: unPlayOff
	unPlayOff
		registrarGanadorPlayOff: peliculaA;
		registrarPerdedorPlayOff: peliculaB.! !

!EstadoGanadorBlackPlayOffPeliculaA class methodsFor: 'status - ganador blackplayoff' stamp: 'MB 8/17/2019 15:16:36'!
analizarSiguientePuntoDeBlackPlayOffDeEndMvM: peliculaA vs: peliculaB en: unPlayOff
	self crearInstancia
		analizarSiguientePuntoDeBlackPlayOffDeEndMvM: peliculaA
		vs: peliculaB
		en: unPlayOff.! !

!EstadoGanadorBlackPlayOffPeliculaA class methodsFor: 'status - ganador blackplayoff' stamp: 'MB 8/17/2019 15:16:56'!
analizarSiguientePuntoDeBlackPlayOffDePreEndMvM: peliculaA vs: peliculaB en: unPlayOff
	^ self crearInstancia
		analizarSiguientePuntoDeBlackPlayOffDePreEndMvM: peliculaA
		vs: peliculaB
		en: unPlayOff.! !

!EstadoGanadorBlackPlayOffPeliculaA class methodsFor: 'status - ganador blackplayoff' stamp: 'MB 3/1/2019 23:31:59'!
analizarSiguientePuntoDeBlackPlayOffDePrimerVersusDeCuadripeEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	^ self crearInstancia analizarSiguientePuntoDeBlackPlayOffDePrimerVersusDeCuadripeEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff ! !

!EstadoGanadorBlackPlayOffPeliculaA class methodsFor: 'status - ganador blackplayoff' stamp: 'MB 3/1/2019 22:53:52'!
analizarSiguientePuntoDeBlackPlayOffDePrimerVersusDeTripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	^ self crearInstancia analizarSiguientePuntoDeBlackPlayOffDePrimerVersusDeTripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff ! !

!EstadoGanadorBlackPlayOffPeliculaA class methodsFor: 'status - ganador blackplayoff' stamp: 'MB 3/2/2019 22:10:05'!
analizarSiguientePuntoDeBlackPlayOffDePrimerVersusDeTripleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff 
	
	^ self crearInstancia analizarSiguientePuntoDeBlackPlayOffDePrimerVersusDeTripleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff! !

!EstadoGanadorBlackPlayOffPeliculaA class methodsFor: 'status - ganador blackplayoff' stamp: 'MB 3/2/2019 00:12:57'!
analizarSiguientePuntoDeBlackPlayOffDeSegundoVersusDeCuatripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	self crearInstancia analizarSiguientePuntoDeBlackPlayOffDeSegundoVersusDeCuatripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	! !

!EstadoGanadorBlackPlayOffPeliculaA class methodsFor: 'status - ganador blackplayoff' stamp: 'MB 3/1/2019 22:50:17'!
analizarSiguientePuntoDeBlackPlayOffDeSegundoVersusDeTripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	^ self crearInstancia analizarSiguientePuntoDeBlackPlayOffDeSegundoVersusDeTripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff! !

!EstadoGanadorBlackPlayOffPeliculaA class methodsFor: 'status - ganador blackplayoff' stamp: 'MB 3/2/2019 22:29:16'!
analizarSiguientePuntoDeBlackPlayOffDeSegundoVersusDeTripleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff

	^ self crearInstancia analizarSiguientePuntoDeBlackPlayOffDeSegundoVersusDeTripleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff! !

!EstadoGanadorBlackPlayOffPeliculaA class methodsFor: 'status - ganador blackplayoff' stamp: 'MB 3/2/2019 01:04:21'!
analizarSiguientePuntoDeBlackPlayOffDeTercerVersusDeCuatripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	| listaDePuntosBlackPlayOffPeliculaA listaDePuntosBlackPlayOffPeliculaB |
	
	listaDePuntosBlackPlayOffPeliculaA _ unPlayOff listaDePuntosBlackPlayOffParticipanteA.
	
	listaDePuntosBlackPlayOffPeliculaB _ unPlayOff listaDePuntosBlackPlaOffParticipanteB.
	
	unPlayOff
		registrarGanadorPlayOff: peliculaA;
		registrarPerdedorPlayOff: peliculaB.
		
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaAEnSubticketDeTercerVersusDeCuatripleEmpateDeStageGroupEnBonusComodin: listaDePuntosBlackPlayOffPeliculaA .
	
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaBEnSubticketDeTercerVersusDeCuatripleEmpateDeStageGroupEnBonusComodin:  listaDePuntosBlackPlayOffPeliculaB .! !

!EstadoGanadorBlackPlayOffPeliculaA class methodsFor: 'status - ganador blackplayoff' stamp: 'MB 3/1/2019 22:53:23'!
analizarSiguientePuntoDeBlackPlayOffDeUnicoBlackPlayOffDeStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	^ self crearInstancia analizarSiguientePuntoDeBlackPlayOffDeUnicoBlackPlayOffDeStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff ! !

!EstadoGanadorBlackPlayOffPeliculaA class methodsFor: 'status - ganador blackplayoff' stamp: 'MB 3/2/2019 23:17:32'!
analizarSiguientePuntoDeBlackPlayOffDeUnicoVersusDeDobleEmpateStageGroupBonusInvitacion: peliculaA vs: peliculaB en: unPlayOff 

	self crearInstancia analizarSiguientePuntoDeBlackPlayOffDeUnicoVersusDeDobleEmpateStageGroupBonusInvitacion: peliculaA vs: peliculaB en: unPlayOff ! !

!EstadoGanadorBlackPlayOffPeliculaA class methodsFor: 'status - ganador blackplayoff' stamp: 'MB 3/2/2019 17:04:49'!
analizarSiguientePuntoDeBlackPlayOffDeUnicoVersusDeDobleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff 
	
	^ self crearInstancia analizarSiguientePuntoDeBlackPlayOffDeUnicoVersusDeDobleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff ! !

!EstadoGanadorBlackPlayOffPeliculaA class methodsFor: 'instance creation' stamp: 'MB 3/1/2019 22:52:47'!
crearInstancia

	^ self new ! !

!EstadoGanadorBlackPlayOffPeliculaA class methodsFor: 'status - ganador blackplayoff' stamp: 'MB 12/7/2018 21:11:29'!
hacerseCargoDe: peliculaA vs: peliculaB en: unPlayOff
	^ unPlayOff
		estadoGanadorBlackPlayOffPeliculaA: peliculaA
		vs: peliculaB.! !

!EstadoGanadorBlackPlayOffPeliculaB methodsFor: 'instance status - ganador blackplayoff' stamp: 'MB 8/17/2019 15:16:34'!
analizarSiguientePuntoDeBlackPlayOffDeEndMvM: peliculaA vs: peliculaB en: unPlayOff
	| listaDePuntosBlackPlayOffPeliculaA listaDePuntosBlackPlayOffPeliculaB |
	listaDePuntosBlackPlayOffPeliculaA _ unPlayOff listaDePuntosBlackPlayOffParticipanteA.
	listaDePuntosBlackPlayOffPeliculaB _ unPlayOff listaDePuntosBlackPlaOffParticipanteB.
	unPlayOff
		registrarGanadorPlayOff: peliculaB;
		registrarPerdedorPlayOff: peliculaA.
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaAEnSubticketDeFinalPvP: listaDePuntosBlackPlayOffPeliculaA.
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaBEnSubticketDeFinalPvP: listaDePuntosBlackPlayOffPeliculaB.
	unPlayOff resetearListaBlackPlayOff.! !

!EstadoGanadorBlackPlayOffPeliculaB methodsFor: 'instance status - ganador blackplayoff' stamp: 'MB 8/17/2019 15:16:55'!
analizarSiguientePuntoDeBlackPlayOffDePreEndMvM: peliculaA vs: peliculaB en: unPlayOff
	| listaDePuntosBlackPlayOffPeliculaA listaDePuntosBlackPlayOffPeliculaB |
	listaDePuntosBlackPlayOffPeliculaA _ unPlayOff listaDePuntosBlackPlayOffParticipanteA.
	listaDePuntosBlackPlayOffPeliculaB _ unPlayOff listaDePuntosBlackPlaOffParticipanteB.
	unPlayOff
		registrarGanadorPlayOff: peliculaB;
		registrarPerdedorPlayOff: peliculaA.
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaAEnSubticketDePreFinalPvPA: listaDePuntosBlackPlayOffPeliculaA.
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaBEnSubticketDePreFinalPvPA: listaDePuntosBlackPlayOffPeliculaB.
	unPlayOff resetearListaBlackPlayOff.! !

!EstadoGanadorBlackPlayOffPeliculaB methodsFor: 'instance status - ganador blackplayoff' stamp: 'MB 3/3/2019 22:33:29'!
analizarSiguientePuntoDeBlackPlayOffDePrimerVersusDeCuadripeEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	| listaDePuntosBlackPlayOffPeliculaA listaDePuntosBlackPlayOffPeliculaB |
	
	listaDePuntosBlackPlayOffPeliculaA _ unPlayOff listaDePuntosBlackPlayOffParticipanteA.
	
	listaDePuntosBlackPlayOffPeliculaB _ unPlayOff listaDePuntosBlackPlaOffParticipanteB.
	
	unPlayOff
		registrarGanadorPlayOff: peliculaB;
		registrarPerdedorPlayOff: peliculaA.
		
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaAEnSubticketDePrimerVersusDeCuatripleEmpateDeStageGroupEnBonusComodin: listaDePuntosBlackPlayOffPeliculaA .
	
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaBEnSubticketDePrimerVersusDeCuatripleEmpateDeStageGroupEnBonusComodin:  listaDePuntosBlackPlayOffPeliculaB .
	
	unPlayOff resetearListaBlackPlayOff.! !

!EstadoGanadorBlackPlayOffPeliculaB methodsFor: 'instance status - ganador blackplayoff' stamp: 'MB 3/3/2019 22:33:50'!
analizarSiguientePuntoDeBlackPlayOffDePrimerVersusDeTripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	| listaDePuntosBlackPlayOffPeliculaA listaDePuntosBlackPlayOffPeliculaB |
	
	listaDePuntosBlackPlayOffPeliculaA _ unPlayOff listaDePuntosBlackPlayOffParticipanteA.
	
	listaDePuntosBlackPlayOffPeliculaB _ unPlayOff listaDePuntosBlackPlaOffParticipanteB.
	
	unPlayOff
		registrarGanadorPlayOff: peliculaB;
		registrarPerdedorPlayOff: peliculaA.
		
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaAEnSubticketDePrimerVersusDeTripleEmpateDeStageGroupEnBonusComodin: listaDePuntosBlackPlayOffPeliculaA .
	
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaBEnSubticketDePrimerVersusDeTripleEmpateDeStageGroupEnBonusComodin:  listaDePuntosBlackPlayOffPeliculaB .
	
	unPlayOff resetearListaBlackPlayOff.! !

!EstadoGanadorBlackPlayOffPeliculaB methodsFor: 'instance status - ganador blackplayoff' stamp: 'MB 3/3/2019 22:34:03'!
analizarSiguientePuntoDeBlackPlayOffDePrimerVersusDeTripleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff 
	
	| listaDePuntosBlackPlayOffPeliculaA listaDePuntosBlackPlayOffPeliculaB |
	
	listaDePuntosBlackPlayOffPeliculaA _ unPlayOff listaDePuntosBlackPlayOffParticipanteA.
	
	listaDePuntosBlackPlayOffPeliculaB _ unPlayOff listaDePuntosBlackPlaOffParticipanteB.
	
	unPlayOff
		registrarGanadorPlayOff: peliculaB;
		registrarPerdedorPlayOff: peliculaA.
		
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaAEnSubticketDePrimerVersusDeTripleEmpateDeStageGroupEnBonusPromocion: listaDePuntosBlackPlayOffPeliculaA .
	
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaBEnSubticketDePrimerVersusDeTripleEmpateDeStageGroupEnBonusPromocion:  listaDePuntosBlackPlayOffPeliculaB .
	
	unPlayOff resetearListaBlackPlayOff.! !

!EstadoGanadorBlackPlayOffPeliculaB methodsFor: 'instance status - ganador blackplayoff' stamp: 'MB 3/3/2019 22:34:16'!
analizarSiguientePuntoDeBlackPlayOffDeSegundoVersusDeCuatripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	| listaDePuntosBlackPlayOffPeliculaA listaDePuntosBlackPlayOffPeliculaB |
	
	listaDePuntosBlackPlayOffPeliculaA _ unPlayOff listaDePuntosBlackPlayOffParticipanteA.
	
	listaDePuntosBlackPlayOffPeliculaB _ unPlayOff listaDePuntosBlackPlaOffParticipanteB.
	
	unPlayOff
		registrarGanadorPlayOff: peliculaB;
		registrarPerdedorPlayOff: peliculaA.
		
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaAEnSubticketDeSegundoVersusDeCuatripleEmpateDeStageGroupEnBonusComodin: listaDePuntosBlackPlayOffPeliculaA .
	
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaBEnSubticketDeSegundoVersusDeCuatripleEmpateDeStageGroupEnBonusComodin:  listaDePuntosBlackPlayOffPeliculaB .
	
	unPlayOff resetearListaBlackPlayOff.! !

!EstadoGanadorBlackPlayOffPeliculaB methodsFor: 'instance status - ganador blackplayoff' stamp: 'MB 3/3/2019 22:34:31'!
analizarSiguientePuntoDeBlackPlayOffDeSegundoVersusDeTripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	| listaDePuntosBlackPlayOffPeliculaA listaDePuntosBlackPlayOffPeliculaB |
	
	listaDePuntosBlackPlayOffPeliculaA _ unPlayOff listaDePuntosBlackPlayOffParticipanteA.
	
	listaDePuntosBlackPlayOffPeliculaB _ unPlayOff listaDePuntosBlackPlaOffParticipanteB.
	
	unPlayOff
		registrarGanadorPlayOff: peliculaB;
		registrarPerdedorPlayOff: peliculaA.
		
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaAEnSubticketDeSegundoVersusDeTripleEmpateDeStageGroupEnBonusComodin: listaDePuntosBlackPlayOffPeliculaA .
	
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaBEnSubticketDeSegundoVersusDeTripleEmpateDeStageGroupEnBonusComodin:  listaDePuntosBlackPlayOffPeliculaB .
	
	unPlayOff resetearListaBlackPlayOff.! !

!EstadoGanadorBlackPlayOffPeliculaB methodsFor: 'instance status - ganador blackplayoff' stamp: 'MB 3/3/2019 22:34:43'!
analizarSiguientePuntoDeBlackPlayOffDeSegundoVersusDeTripleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff 
	
	| listaDePuntosBlackPlayOffPeliculaA listaDePuntosBlackPlayOffPeliculaB |
	
	listaDePuntosBlackPlayOffPeliculaA _ unPlayOff listaDePuntosBlackPlayOffParticipanteA.
	
	listaDePuntosBlackPlayOffPeliculaB _ unPlayOff listaDePuntosBlackPlaOffParticipanteB.
	
	unPlayOff
		registrarGanadorPlayOff: peliculaB;
		registrarPerdedorPlayOff: peliculaA.
		
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaAEnSubticketDeSegundoVersusDeTripleEmpateDeStageGroupEnBonusPromocion: listaDePuntosBlackPlayOffPeliculaA .
	
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaBEnSubticketDeSegundoVersusDeTripleEmpateDeStageGroupEnBonusPromocion:  listaDePuntosBlackPlayOffPeliculaB .
	
	unPlayOff resetearListaBlackPlayOff.! !

!EstadoGanadorBlackPlayOffPeliculaB methodsFor: 'instance status - ganador blackplayoff' stamp: 'MB 3/3/2019 22:34:55'!
analizarSiguientePuntoDeBlackPlayOffDeTercerVersusDeCuatripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	| listaDePuntosBlackPlayOffPeliculaA listaDePuntosBlackPlayOffPeliculaB |
	
	listaDePuntosBlackPlayOffPeliculaA _ unPlayOff listaDePuntosBlackPlayOffParticipanteA.
	
	listaDePuntosBlackPlayOffPeliculaB _ unPlayOff listaDePuntosBlackPlaOffParticipanteB.
	
	unPlayOff
		registrarGanadorPlayOff: peliculaB;
		registrarPerdedorPlayOff: peliculaA.
		
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaAEnSubticketDeTercerVersusDeCuatripleEmpateDeStageGroupEnBonusComodin: listaDePuntosBlackPlayOffPeliculaA .
	
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaBEnSubticketDeTercerVersusDeCuatripleEmpateDeStageGroupEnBonusComodin:  listaDePuntosBlackPlayOffPeliculaB .
	
	unPlayOff resetearListaBlackPlayOff.! !

!EstadoGanadorBlackPlayOffPeliculaB methodsFor: 'instance status - ganador blackplayoff' stamp: 'MB 3/3/2019 22:35:14'!
analizarSiguientePuntoDeBlackPlayOffDeUnicoBlackPlayOffDeStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	| listaDePuntosBlackPlayOffPeliculaA listaDePuntosBlackPlayOffPeliculaB |
	
	listaDePuntosBlackPlayOffPeliculaA _ unPlayOff listaDePuntosBlackPlayOffParticipanteA.
	
	listaDePuntosBlackPlayOffPeliculaB _ unPlayOff listaDePuntosBlackPlaOffParticipanteB.
	
	unPlayOff
		registrarGanadorPlayOff: peliculaB;
		registrarPerdedorPlayOff: peliculaA.
		
	unPlayOff registrarListaDePuntosBlackPlayOffDeParticipanteAEnSubticketDeUnicoPlayOffDeStageGroupEnBonusComodin: listaDePuntosBlackPlayOffPeliculaA .
	
	unPlayOff registrarListaDePuntosBlackPlayOffDeParticipanteBEnSubticketDeUnicoPlayOffDeStageGroupEnBonusComodin: listaDePuntosBlackPlayOffPeliculaB .
	
	unPlayOff resetearListaBlackPlayOff.! !

!EstadoGanadorBlackPlayOffPeliculaB methodsFor: 'instance status - ganador blackplayoff' stamp: 'MB 3/3/2019 22:35:26'!
analizarSiguientePuntoDeBlackPlayOffDeUnicoVersusDeDobleEmpateStageGroupBonusInvitacion: peliculaA vs: peliculaB en: unPlayOff 
	
	| listaDePuntosBlackPlayOffPeliculaA listaDePuntosBlackPlayOffPeliculaB |
	
	listaDePuntosBlackPlayOffPeliculaA _ unPlayOff listaDePuntosBlackPlayOffParticipanteA.
	
	listaDePuntosBlackPlayOffPeliculaB _ unPlayOff listaDePuntosBlackPlaOffParticipanteB.
	
	unPlayOff
		registrarGanadorPlayOff: peliculaB;
		registrarPerdedorPlayOff: peliculaA.
		
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaAEnSubticketDeUnicoVersusDeDobleEmpateDeStageGroupEnBonusInvitacion: listaDePuntosBlackPlayOffPeliculaA .
	
	unPlayOff registrarListaDePuntosBlackPlayOffDePeliculaBEnSubticketDeUnicoVersusDeDobleEmpateDeStageGroupEnBonusInvitacion:  listaDePuntosBlackPlayOffPeliculaB .
	
	unPlayOff resetearListaBlackPlayOff.! !

!EstadoGanadorBlackPlayOffPeliculaB class methodsFor: 'status - ganador blackplayoff' stamp: 'MB 12/7/2018 21:11:00'!
analizarSiguientePuntoDeBlackPlayOff: peliculaA vs: peliculaB en: unPlayOff
	unPlayOff
		registrarGanadorPlayOff: peliculaB;
		registrarPerdedorPlayOff: peliculaA.! !

!EstadoGanadorBlackPlayOffPeliculaB class methodsFor: 'status - ganador blackplayoff' stamp: 'MB 8/17/2019 15:16:36'!
analizarSiguientePuntoDeBlackPlayOffDeEndMvM: peliculaA vs: peliculaB en: unPlayOff
	self crearInstancia
		analizarSiguientePuntoDeBlackPlayOffDeEndMvM: peliculaA
		vs: peliculaB
		en: unPlayOff.! !

!EstadoGanadorBlackPlayOffPeliculaB class methodsFor: 'status - ganador blackplayoff' stamp: 'MB 8/17/2019 15:16:56'!
analizarSiguientePuntoDeBlackPlayOffDePreEndMvM: peliculaA vs: peliculaB en: unPlayOff
	^ self crearInstancia
		analizarSiguientePuntoDeBlackPlayOffDePreEndMvM: peliculaA
		vs: peliculaB
		en: unPlayOff.! !

!EstadoGanadorBlackPlayOffPeliculaB class methodsFor: 'status - ganador blackplayoff' stamp: 'MB 3/2/2019 00:05:22'!
analizarSiguientePuntoDeBlackPlayOffDePrimerVersusDeCuadripeEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
  self crearInstancia analizarSiguientePuntoDeBlackPlayOffDePrimerVersusDeCuadripeEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff ! !

!EstadoGanadorBlackPlayOffPeliculaB class methodsFor: 'status - ganador blackplayoff' stamp: 'MB 3/1/2019 22:45:54'!
analizarSiguientePuntoDeBlackPlayOffDePrimerVersusDeTripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	^ self crearInstancia analizarSiguientePuntoDeBlackPlayOffDePrimerVersusDeTripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff ! !

!EstadoGanadorBlackPlayOffPeliculaB class methodsFor: 'status - ganador blackplayoff' stamp: 'MB 3/2/2019 22:16:59'!
analizarSiguientePuntoDeBlackPlayOffDePrimerVersusDeTripleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff 
	
	^ self crearInstancia analizarSiguientePuntoDeBlackPlayOffDePrimerVersusDeTripleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff 
	! !

!EstadoGanadorBlackPlayOffPeliculaB class methodsFor: 'status - ganador blackplayoff' stamp: 'MB 3/2/2019 00:24:24'!
analizarSiguientePuntoDeBlackPlayOffDeSegundoVersusDeCuatripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	self crearInstancia analizarSiguientePuntoDeBlackPlayOffDeSegundoVersusDeCuatripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff ! !

!EstadoGanadorBlackPlayOffPeliculaB class methodsFor: 'status - ganador blackplayoff' stamp: 'MB 3/1/2019 22:46:39'!
analizarSiguientePuntoDeBlackPlayOffDeSegundoVersusDeTripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	^ self crearInstancia analizarSiguientePuntoDeBlackPlayOffDeSegundoVersusDeTripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff! !

!EstadoGanadorBlackPlayOffPeliculaB class methodsFor: 'status - ganador blackplayoff' stamp: 'MB 3/2/2019 22:36:52'!
analizarSiguientePuntoDeBlackPlayOffDeSegundoVersusDeTripleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff 
	
	^ self crearInstancia analizarSiguientePuntoDeBlackPlayOffDeSegundoVersusDeTripleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff ! !

!EstadoGanadorBlackPlayOffPeliculaB class methodsFor: 'status - ganador blackplayoff' stamp: 'MB 3/2/2019 00:44:57'!
analizarSiguientePuntoDeBlackPlayOffDeTercerVersusDeCuatripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	^ self crearInstancia analizarSiguientePuntoDeBlackPlayOffDeTercerVersusDeCuatripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	! !

!EstadoGanadorBlackPlayOffPeliculaB class methodsFor: 'status - ganador blackplayoff' stamp: 'MB 3/1/2019 22:47:13'!
analizarSiguientePuntoDeBlackPlayOffDeUnicoBlackPlayOffDeStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	^ self crearInstancia analizarSiguientePuntoDeBlackPlayOffDeUnicoBlackPlayOffDeStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff ! !

!EstadoGanadorBlackPlayOffPeliculaB class methodsFor: 'status - ganador blackplayoff' stamp: 'MB 3/2/2019 23:10:37'!
analizarSiguientePuntoDeBlackPlayOffDeUnicoVersusDeDobleEmpateStageGroupBonusInvitacion: peliculaA vs: peliculaB en: unPlayOff 
	
	^ self crearInstancia analizarSiguientePuntoDeBlackPlayOffDeUnicoVersusDeDobleEmpateStageGroupBonusInvitacion: peliculaA vs: peliculaB en: unPlayOff ! !

!EstadoGanadorBlackPlayOffPeliculaB class methodsFor: 'status - ganador blackplayoff' stamp: 'MB 3/2/2019 17:13:01'!
analizarSiguientePuntoDeBlackPlayOffDeUnicoVersusDeDobleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff 
	
	| listaDePuntosBlackPlayOffPeliculaA listaDePuntosBlackPlayOffPeliculaB |
	
	listaDePuntosBlackPlayOffPeliculaA _ unPlayOff listaDePuntosBlackPlayOffParticipanteA.
	
	listaDePuntosBlackPlayOffPeliculaB _ unPlayOff listaDePuntosBlackPlaOffParticipanteB.
	
	unPlayOff
		registrarGanadorPlayOff: peliculaB;
		registrarPerdedorPlayOff: peliculaA.
		
	unPlayOff registrarListaDePuntosBlackPlayOffDeParticipanteAEnSubticketDeUnicoPlayOffDeStageGroupEnBonusPromocion: listaDePuntosBlackPlayOffPeliculaA .
	
	unPlayOff registrarListaDePuntosBlackPlayOffDeParticipanteBEnSubticketDeUnicoPlayOffDeStageGroupEnBonusPromocion: listaDePuntosBlackPlayOffPeliculaB .! !

!EstadoGanadorBlackPlayOffPeliculaB class methodsFor: 'instance creation' stamp: 'MB 3/1/2019 22:44:01'!
crearInstancia

	^ self new! !

!EstadoGanadorBlackPlayOffPeliculaB class methodsFor: 'status - ganador blackplayoff' stamp: 'MB 12/7/2018 21:10:50'!
hacerseCargoDe: peliculaA vs: peliculaB en: unPlayOff
	^ unPlayOff
		estadoGanadorBlackPlayOffPeliculaB: peliculaA
		vs: peliculaB.! !

!AnalizadorDeEstadoDePreTicket class methodsFor: 'analizador de estado preticket' stamp: 'MB 2/23/2019 18:48:18'!
unEstadoDeTicketPara: unPreTicketPlayOff 
	
	^ (self allSubclasses detect: [:unEstadoDePreTicket | unEstadoDePreTicket puedeHacerseCargo: unPreTicketPlayOff ]) new! !

!EstadoDePreTicketNoVacio methodsFor: 'instance status - preticket' stamp: 'MB 3/7/2019 21:41:31'!
codificarTicket
	procesador listaDePreticketPlayOffProcesados do: [ :unTicketProcesado |
		decodificador codificarNombreDePrimeraPeliculaDeTicket: unTicketProcesado ].
	procesador listaDePreticketPlayOffProcesados do: [ :unTicketProcesado |
		decodificador codificarNombreDeSegundaPeliculaDeTicket: unTicketProcesado ].
	procesador listaDePreticketPlayOffProcesados do: [ :unTicketProcesado |
		decodificador codificarPuntosDeTicket: unTicketProcesado ].! !

!EstadoDePreTicketNoVacio methodsFor: 'instance status - preticket' stamp: 'MB 3/26/2019 21:39:12'!
imprimirTicket
	impresora prepararHojaDeImpresion.
	decodificador listaDeTicketCodificados do: [ :unTicketCodificado |
		impresora imprimirTicketPlayOff: unTicketCodificado ].! !

!EstadoDePreTicketNoVacio methodsFor: 'initialization' stamp: 'MB 2/26/2019 14:50:34'!
initialize


	procesador _ Procesador new.
	
	decodificador _ Decodificador new.
	
	impresora _ Impresora new.! !

!EstadoDePreTicketNoVacio methodsFor: 'instance status - preticket' stamp: 'MB 3/7/2019 21:40:44'!
procesarTicket: unTicketPlayOff de: unNombreDeInstancia
	| unaListaDeSubticket |
	unaListaDeSubticket _ unTicketPlayOff dataIntancePlayOffEnPreTicket.
	unaListaDeSubticket do: [ :unSubTicket |
		procesador
			armarFinalTicketPlayOff: unSubTicket
			de: unNombreDeInstancia ].! !

!EstadoDePreTicketNoVacio methodsFor: 'instance status - preticket' stamp: 'MB 3/4/2019 23:27:17'!
realizarProcesamientoDePreticket: unTicketPlayOff de: unNombreDeInstancia
	
	self procesarTicket: unTicketPlayOff de: unNombreDeInstancia .
	
	self codificarTicket . 
	
	self imprimirTicket.! !

!EstadoDePreTicketNoVacio class methodsFor: 'status - preticket' stamp: 'MB 2/23/2019 18:48:55'!
puedeHacerseCargo: unPreTicketPlayOff 
	
	^ unPreTicketPlayOff noEstaVacio.! !

!EstadoDePreticketVacio methodsFor: 'instance status - preticket' stamp: 'MB 2/23/2019 22:21:24'!
realizarProcesamientoDePreticket: unPreTicketPlayOff de: unNombreDeInstacia 
	
	^ self! !

!EstadoDePreticketVacio class methodsFor: 'status - preticket' stamp: 'MB 2/23/2019 22:19:18'!
puedeHacerseCargo: unPreTicketPlayOff 
	
	^ unPreTicketPlayOff estaVacio.! !

!AnalizadorDeEstadoDeTandaBlackPlayOff class methodsFor: 'analizador de estado tanda blackplayoff' stamp: 'MB 2/28/2019 00:26:50'!
unEstadoDeTandaBlackPlayOffDe: unaListaDePuntos 
	
	^ (self allSubclasses detect: [:unEstadoDeLista | unEstadoDeLista puedeHacerseCargo: unaListaDePuntos ]) new! !

!EstadoDeListaDePuntosBlackPlayOffNoVacia methodsFor: 'instance status - lista de puntos blackplayoff' stamp: 'MB 2/28/2019 00:42:00'!
codificarTandaPointDeBlackPointDePrimeraPelicula: unFinalTicket 
	
	| listaCodificada  listaSinCodificar listaNueva  |
	
	
	listaSinCodificar _ unFinalTicket tandaPointBlackPlayOffDePrimeraPelicula. 
	
	listaNueva _ OrderedCollection new.
	
	listaSinCodificar do: [:unPunto |  listaNueva add: unPunto asString  ].
	
	
	listaCodificada _ '' join: listaNueva.
	
	unFinalTicket asociarTandaPointBlackPlayDePrimeraPeliculaEnTicket: listaCodificada 
	! !

!EstadoDeListaDePuntosBlackPlayOffNoVacia methodsFor: 'instance status - lista de puntos blackplayoff' stamp: 'MB 2/28/2019 21:23:25'!
codificarTandaPointDeBlackPointDeSegundaPelicula: unFinalTicket 
	
	| listaCodificada  listaSinCodificar listaNueva  |
	
	
	listaSinCodificar _ unFinalTicket tandaPointBlackPlayOffDeSegundaPelicula. 
	
	listaNueva _ OrderedCollection new.
	
	listaSinCodificar do: [:unPunto |  listaNueva add: unPunto asString  ].
	
	
	listaCodificada _ '' join: listaNueva.
	
	unFinalTicket asociarTandaPointBlackPlayDeSegundaPeliculaEnTicket: listaCodificada 
	! !

!EstadoDeListaDePuntosBlackPlayOffNoVacia class methodsFor: 'status - lista de puntos blackPlayOff' stamp: 'MB 2/28/2019 00:39:55'!
puedeHacerseCargo: unaListaDePuntos 
	
	^ unaListaDePuntos notEmpty! !

!EstadoDeListaDePuntosBlackPlayOffVacia methodsFor: 'instance status - lista de puntos blackplayoff' stamp: 'MB 3/5/2019 23:43:36'!
codificarTandaPointDeBlackPointDePrimeraPelicula: unFinalTicket 
	
	unFinalTicket asociarTandaPointBlackPlayDePrimeraPeliculaEnTicket: '--'.! !

!EstadoDeListaDePuntosBlackPlayOffVacia methodsFor: 'instance status - lista de puntos blackplayoff' stamp: 'MB 3/5/2019 23:43:46'!
codificarTandaPointDeBlackPointDeSegundaPelicula: unFinalTicket 
	
	unFinalTicket asociarTandaPointBlackPlayDeSegundaPeliculaEnTicket: '--'.! !

!EstadoDeListaDePuntosBlackPlayOffVacia class methodsFor: 'status - lista de puntos blackPlayOff' stamp: 'MB 2/28/2019 00:35:16'!
puedeHacerseCargo: unaListaDePuntos 
	
	^ unaListaDePuntos isEmpty! !

!AnalizadorDePuntaje class methodsFor: 'analizador de puntaje' stamp: 'MB 12/6/2018 21:43:48'!
unTipoDePuntajeDe: unTipoDePuntaje 
	
	^ (self allSubclasses detect: [:unEstado | unEstado puedeHacerseCargoDe: unTipoDePuntaje ]) new.! !

!EstadoDePuntajeNegativo methodsFor: 'instance status - puntaje' stamp: 'MB 12/7/2018 20:55:53'!
registrarPuntajeDeBlackPlayOffde: unaPelicula en: unPlayOff
	unPlayOff registrarPuntajeNegativoDe: unaPelicula.! !

!EstadoDePuntajeNegativo class methodsFor: 'status - puntaje' stamp: 'MB 1/4/2019 23:33:26'!
puedeHacerseCargoDe: unTipoDePuntaje 
	
	^ unTipoDePuntaje class = X! !

!EstadoDePuntajePositivo methodsFor: 'instance status - puntaje' stamp: 'MB 12/7/2018 20:56:09'!
registrarPuntajeDeBlackPlayOffde: unaPelicula en: unPlayOff
	unPlayOff registrarPuntajePositivoDe: unaPelicula.! !

!EstadoDePuntajePositivo class methodsFor: 'status - puntaje' stamp: 'MB 1/4/2019 23:31:50'!
puedeHacerseCargoDe: unTipoDePuntaje 
	
	^ unTipoDePuntaje class = O.! !

!AutorizadorDeEstadoDeTanda class methodsFor: 'autorizador - ronda' stamp: 'MB 4/12/2019 23:55:22'!
unEstadoIIIPara: unPointExpress 
	
	^ (self allSubclasses detect: [:unEstado | unEstado puedeHacerseCargoIII: unPointExpress ]) new! !

!AutorizadorDeEstadoDeTanda class methodsFor: 'autorizador - ronda' stamp: 'MB 4/12/2019 23:44:56'!
unEstadoIIPara: unPointExpress 
	
	^ (self allSubclasses detect: [:unEstado | unEstado puedeHacerseCargoII: unPointExpress ]) new! !

!AutorizadorDeEstadoDeTanda class methodsFor: 'autorizador - ronda' stamp: 'MB 4/13/2019 00:03:55'!
unEstadoIVPara: unPointExpress 
	
	^ (self allSubclasses detect: [:unEstado | unEstado puedeHacerseCargoIV: unPointExpress ]) new! !

!AutorizadorDeEstadoDeTanda class methodsFor: 'autorizador - ronda' stamp: 'MB 10/8/2018 21:24:54'!
unEstadoPara: unPoint 
	
	^ (self allSubclasses detect: [:unEstado | unEstado puedeHacerseCargo: unPoint ]) new! !

!EstadoDePrimerPuntoNegativo methodsFor: 'instance status - puntaje' stamp: 'MB 3/31/2019 01:12:41'!
jugarRepechajeIIIPara: unPoint
	unPoint definirTanda: unPoint tandaRepechajeIII.! !

!EstadoDePrimerPuntoNegativo methodsFor: 'instance status - puntaje' stamp: 'MB 3/31/2019 01:12:26'!
jugarRepechajeIIPara: unPoint
	unPoint definirTanda: unPoint tandaRepechajeII.! !

!EstadoDePrimerPuntoNegativo methodsFor: 'instance status - puntaje' stamp: 'MB 3/31/2019 01:14:40'!
jugarRepechajeIVPara: unPoint
	unPoint definirTanda: unPoint tandaRepechajeIV.! !

!EstadoDePrimerPuntoNegativo methodsFor: 'instance status - puntaje' stamp: 'MB 3/31/2019 01:12:01'!
jugarRepechajePara: unPoint
	unPoint definirTanda: unPoint tandaRepechaje.! !

!EstadoDePrimerPuntoNegativo class methodsFor: 'status - puntaje' stamp: 'MB 10/8/2018 21:28:26'!
puedeHacerseCargo: unPoint 
	
	^ unPoint tienePrimerPuntoNegativo! !

!EstadoDePrimerPuntoNegativo class methodsFor: 'autorizador - ronda' stamp: 'MB 4/12/2019 23:46:06'!
puedeHacerseCargoII: unPointExpress 
	
	^ unPointExpress tienePrimerPuntoIINegativo! !

!EstadoDePrimerPuntoNegativo class methodsFor: 'autorizador - ronda' stamp: 'MB 4/12/2019 23:56:48'!
puedeHacerseCargoIII: unPointExpress 
	
	^ unPointExpress tienePrimerPuntoIIINegativo! !

!EstadoDePrimerPuntoNegativo class methodsFor: 'autorizador - ronda' stamp: 'MB 4/13/2019 00:05:12'!
puedeHacerseCargoIV: unPointExpress 
	
	^ unPointExpress tienePrimerPuntoIVNegativo! !

!EstadoDePrimerPuntoPositivo methodsFor: 'instance status - puntaje' stamp: 'MB 3/31/2019 01:12:41'!
jugarRepechajeIIIPara: unPoint
	| unPuntaje |
	unPuntaje _ X conIdSimbolo: 'X'.
	^ unPoint
		registrarPunto: unPuntaje
		paraRonda: unPoint tandaRepechajeIII.! !

!EstadoDePrimerPuntoPositivo methodsFor: 'instance status - puntaje' stamp: 'MB 3/31/2019 01:12:26'!
jugarRepechajeIIPara: unPoint
	| unPuntaje |
	unPuntaje _ X conIdSimbolo: 'X'.
	^ unPoint
		registrarPunto: unPuntaje
		paraRonda: unPoint tandaRepechajeII.! !

!EstadoDePrimerPuntoPositivo methodsFor: 'instance status - puntaje' stamp: 'MB 3/31/2019 01:14:40'!
jugarRepechajeIVPara: unPoint
	| unPuntaje |
	unPuntaje _ X conIdSimbolo: 'X'.
	^ unPoint
		registrarPunto: unPuntaje
		paraRonda: unPoint tandaRepechajeIV.! !

!EstadoDePrimerPuntoPositivo methodsFor: 'instance status - puntaje' stamp: 'MB 3/31/2019 01:12:01'!
jugarRepechajePara: unPoint
	| unPuntaje |
	unPuntaje _ X conIdSimbolo: 'X'.
	^ unPoint
		registrarPunto: unPuntaje
		paraRonda: unPoint tandaRepechaje.! !

!EstadoDePrimerPuntoPositivo class methodsFor: 'status - puntaje' stamp: 'MB 10/8/2018 21:32:51'!
puedeHacerseCargo: unPoint 
	
	^ unPoint tienePrimerPuntoPositivo! !

!EstadoDePrimerPuntoPositivo class methodsFor: 'autorizador - ronda' stamp: 'MB 4/12/2019 23:51:41'!
puedeHacerseCargoII: unPointExpress 
	
	^  unPointExpress tienePrimerPuntoIIPositivo! !

!EstadoDePrimerPuntoPositivo class methodsFor: 'autorizador - ronda' stamp: 'MB 4/12/2019 23:59:08'!
puedeHacerseCargoIII: unPointExpress 
	
	^ unPointExpress tienePrimerPuntoIIIPositivo! !

!EstadoDePrimerPuntoPositivo class methodsFor: 'autorizador - ronda' stamp: 'MB 4/13/2019 00:09:33'!
puedeHacerseCargoIV: unPointExpress 
	
	^ unPointExpress tienePrimerPuntoIVPositivo! !

!AutorizadorDeRonda class methodsFor: 'autorizador - ronda' stamp: 'MB 10/7/2018 21:48:46'!
unEstadoDeRondaPara: unPoint deRonda: unaRonda 
	
	^ (self allSubclasses detect: [ :unEstado | unEstado puedeHacerseCargoDe: unPoint  deRonda: unaRonda ]) new! !

!EstadoDePuntoNegativo methodsFor: 'instance status - estado de punto' stamp: 'MB 10/8/2018 22:04:42'!
registrarSiguienteJugada: unPoint paraRonda: unaRonda
	^ unPoint.! !

!EstadoDePuntoNegativo class methodsFor: 'status - estado de punto' stamp: 'MB 10/7/2018 21:53:26'!
puedeHacerseCargoDe: unPoint deRonda: unaRonda 
	
	^ unPoint tieneElUltimoPuntoNegativoDeLaRonda: unaRonda ! !

!EstadoDePuntoPositivo methodsFor: 'instance status - estado de punto' stamp: 'MB 3/31/2019 01:02:20'!
registrarSiguienteJugada: unPoint paraRonda: unaRonda
	unPoint definirTanda: unaRonda.! !

!EstadoDePuntoPositivo class methodsFor: 'status - estado de punto' stamp: 'MB 10/7/2018 21:50:57'!
puedeHacerseCargoDe: unPoint deRonda: unaRonda 
	
	^ unPoint tieneElUltimoPuntoPositivoDeLaRonda: unaRonda ! !

!BlackPlayOff methodsFor: 'private analyze - blackplayoff' stamp: 'MB 8/17/2019 15:16:36'!
analizaEstadoBlackPlayOffDeEndMvM: peliculaA vs: peliculaB en: unPlayOff
	(self
		unEstadoDeBlackPlayOff: peliculaA
		vs: peliculaB
		en: unPlayOff)
		analizarSiguientePuntoDeBlackPlayOffDeEndMvM: peliculaA
		vs: peliculaB
		en: unPlayOff.! !

!BlackPlayOff methodsFor: 'private analyze - blackplayoff' stamp: 'MB 8/17/2019 15:16:56'!
analizaEstadoBlackPlayOffDePreEndMvMA: peliculaA vs: peliculaB en: unPlayOff
	(self
		unEstadoDeBlackPlayOff: peliculaA
		vs: peliculaB
		en: unPlayOff)
		analizarSiguientePuntoDeBlackPlayOffDePreEndMvM: peliculaA
		vs: peliculaB
		en: unPlayOff.! !

!BlackPlayOff methodsFor: 'private analyze - blackplayoff' stamp: 'MB 3/1/2019 23:31:00'!
analizaEstadoBlackPlayOffDePrimerVersusDeCuatripleEmpateEnStageBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	(self unEstadoDeBlackPlayOff: peliculaA vs: peliculaB en: unPlayOff) analizarSiguientePuntoDeBlackPlayOffDePrimerVersusDeCuadripeEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff.! !

!BlackPlayOff methodsFor: 'private analyze - blackplayoff' stamp: 'MB 3/1/2019 17:09:24'!
analizaEstadoBlackPlayOffDePrimerVersusDeTripleEmpateEnStageBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	(self unEstadoDeBlackPlayOff: peliculaA vs: peliculaB en: unPlayOff) analizarSiguientePuntoDeBlackPlayOffDePrimerVersusDeTripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff.! !

!BlackPlayOff methodsFor: 'private analyze - blackplayoff' stamp: 'MB 3/2/2019 17:21:27'!
analizaEstadoBlackPlayOffDePrimerVersusDeTripleEmpateEnStageBonusPromocion: peliculaA vs: peliculaB en: unPlayOff 
	
	(self unEstadoDeBlackPlayOff: peliculaA vs: peliculaB en: unPlayOff) analizarSiguientePuntoDeBlackPlayOffDePrimerVersusDeTripleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff.! !

!BlackPlayOff methodsFor: 'private analyze - blackplayoff' stamp: 'MB 3/2/2019 00:12:06'!
analizaEstadoBlackPlayOffDeSegundoVersusDeCuatripleEmpateEnStageBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	(self unEstadoDeBlackPlayOff: peliculaA vs: peliculaB en: unPlayOff) analizarSiguientePuntoDeBlackPlayOffDeSegundoVersusDeCuatripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff.! !

!BlackPlayOff methodsFor: 'private analyze - blackplayoff' stamp: 'MB 3/1/2019 17:37:21'!
analizaEstadoBlackPlayOffDeSegundoVersusDeTripleEmpateEnStageBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	(self unEstadoDeBlackPlayOff: peliculaA vs: peliculaB en: unPlayOff) analizarSiguientePuntoDeBlackPlayOffDeSegundoVersusDeTripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff.! !

!BlackPlayOff methodsFor: 'private analyze - blackplayoff' stamp: 'MB 3/2/2019 22:26:06'!
analizaEstadoBlackPlayOffDeSegundoVersusDeTripleEmpateEnStageBonusPromocion: peliculaA vs: peliculaB en: unPlayOff 
	
	(self unEstadoDeBlackPlayOff: peliculaA vs: peliculaB en: unPlayOff) analizarSiguientePuntoDeBlackPlayOffDeSegundoVersusDeTripleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff.! !

!BlackPlayOff methodsFor: 'private analyze - blackplayoff' stamp: 'MB 3/2/2019 00:43:53'!
analizaEstadoBlackPlayOffDeTercerVersusDeCuatripleEmpateEnStageBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	(self unEstadoDeBlackPlayOff: peliculaA vs: peliculaB en: unPlayOff) analizarSiguientePuntoDeBlackPlayOffDeTercerVersusDeCuatripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff.! !

!BlackPlayOff methodsFor: 'private analyze - blackplayoff' stamp: 'MB 7/22/2019 23:03:46'!
analizaEstadoBlackPlayOffDeUnicoVersusDeDobleEmpateEnStageBonusComodin: peliculaA vs: peliculaB en: unPlayOff
	
	(self unEstadoDeBlackPlayOff: peliculaA vs: peliculaB en: unPlayOff) analizarSiguientePuntoDeBlackPlayOffDeUnicoBlackPlayOffDeStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff.! !

!BlackPlayOff methodsFor: 'private analyze - blackplayoff' stamp: 'MB 3/2/2019 22:54:47'!
analizaEstadoBlackPlayOffDeUnicoVersusDeDobleEmpateEnStageBonusInvitacion: peliculaA vs: peliculaB en: unPlayOff 
	
	(self unEstadoDeBlackPlayOff: peliculaA vs: peliculaB en: unPlayOff) analizarSiguientePuntoDeBlackPlayOffDeUnicoVersusDeDobleEmpateStageGroupBonusInvitacion: peliculaA vs: peliculaB en: unPlayOff.! !

!BlackPlayOff methodsFor: 'private analyze - blackplayoff' stamp: 'MB 3/2/2019 17:03:54'!
analizaEstadoBlackPlayOffDeUnicoVersusDeDobleEmpateEnStageBonusPromocion: peliculaA vs: peliculaB en: unPlayOff 
	
	(self unEstadoDeBlackPlayOff: peliculaA vs: peliculaB en: unPlayOff) analizarSiguientePuntoDeBlackPlayOffDeUnicoVersusDeDobleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff.! !

!BlackPlayOff methodsFor: 'private - blackplayoff' stamp: 'MB 1/13/2019 19:40:36'!
analizarEstadoDeBlackPlayOff: peliculaA vs: peliculaB en: unPlayOff
	
	(self unEstadoDeBlackPlayOff: peliculaA vs: peliculaB en: unPlayOff) analizarSiguientePuntoDeBlackPlayOff: peliculaA vs: peliculaB en: unPlayOff.! !

!BlackPlayOff methodsFor: 'blackplayoff' stamp: 'MB 1/13/2019 21:28:43'!
definirBlackPlayOff: peliculaA vs: peliculaB en: unPlayOff
	
	self
		definirPuntoDeBlackPlayOffParaPeliculaAPara: unPlayOff
		de: peliculaA.
		
	self
		definirPuntoDeBlackPlayOffParaPeliculaBPara: unPlayOff
		de: peliculaB. 
		
	self
		analizarEstadoDeBlackPlayOff: peliculaA vs: peliculaB en: unPlayOff.! !

!BlackPlayOff methodsFor: 'definition - blackplayoff' stamp: 'MB 8/17/2019 14:37:56'!
definirBlackPlayOffEndMvM: peliculaA vs: peliculaB en: unPlayOff
	self
		definirPuntoDeBlackPlayOffParaPeliculaAPara: unPlayOff
		de: peliculaA.
	self
		definirPuntoDeBlackPlayOffParaPeliculaBPara: unPlayOff
		de: peliculaB.
	self
		analizaEstadoBlackPlayOffDeEndMvM: peliculaA
		vs: peliculaB
		en: unPlayOff.! !

!BlackPlayOff methodsFor: 'definition - blackplayoff' stamp: 'MB 8/17/2019 14:38:50'!
definirBlackPlayOffPreEndMvMA: peliculaA vs: peliculaB en: unPlayOff
	self
		definirPuntoDeBlackPlayOffParaPeliculaAPara: unPlayOff
		de: peliculaA.
	self
		definirPuntoDeBlackPlayOffParaPeliculaBPara: unPlayOff
		de: peliculaB.
	self
		analizaEstadoBlackPlayOffDePreEndMvMA: peliculaA
		vs: peliculaB
		en: unPlayOff.! !

!BlackPlayOff methodsFor: 'definition - blackplayoff' stamp: 'MB 3/1/2019 23:26:50'!
definirBlackPlayOffPrimerVersusDeCuatripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	self
		definirPuntoDeBlackPlayOffParaPeliculaAPara: unPlayOff
		de: peliculaA.
		
	self
		definirPuntoDeBlackPlayOffParaPeliculaBPara: unPlayOff
		de: peliculaB. 
		
	self
		analizaEstadoBlackPlayOffDePrimerVersusDeCuatripleEmpateEnStageBonusComodin: peliculaA vs: peliculaB en: unPlayOff.! !

!BlackPlayOff methodsFor: 'definition - blackplayoff' stamp: 'MB 3/1/2019 17:08:02'!
definirBlackPlayOffPrimerVersusDeTripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	self
		definirPuntoDeBlackPlayOffParaPeliculaAPara: unPlayOff
		de: peliculaA.
		
	self
		definirPuntoDeBlackPlayOffParaPeliculaBPara: unPlayOff
		de: peliculaB. 
		
	self analizaEstadoBlackPlayOffDePrimerVersusDeTripleEmpateEnStageBonusComodin: peliculaA vs: peliculaB en: unPlayOff .! !

!BlackPlayOff methodsFor: 'definition - blackplayoff' stamp: 'MB 3/2/2019 17:17:34'!
definirBlackPlayOffPrimerVersusDeTripleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff 
	
	self
		definirPuntoDeBlackPlayOffParaPeliculaAPara: unPlayOff
		de: peliculaA.
		
	self
		definirPuntoDeBlackPlayOffParaPeliculaBPara: unPlayOff
		de: peliculaB. 
		
		
	self analizaEstadoBlackPlayOffDePrimerVersusDeTripleEmpateEnStageBonusPromocion: peliculaA vs: peliculaB en: unPlayOff ! !

!BlackPlayOff methodsFor: 'definition - blackplayoff' stamp: 'MB 3/2/2019 00:11:01'!
definirBlackPlayOffSegundoVersusDeCuatripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	self
		definirPuntoDeBlackPlayOffParaPeliculaAPara: unPlayOff
		de: peliculaA.
		
	self
		definirPuntoDeBlackPlayOffParaPeliculaBPara: unPlayOff
		de: peliculaB. 
		
		
	self analizaEstadoBlackPlayOffDeSegundoVersusDeCuatripleEmpateEnStageBonusComodin: peliculaA vs: peliculaB en: unPlayOff! !

!BlackPlayOff methodsFor: 'definition - blackplayoff' stamp: 'MB 3/1/2019 17:34:08'!
definirBlackPlayOffSegundoVersusDeTripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	self
		definirPuntoDeBlackPlayOffParaPeliculaAPara: unPlayOff
		de: peliculaA.
		
	self
		definirPuntoDeBlackPlayOffParaPeliculaBPara: unPlayOff
		de: peliculaB. 
		
	self analizaEstadoBlackPlayOffDeSegundoVersusDeTripleEmpateEnStageBonusComodin: peliculaA vs: peliculaB en: unPlayOff .! !

!BlackPlayOff methodsFor: 'definition - blackplayoff' stamp: 'MB 3/2/2019 22:23:58'!
definirBlackPlayOffSegundoVersusDeTripleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff 
	
	self
		definirPuntoDeBlackPlayOffParaPeliculaAPara: unPlayOff
		de: peliculaA.
		
	self
		definirPuntoDeBlackPlayOffParaPeliculaBPara: unPlayOff
		de: peliculaB. 
		
		
	self analizaEstadoBlackPlayOffDeSegundoVersusDeTripleEmpateEnStageBonusPromocion: peliculaA vs: peliculaB en: unPlayOff! !

!BlackPlayOff methodsFor: 'definition - blackplayoff' stamp: 'MB 1/29/2019 22:00:32'!
definirBlackPlayOffStageGroup: peliculaA vs: peliculaB en: unPlayOff 
	
	self
		definirPuntoDeBlackPlayOffParaPeliculaAPara: unPlayOff
		de: peliculaA.
		
	self
		definirPuntoDeBlackPlayOffParaPeliculaBPara: unPlayOff
		de: peliculaB. 
		
	self
		analizarEstadoDeBlackPlayOff: peliculaA vs: peliculaB en: unPlayOff.! !

!BlackPlayOff methodsFor: 'definition - blackplayoff' stamp: 'MB 3/2/2019 00:32:20'!
definirBlackPlayOffTercerVersusDeCuatripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	self
		definirPuntoDeBlackPlayOffParaPeliculaAPara: unPlayOff
		de: peliculaA.
		
	self
		definirPuntoDeBlackPlayOffParaPeliculaBPara: unPlayOff
		de: peliculaB. 
		
		
	self
		analizaEstadoBlackPlayOffDeTercerVersusDeCuatripleEmpateEnStageBonusComodin: peliculaA vs: peliculaB en: unPlayOff ! !

!BlackPlayOff methodsFor: 'definition - blackplayoff' stamp: 'MB 3/2/2019 23:06:26'!
definirBlackPlayOffUnicoVersusDeStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff
	self
		definirPuntoDeBlackPlayOffParaPeliculaAPara: unPlayOff
		de: peliculaA.
	self
		definirPuntoDeBlackPlayOffParaPeliculaBPara: unPlayOff
		de: peliculaB.
	
	self
		analizaEstadoBlackPlayOffDeUnicoVersusDeDobleEmpateEnStageBonusComodin: peliculaA vs: peliculaB en: unPlayOff! !

!BlackPlayOff methodsFor: 'definition - blackplayoff' stamp: 'MB 3/2/2019 23:08:15'!
definirBlackPlayOffUnicoVersusDeStageGroupBonusInvitacion: peliculaA vs: peliculaB en: unPlayOff 
	
	self
		definirPuntoDeBlackPlayOffParaPeliculaAPara: unPlayOff
		de: peliculaA.
	self
		definirPuntoDeBlackPlayOffParaPeliculaBPara: unPlayOff
		de: peliculaB.
	
	self
		analizaEstadoBlackPlayOffDeUnicoVersusDeDobleEmpateEnStageBonusInvitacion: peliculaA vs: peliculaB en: unPlayOff! !

!BlackPlayOff methodsFor: 'private - blackplayoff' stamp: 'MB 2/28/2019 22:14:18'!
definirPuntoDeBlackPlayOffParaPeliculaAPara: unPlayOff de: unaPelicula
	
	DefinidorDePuntosBlackPlayOff unPuntajeParaParticipanteA: self puntosPeliculaA de: unaPelicula para: unPlayOff.! !

!BlackPlayOff methodsFor: 'private - blackplayoff' stamp: 'MB 2/28/2019 22:18:50'!
definirPuntoDeBlackPlayOffParaPeliculaBPara: unPlayOff de: unaPelicula
	
	DefinidorDePuntosBlackPlayOff unPuntajeParaParticipanteB: self puntosPeliculaB de: unaPelicula para: unPlayOff.! !

!BlackPlayOff methodsFor: 'definition - blackplayoff' stamp: 'MB 3/2/2019 17:01:51'!
definirUnicoBlackPlayOffParaStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff
	self
		definirPuntoDeBlackPlayOffParaPeliculaAPara: unPlayOff
		de: peliculaA.
	self
		definirPuntoDeBlackPlayOffParaPeliculaBPara: unPlayOff
		de: peliculaB.
	
	self
		analizaEstadoBlackPlayOffDeUnicoVersusDeDobleEmpateEnStageBonusPromocion: peliculaA vs: peliculaB en: unPlayOff ! !

!BlackPlayOff methodsFor: 'definition - blackplayoff' stamp: 'MB 3/2/2019 23:05:43'!
definirUnicoBlackPlayOffStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff
	self
		definirPuntoDeBlackPlayOffParaPeliculaAPara: unPlayOff
		de: peliculaA.
	self
		definirPuntoDeBlackPlayOffParaPeliculaBPara: unPlayOff
		de: peliculaB.
	self
		analizaEstadoBlackPlayOffDeUnicoVersusDeDobleEmpateEnStageBonusComodin: peliculaA
		vs: peliculaB
		en: unPlayOff.! !

!BlackPlayOff methodsFor: 'initialization' stamp: 'MB 8/12/2019 22:46:09'!
initialize
	puntosPeliculaA _ OrderedCollection new.
	puntosPeliculaB _ OrderedCollection new.
	listaRegistroPuntosPeliculaA _ OrderedCollection new.
	listaRegistroPuntosPeliculaB _ OrderedCollection new.
	ticket _ PreTicketMvM new.! !

!BlackPlayOff methodsFor: 'accessing' stamp: 'MB 12/12/2018 14:42:20'!
puntosPeliculaA
	^ puntosPeliculaA.! !

!BlackPlayOff methodsFor: 'accessing' stamp: 'MB 12/12/2018 14:42:38'!
puntosPeliculaB
	^ puntosPeliculaB.! !

!BlackPlayOff methodsFor: 'private - blackplayoff' stamp: 'MB 1/4/2019 23:09:46'!
registrarPuntajeNegativoEn: unaListaDePuntos en: unPlayOff de: unaPelicula 
	
	
	| puntajeNegativo|
	
	puntajeNegativo _ X conIdSimbolo: 'X'.
	
	
	unaListaDePuntos add: puntajeNegativo .
	
	unPlayOff guardarPuntajeDeBlackPlayOff: puntajeNegativo 
		de: unaPelicula.! !

!BlackPlayOff methodsFor: 'private - blackplayoff' stamp: 'MB 1/4/2019 23:30:01'!
registrarPuntajePositivoEn: unaListaDePuntos en: unPlayOff de: unaPelicula 
	
	
	| puntajePositivo|
	
	puntajePositivo _ O conIdSimbolo: 'O'.
	
	
	unaListaDePuntos add: puntajePositivo .
	
	unPlayOff guardarPuntajeDeBlackPlayOff: puntajePositivo 
		de: unaPelicula.! !

!BlackPlayOff methodsFor: 'private - blackplayoff' stamp: 'MB 12/7/2018 21:02:55'!
unEstadoDeBlackPlayOff: peliculaA vs: peliculaB en: unPlayOff
	
	^ AnalizadorDeEstadoBlackPlayOff
		unEstadoDeBlackPlayOffPara: peliculaA
		vs: peliculaB
		en: unPlayOff.! !

!BlackPlayOff class methodsFor: 'analizar black PlayOff' stamp: 'MB 12/7/2018 21:04:11'!
analizarSiguientePuntoDeBlackPlayOffDePeliculaB: peliculaA vs: peliculaB en: unPlayOff
	^ self crearInstancia
		analizarSiguientePuntoDeBlackPlayOffDePeliculaB: peliculaA
		vs: peliculaB
		en: unPlayOff.! !

!BlackPlayOff class methodsFor: 'instance creation' stamp: 'MB 10/23/2018 20:41:59'!
crearInstancia
	
	^ self new! !

!BlackPlayOff class methodsFor: 'definidor de puntos' stamp: 'MB 12/7/2018 21:04:29'!
definirBlackPlayOff: peliculaA vs: peliculaB en: unPlayOff
	^ self crearInstancia
		definirBlackPlayOff: peliculaA
		vs: peliculaB
		en: unPlayOff.! !

!BlackPlayOff class methodsFor: 'definidor de puntos' stamp: 'MB 12/7/2018 19:40:48'!
definirPuntoDeBlackPlayOffParaPeliculaB
	^ self crearInstancia definirPuntoDeBlackPlayOffParaPeliculaB.! !

!Bonus methodsFor: 'accessing' stamp: 'MB 12/5/2018 14:23:20'!
baseDeDatos
	^baseDeDatos! !

!Bonus methodsFor: 'associating' stamp: 'MB 12/5/2018 14:19:12'!
coronarGanador: unaPelicula deBonus: tipoDeBonus 
	
	baseDeDatos at: tipoDeBonus put: unaPelicula ! !

!Bonus methodsFor: 'accessing' stamp: 'MB 3/13/2019 16:06:17'!
ganadorComodin
	
	^ baseDeDatos at: 'Comodin'! !

!Bonus methodsFor: 'accessing' stamp: 'MB 3/13/2019 16:29:27'!
ganadorInvitacion
	
	^ baseDeDatos at: 'Invitacion'! !

!Bonus methodsFor: 'accessing' stamp: 'MB 3/13/2019 16:07:20'!
ganadorPromocion
	
	^ baseDeDatos at: 'Promocion'! !

!Bonus methodsFor: 'initialization' stamp: 'MB 12/5/2018 14:10:40'!
initialize

	baseDeDatos _ Dictionary new.! !

!Bonus methodsFor: 'accessing' stamp: 'MB 3/13/2019 16:14:08'!
lastPelicula
	
	^ baseDeDatos at: 'Last Pelicula'! !

!Bonus methodsFor: 'associating' stamp: 'MB 3/12/2019 22:46:02'!
lastPelicula: unaPelicula 
	
	baseDeDatos at: 'Last Pelicula' put: unaPelicula ! !

!Bonus methodsFor: 'testing - bonus' stamp: 'MB 12/5/2018 14:43:00'!
noTieneBonus: tipoDeBonus
	
	^ (baseDeDatos includesKey: tipoDeBonus ) not! !

!Bonus methodsFor: 'testing - bonus' stamp: 'MB 12/5/2018 14:24:37'!
noTienePeliculas
	
	^ baseDeDatos isEmpty! !

!Bonus methodsFor: 'private - Bonus' stamp: 'MB 12/28/2018 13:03:30'!
retornarGanadorDeComodin
	
	^ baseDeDatos at: 'Comodin'! !

!Bonus methodsFor: 'private - Bonus' stamp: 'MB 12/28/2018 13:04:09'!
retornarGanadorPromocion
	
	^ baseDeDatos at: 'Promocion'! !

!Categoria methodsFor: 'associating' stamp: 'MB 3/23/2019 23:03:08'!
agregarPelicula: unaPelicula 
	
	
	| unFiltro unaCondicion |
	
	unaCondicion _ [:unaPeliculaDeLaColeccion | self noEsPeliculaRepetida: unaPeliculaDeLaColeccion ].
	
	unFiltro _ Filter filteredCondition: unaCondicion .
	
	^ unFiltro toAdd: unaPelicula at:  peliculas ! !

!Categoria methodsFor: 'private - categoria' stamp: 'MB 11/14/2018 20:55:38'!
borrarPelicula: unaPelicula 
	
	peliculas remove: unaPelicula ! !

!Categoria methodsFor: 'accessing' stamp: 'MB 3/24/2019 15:59:36'!
idCategoria
	
	^idCategoria! !

!Categoria methodsFor: 'initialization' stamp: 'MB 3/24/2019 00:53:08'!
initialize

	peliculas _ OrderedCollection new
	! !

!Categoria methodsFor: 'private - categoria' stamp: 'MB 3/30/2019 01:04:22'!
mejorPelicula: unLeague
	^ SpinOff
		unaPeliculaEntre: peliculas
		en: unLeague.! !

!Categoria methodsFor: 'testing - categoria' stamp: 'MB 12/19/2018 00:22:24'!
noEsPeliculaRepetida: unaPelicula 
	
	^  (self peliculas anySatisfy: [:unaPeliculaDeLaColeccion | unaPeliculaDeLaColeccion estaRepetida: unaPelicula]) not! !

!Categoria methodsFor: 'testing - categoria' stamp: 'MB 11/1/2018 20:25:27'!
noTienePeliculasRegistradas
	
	^ peliculas isEmpty ! !

!Categoria methodsFor: 'accessing' stamp: 'MB 12/27/2018 16:55:45'!
nombreDeCategoria
	^ idCategoria.! !

!Categoria methodsFor: 'accessing' stamp: 'MB 11/1/2018 21:00:19'!
peliculas
	^peliculas! !

!Categoria methodsFor: 'printing' stamp: 'MB 3/24/2019 22:34:31'!
printOn: aStream

	aStream nextPutAll: self idCategoria ! !

!Categoria methodsFor: 'private - categoria' stamp: 'MB 3/23/2019 23:31:50'!
tieneGenero: unGenero 
	
	^ self generos anySatisfy: [:unGeneroDeLaLista | unGeneroDeLaLista = unGenero]! !

!Categoria methodsFor: 'testing - categoria' stamp: 'MB 12/14/2018 16:35:46'!
tienePelicula: unaPelicula 
	
	^ peliculas includes: unaPelicula ! !

!Categoria methodsFor: 'testing - categoria' stamp: 'MB 12/21/2018 21:56:13'!
tienePeliculas
	
	^ peliculas notEmpty! !

!Categoria class methodsFor: 'instance creation' stamp: 'MB 11/1/2018 20:10:06'!
crearInstancia
	
	^ self new! !

!Alternativo methodsFor: 'accessing' stamp: 'MB 3/24/2019 00:20:01'!
generos
	
	^generos! !

!Alternativo methodsFor: 'initialization' stamp: 'MB 4/1/2019 14:24:33'!
initialize

	| listaDeGeneros |
	
	peliculas _ OrderedCollection new.

	listaDeGeneros _ OrderedCollection new.
	
	listaDeGeneros add: 'Serie';
	add: 'Documental';
	add: 'VideoMusical';
	add: 'GamePlay';
	add: 'Futbol';
	add: 'Random'.
	
	generos _ listaDeGeneros.
	
	idCategoria _'Alternativo'! !

!Entretenimiento methodsFor: 'accessing' stamp: 'MB 3/23/2019 23:32:09'!
generos
	
	^generos! !

!Entretenimiento methodsFor: 'initialization' stamp: 'MB 8/19/2019 23:51:38'!
initialize

	| listaDeGeneros |
	
	peliculas _ OrderedCollection new.

	listaDeGeneros _ OrderedCollection new.
	
	listaDeGeneros add: 'Comedia';
	add: 'Accion';
	add: 'Musical';
	add: 'Aventura';
	add: 'Heroes';
	add: 'Fantasia'.
	
	generos _ listaDeGeneros.
	
	idCategoria _'Entretenimiento'.! !

!Horror methodsFor: 'accessing' stamp: 'MB 3/24/2019 00:19:46'!
generos
	
	^generos! !

!Horror methodsFor: 'initialization' stamp: 'MB 3/31/2019 22:36:45'!
initialize

	| listaDeGeneros |
	
	peliculas _ OrderedCollection new.

	listaDeGeneros _ OrderedCollection new.
	
	listaDeGeneros add: 'Terror';
	add: 'Zombie';
	add: 'Psicologico';
	add: 'Slasher';
	add: 'Gore';
	add: 'Turbio'.
	
	generos _ listaDeGeneros.
	
	idCategoria _'Horror'! !

!Tension methodsFor: 'accessing' stamp: 'MB 3/23/2019 23:32:24'!
generos
	
	^generos! !

!Tension methodsFor: 'initialization' stamp: 'MB 8/19/2019 23:50:18'!
initialize

	| listaDeGeneros |
	
	peliculas _ OrderedCollection new.

	listaDeGeneros _ OrderedCollection new.
	
	listaDeGeneros add: 'Drama';
	add: 'Suspenso';
	add: 'Belica';
	add: 'Castastrofe';
	add: 'Ciencia Ficcion';
	add: 'RoyalLife'.
	
	generos _ listaDeGeneros.
	
	idCategoria _'Tension'! !

!CineWar methodsFor: 'private puntajes - CineWar' stamp: 'MB 4/6/2020 23:13:40'!
actualizarPuntajesGlobalesEnEndMvM: unEndMvM
	| primeraPelicula segundaPelicula puntajePP puntajeSP |
	primeraPelicula _ unEndMvM endMvmFinalistaA.
	segundaPelicula _ unEndMvM endMvMFinalistaB.
	puntajePP _ unEndMvM puntajeFinal: primeraPelicula.
	puntajeSP _ unEndMvM puntajeFinal: segundaPelicula.
	globalCineWar
		guardarPuntaje: puntajePP
		de: primeraPelicula.
	globalCineWar
		guardarPuntaje: puntajeSP
		de: segundaPelicula.! !

!CineWar methodsFor: 'private puntajes - CineWar' stamp: 'MB 4/6/2020 23:13:40'!
actualizarPuntajesGlobalesEnIntroMvM: unIntroMvM
	| primeraPelicula segundaPelicula puntajePP puntajeSP |
	primeraPelicula _ unIntroMvM ganadorComodin.
	segundaPelicula _ unIntroMvM ganadorPromocion.
	puntajePP _ unIntroMvM puntajeFinal: primeraPelicula.
	puntajeSP _ unIntroMvM puntajeFinal: segundaPelicula.
	globalCineWar
		guardarPuntaje: puntajePP
		de: primeraPelicula.
	globalCineWar
		guardarPuntaje: puntajeSP
		de: segundaPelicula.! !

!CineWar methodsFor: 'private puntajes - CineWar' stamp: 'MB 4/6/2020 23:13:39'!
actualizarPuntajesGlobalesEnPreEndMvM: unPreEndMvM
	| primeraPelicula segundaPelicula puntajePP puntajeSP |
	primeraPelicula _ unPreEndMvM ganadorIntroMvMA.
	segundaPelicula _ unPreEndMvM ganadorIntroMvMB.
	puntajePP _ unPreEndMvM puntajeFinal: primeraPelicula.
	puntajeSP _ unPreEndMvM puntajeFinal: segundaPelicula.
	globalCineWar
		guardarPuntaje: puntajePP
		de: primeraPelicula.
	globalCineWar
		guardarPuntaje: puntajeSP
		de: segundaPelicula.! !

!CineWar methodsFor: 'private puntajes - CineWar' stamp: 'MB 4/6/2020 23:13:39'!
actualizarPuntajesGlobalesEnStageGroup: unStageGroup
	| primeraPelicula segundaPelicula terceraPelicula cuartaPelicula puntajePP puntajeSP puntajeTP puntajeCP |
	primeraPelicula _ unStageGroup peliculas first.
	segundaPelicula _ unStageGroup peliculas second.
	terceraPelicula _ unStageGroup peliculas third.
	cuartaPelicula _ unStageGroup peliculas fourth.
	puntajePP _ unStageGroup puntajeFinal: primeraPelicula.
	puntajeSP _ unStageGroup puntajeFinal: segundaPelicula.
	puntajeTP _ unStageGroup puntajeFinal: terceraPelicula.
	puntajeCP _ unStageGroup puntajeFinal: cuartaPelicula.
	globalCineWar
		guardarPuntaje: puntajePP
		de: primeraPelicula.
	globalCineWar
		guardarPuntaje: puntajeSP
		de: segundaPelicula.
	globalCineWar
		guardarPuntaje: puntajeTP
		de: terceraPelicula.
	globalCineWar
		guardarPuntaje: puntajeCP
		de: cuartaPelicula.! !

!CineWar methodsFor: 'private ticket - CineWar' stamp: 'MB 3/7/2019 21:34:13'!
agregarALaCajaDePreTicketPlayOff: unPreTicketPlayOff de: unIntancePreTicket
	cajaDePreTicketPlayOff
		at: unIntancePreTicket
		put: unPreTicketPlayOff.! !

!CineWar methodsFor: 'private puntajes - CineWar' stamp: 'MB 3/21/2019 21:57:23'!
agregarAlTopPuntajesRanking: unaPelicula 
	
	topPuntajesRanking add: unaPelicula ! !

!CineWar methodsFor: 'private - CineWar' stamp: 'MB 8/17/2019 15:38:25'!
armarEndMvM
	| finalistaA finalistaB |
	finalistaA _ preEndMvMA ganadorPreEndMvM.
	finalistaB _ preEndMvMB ganadorPreEndMvM.
	endMvM
		asignarFinalistaA: finalistaA;
		asignarFinalistaB: finalistaB.! !

!CineWar methodsFor: 'private - CineWar' stamp: 'MB 8/12/2019 20:36:06'!
armarIntroMvM
	| GC1 GC2 GC3 GC4 GP1 GP2 GP3 GP4 |
	GC1 _ stageA bonus retornarGanadorDeComodin.
	GC2 _ stageB bonus retornarGanadorDeComodin.
	GC3 _ stageC bonus retornarGanadorDeComodin.
	GC4 _ stageD bonus retornarGanadorDeComodin.
	GP1 _ stageA bonus retornarGanadorPromocion.
	GP2 _ stageB bonus retornarGanadorPromocion.
	GP3 _ stageC bonus retornarGanadorPromocion.
	GP4 _ stageD bonus retornarGanadorPromocion.
	introMvMA asignarGanadorDeUnComodin: GC1.
	introMvMA asignarGanadorDeUnPromocion: GP2.
	introMvMB asignarGanadorDeUnComodin: GC2.
	introMvMB asignarGanadorDeUnPromocion: GP3.
	introMvMC asignarGanadorDeUnComodin: GC3.
	introMvMC asignarGanadorDeUnPromocion: GP4.
	introMvMD asignarGanadorDeUnComodin: GC4.
	introMvMD asignarGanadorDeUnPromocion: GP1.! !

!CineWar methodsFor: 'private - CineWar' stamp: 'MB 8/17/2019 14:59:37'!
armarPreEndMvM
	| G1 G2 G3 G4 |
	G1 _ introMvMA ganadorIntroMvM.
	G2 _ introMvMB ganadorIntroMvM.
	G3 _ introMvMC ganadorIntroMvM.
	G4 _ introMvMD ganadorIntroMvM.
	preEndMvMA asignarGanadorIntroMvMA: G1.
	preEndMvMA asignarGanadorIntroMvMB: G2.
	preEndMvMB asignarGanadorIntroMvMA: G3.
	preEndMvMB asignarGanadorIntroMvMB: G4.! !

!CineWar methodsFor: 'private - CineWar' stamp: 'MB 4/6/2020 23:13:40'!
armarStageConId: unStageGroup
	| winnerOne winnerSecond winnerThird lastWinner |
	league
		mejorPeliculaDeCupoOne;
		mejorPeliculaDeCupoSecond;
		mejorPeliculaDeCupoThird;
		mejorPeliculaDeLastCupo.
	winnerOne _ league ganadorDelCupoOne.
	winnerSecond _ league ganadorDelCupoSecond.
	winnerThird _ league ganadorDelCupoThird.
	lastWinner _ league ganadorDelLastCupo.
	unStageGroup
		agregarPelicula: winnerOne;
		agregarPelicula: winnerSecond;
		agregarPelicula: winnerThird;
		agregarPelicula: lastWinner.
	globalCineWar
		guardarPuntaje: 0
		de: winnerOne.
	globalCineWar
		guardarPuntaje: 0
		de: winnerSecond.
	globalCineWar
		guardarPuntaje: 0
		de: winnerThird.
	globalCineWar
		guardarPuntaje: 0
		de: lastWinner.! !

!CineWar methodsFor: 'private - CineWar' stamp: 'MB 3/26/2019 23:00:25'!
armarStageGroup
	
	self 
		armarStageReservadoConId: stageA ;
	
		armarStageConId: stageB ;
		
		armarStageConId: stageC ;
		
		armarStageConId: stageD .
		

		
	league registrarPeliculasOutsideStageGroupEnTicket: precuelaTicket .
	
	procesador procesarPrecuelaTicket: precuelaTicket .! !

!CineWar methodsFor: 'private - CineWar' stamp: 'MB 4/6/2020 23:13:40'!
armarStageReservadoConId: unStageGroup
	unStageGroup
		agregarPelicula: cupoReservadoStageGroupI;
		agregarPelicula: cupoReservadoStageGroupII;
		agregarPelicula: cupoReservadoStageGroupIII;
		agregarPelicula: cupoReservadoStageGroupIV.
	globalCineWar
		guardarPuntaje: 0
		de: cupoReservadoStageGroupI.
	globalCineWar
		guardarPuntaje: 0
		de: cupoReservadoStageGroupII.
	globalCineWar
		guardarPuntaje: 0
		de: cupoReservadoStageGroupIII.
	globalCineWar
		guardarPuntaje: 0
		de: cupoReservadoStageGroupIV.
	self desocuparPeliculasEnCategorias.! !

!CineWar methodsFor: 'associating' stamp: 'MB 7/24/2019 00:01:34'!
asignarPeliculaReservadaI: unaPelicula
	cupoReservadoStageGroupI _ unaPelicula.! !

!CineWar methodsFor: 'associating' stamp: 'MB 7/24/2019 00:01:59'!
asignarPeliculaReservadaII: unaPelicula
	cupoReservadoStageGroupII _ unaPelicula.! !

!CineWar methodsFor: 'associating' stamp: 'MB 7/24/2019 00:02:39'!
asignarPeliculaReservadaIII: unaPelicula
	cupoReservadoStageGroupIII _ unaPelicula.! !

!CineWar methodsFor: 'associating' stamp: 'MB 7/24/2019 00:03:07'!
asignarPeliculaReservadaIV: unaPelicula
	cupoReservadoStageGroupIV _ unaPelicula.! !

!CineWar methodsFor: 'accessing' stamp: 'MB 3/7/2019 21:33:37'!
cajaDePreTicketPlayOff
	^ cajaDePreTicketPlayOff.! !

!CineWar methodsFor: 'private - CineWar' stamp: 'MB 7/26/2019 23:16:18'!
cantidadDePeliculasInscriptas
	
	^ league categorias notEmpty ifTrue: (league categorias sum: [ :unaCategoria | unaCategoria peliculas size ])! !

!CineWar methodsFor: 'testing - CineWar' stamp: 'MB 8/19/2019 22:36:00'!
cantidadMinimaDePeliculasInscriptaCumplida
	
	 ^ self cantidadDePeliculasInscriptas >= 12! !

!CineWar methodsFor: 'testing - CineWar' stamp: 'MB 7/26/2019 23:40:59'!
cantidadMinimaDePeliculasInscriptaNoCumplida
	
	^ self cantidadDePeliculasInscriptas < 12! !

!CineWar methodsFor: 'testing - CineWar' stamp: 'MB 7/26/2019 23:45:11'!
cumpleConLaCantidadMinimaDePeliculasInscriptasYConLasPeliculasReservadas
	
	^ self cantidadMinimaDePeliculasInscriptaCumplida & self tienePeliculasReservadas.! !

!CineWar methodsFor: 'testing - CineWar' stamp: 'MB 8/17/2019 14:55:02'!
cumpleConLosRequerimientoDeElEndMvM
	^ endMvM tienePeliculasFinalistas.! !

!CineWar methodsFor: 'testing - CineWar' stamp: 'MB 8/12/2019 20:36:06'!
cumpleConLosRequerimientoDeTodosIntroMvM
	| RequerimientoIntroA RequerimientoIntroB RequerimientoIntroC RequerimientoIntroD |
	RequerimientoIntroA _ introMvMA tieneUnGanadorDeComodin & introMvMA tieneUnGanadorDePromocion.
	RequerimientoIntroB _ introMvMB tieneUnGanadorDeComodin & introMvMB tieneUnGanadorDePromocion.
	RequerimientoIntroC _ introMvMC tieneUnGanadorDeComodin & introMvMC tieneUnGanadorDePromocion.
	RequerimientoIntroD _ introMvMD tieneUnGanadorDeComodin & introMvMD tieneUnGanadorDePromocion.
	^ RequerimientoIntroA & RequerimientoIntroB & RequerimientoIntroC & RequerimientoIntroD.! !

!CineWar methodsFor: 'testing - CineWar' stamp: 'MB 8/17/2019 14:59:37'!
cumpleConLosRequerimientoDeTodosPreEndMvM
	| RequerimientoPreFinalA RequerimientoPreFinalB |
	RequerimientoPreFinalA _ preEndMvMA tieneUnGanadorIntroMvMA & preEndMvMA tieneUnGanadorIntroMvMB.
	RequerimientoPreFinalB _ preEndMvMB tieneUnGanadorIntroMvMA & preEndMvMB tieneUnGanadorIntroMvMB.
	^ RequerimientoPreFinalA & RequerimientoPreFinalB.! !

!CineWar methodsFor: 'testing - CineWar' stamp: 'MB 12/28/2018 00:10:36'!
cumpleConLosRequerimientoDeTodosStagueGroup
	
	^ (stageA peliculas size =4 ) & (stageB peliculas size =4 ) & (stageC peliculas size =4 ) & (stageD peliculas size =4 )! !

!CineWar methodsFor: 'accessing' stamp: 'MB 7/26/2019 21:39:47'!
cupoReservadoStageGroupI
	
	^cupoReservadoStageGroupI! !

!CineWar methodsFor: 'CineWar' stamp: 'MB 4/6/2020 23:42:11'!
definirChampionshipCineWar
	^ self unEstadoDeCineWar definirEstadoActualDelColiseum: self.! !

!CineWar methodsFor: 'definition - CineWar' stamp: 'MB 8/17/2019 14:55:02'!
definirElEndMvM
	| finalistaA finalistaB |
	finalistaA _ endMvM endMvmFinalistaA.
	finalistaB _ endMvM endMvMFinalistaB.
	endMvM
		endMvmEntre: finalistaA
		vs: finalistaB
		enTicket: self preticketMvM.
	self
		actualizarPuntajesGlobalesEnEndMvM: endMvM;
		recolectarPreTicketPlayOffDeEndMvM;
		transcribirTicketPlayOffEndMvM;
		transcribirEndTicket.! !

!CineWar methodsFor: 'private ticket - CineWar' stamp: 'MB 4/8/2020 00:06:42'!
definirEndTicket
	| topPeliculas endTicket peliculasGanadorasDeBonusInvitacion campeonCineWar subCampeonCineWar |
	campeonCineWar _ endMvM ganadorEndMvM.
	subCampeonCineWar _ endMvM perdedorEndMvM.
	topPeliculas _ self topPeliculas.
	endTicket _ EndTicket new.
	peliculasGanadorasDeBonusInvitacion _ self peliculasGanadorasDeBonusInvitacion.
	procesador
		transcribirTopPeliculas: topPeliculas
		enEndTicket: endTicket.
	procesador
		trascribirPeliculasGanadorasDeBonusInvitacion: peliculasGanadorasDeBonusInvitacion
		en: endTicket.
	endTicket asociarCampeonCineWar: campeonCineWar.
	endTicket asociarSubCampeonCineWar: subCampeonCineWar.
	procesador mandarAImprimirTicket: endTicket.! !

!CineWar methodsFor: 'definition - CineWar' stamp: 'MB 4/6/2020 23:13:40'!
definirListaTopPuntajes
	| mayorPuntaje listaDeTopPuntaje puntajeDeMayor |
	mayorPuntaje _ topPuntajesRanking first.
	puntajeDeMayor _ globalCineWar puntajeGlobalDe: mayorPuntaje.
	listaDeTopPuntaje _ globalCineWar peliculasConIgualPuntajes: puntajeDeMayor.
	^ listaDeTopPuntaje.! !

!CineWar methodsFor: 'definition - CineWar' stamp: 'MB 8/12/2019 20:36:06'!
definirTodosLosIntroMvM
	introMvMA
		mvmEntre: introMvMA ganadorComodin
		vs: introMvMA ganadorPromocion
		enTicket: self preticketMvM.
	introMvMB
		mvmEntre: introMvMB ganadorComodin
		vs: introMvMB ganadorPromocion
		enTicket: self preticketMvM.
	introMvMC
		mvmEntre: introMvMC ganadorComodin
		vs: introMvMC ganadorPromocion
		enTicket: self preticketMvM.
	introMvMD
		mvmEntre: introMvMD ganadorComodin
		vs: introMvMD ganadorPromocion
		enTicket: self preticketMvM.
	self
		actualizarPuntajesGlobalesEnIntroMvM: introMvMA;
		actualizarPuntajesGlobalesEnIntroMvM: introMvMB;
		actualizarPuntajesGlobalesEnIntroMvM: introMvMC;
		actualizarPuntajesGlobalesEnIntroMvM: introMvMD.! !

!CineWar methodsFor: 'definition - CineWar' stamp: 'MB 8/18/2019 00:12:04'!
definirTodosLosPreEndMvM
	preEndMvMA
		preEndMvMEntre: preEndMvMA ganadorIntroMvMA
		vs: preEndMvMA ganadorIntroMvMB
		enTicket: self preticketMvM.
	preEndMvMB
		preEndMvMEntre: preEndMvMB ganadorIntroMvMA
		vs: preEndMvMB ganadorIntroMvMB
		enTicket: self preticketMvM.
	self actualizarPuntajesGlobalesEnPreEndMvM: preEndMvMA.
	self actualizarPuntajesGlobalesEnPreEndMvM: preEndMvMB.
	self recolectarPreTicketPlayOffDePreEndMvMs.
	self transcribirTicketPlayOffPreEndMvMs.! !

!CineWar methodsFor: 'definition - CineWar' stamp: 'MB 4/2/2019 00:32:17'!
definirTodosLosStageGroup
	
	stageA definirStageGroupEnTicket: self preticketstagegroupI.
	stageB definirStageGroupEnTicket: self preticketstagegroupII.
	stageC definirStageGroupEnTicket: self preticketstagegroupIII.
	stageD definirStageGroupEnTicket: self preticketstagegroupIV.
	
	self
		actualizarPuntajesGlobalesEnStageGroup: stageA;
		actualizarPuntajesGlobalesEnStageGroup: stageB;
		actualizarPuntajesGlobalesEnStageGroup: stageC;
		actualizarPuntajesGlobalesEnStageGroup: stageD;
		recolectarPreTicketPlayOffStageGroup;
		transcribirTicketPlayOffStageGroup.! !

!CineWar methodsFor: 'definition - CineWar' stamp: 'MB 4/6/2020 23:13:40'!
definirTopPuntajes
	self topPuntajesRankingCondition.
	globalCineWar baseDeDatos keysDo: [ :unaPelicula |
		self agregarAlTopPuntajesRanking: unaPelicula ].! !

!CineWar methodsFor: 'private - CineWar' stamp: 'MB 3/26/2019 23:10:46'!
desocuparPeliculasEnCategorias
	
	league desocuparPeliculaEnCategoria: cupoReservadoStageGroupI .
	
	league desocuparPeliculaEnCategoria: cupoReservadoStageGroupII .
	
	league desocuparPeliculaEnCategoria: cupoReservadoStageGroupIII .
	
	league desocuparPeliculaEnCategoria: cupoReservadoStageGroupIV .! !

!CineWar methodsFor: 'accessing' stamp: 'MB 8/17/2019 14:55:02'!
endMvM
	^ endMvM.! !

!CineWar methodsFor: 'accessing' stamp: 'MB 8/17/2019 14:55:44'!
finalTicket
	^ finalTicket.! !

!CineWar methodsFor: 'initialization' stamp: 'MB 4/6/2020 23:13:40'!
initialize
	league _ League new.
	stageA _ StageGroup idStage: 'A'.
	stageB _ StageGroup idStage: 'B'.
	stageC _ StageGroup idStage: 'C'.
	stageD _ StageGroup idStage: 'D'.
	introMvMA _ IntroMvM idMvM: 'A'.
	introMvMB _ IntroMvM idMvM: 'B'.
	introMvMC _ IntroMvM idMvM: 'C'.
	introMvMD _ IntroMvM idMvM: 'D'.
	preEndMvMA _ PreEndMvM idMvM: 'A'.
	preEndMvMB _ PreEndMvM idMvM: 'B'.
	endMvM _ EndMvM idMvM: 'A'.
	preticketMvM _ PreTicketMvM new.
	preticketstagegroupI _ PreTicketStageGroup new.
	preticketstagegroupII _ PreTicketStageGroup new.
	preticketstagegroupIII _ PreTicketStageGroup new.
	preticketstagegroupIV _ PreTicketStageGroup new.
	precuelaTicket _ PrecuelaTicket new.
	cajaDePreTicketPlayOff _ Dictionary new.
	procesador _ Procesador new.
	decodificador _ Decodificador new.
	impresora _ Impresora new.
	globalCineWar _ Registro new.
	topPuntajesRanking _ SortedCollection new.! !

!CineWar methodsFor: 'associating' stamp: 'MB 3/24/2019 15:41:30'!
inscribirPelicula: unaPelicula 
	
	| categoriaDeLaPelicula categoriaBuscada |
	
	categoriaDeLaPelicula _ unaPelicula genero .
	
	categoriaBuscada _ league buscarCategoriaPertenecienteGenero: categoriaDeLaPelicula .
	
	categoriaBuscada agregarPelicula: unaPelicula ! !

!CineWar methodsFor: 'accessing' stamp: 'MB 8/12/2019 20:35:13'!
introMvMA
	^ introMvMA.! !

!CineWar methodsFor: 'accessing' stamp: 'MB 8/12/2019 20:35:38'!
introMvMB
	^ introMvMB.! !

!CineWar methodsFor: 'accessing' stamp: 'MB 8/12/2019 20:35:52'!
introMvMC
	^ introMvMC.! !

!CineWar methodsFor: 'accessing' stamp: 'MB 8/12/2019 20:36:06'!
introMvMD
	^ introMvMD.! !

!CineWar methodsFor: 'accessing' stamp: 'MB 12/14/2018 16:23:49'!
league
	^league! !

!CineWar methodsFor: 'testing - CineWar' stamp: 'MB 7/26/2019 23:44:12'!
noCumpleConLaCantidadMinimaDePeliculasInscriptasNiConLasPeliculasReservadas
	
	^ self cantidadMinimaDePeliculasInscriptaNoCumplida & self noTienePeliculasReservadas.! !

!CineWar methodsFor: 'testing - CineWar' stamp: 'MB 7/26/2019 23:38:10'!
noCumpleConLaCantidadMinimaDePeliculasInscriptasPeroSiConLasPeliculasReservadas
	
	^ self cantidadMinimaDePeliculasInscriptaNoCumplida & self tienePeliculasReservadas.! !

!CineWar methodsFor: 'testing - CineWar' stamp: 'MB 7/26/2019 23:43:39'!
noCumpleConLasPeliculasReservadasPeroSiConLaCantidadMinimaDePeliculasInscriptas
	
	^ self cantidadMinimaDePeliculasInscriptaCumplida & self noTienePeliculasReservadas.! !

!CineWar methodsFor: 'testing - CineWar' stamp: 'MB 7/26/2019 23:27:21'!
noTienePeliculasReservadas
	^ (cupoReservadoStageGroupI = nil )| (cupoReservadoStageGroupII = nil) | (cupoReservadoStageGroupIII = nil) | (cupoReservadoStageGroupIV = nil)! !

!CineWar methodsFor: 'testing - CineWar' stamp: 'MB 8/17/2019 14:45:13'!
noTieneTicketEndMvMVacio
	^ preticketMvM noTieneTicketEndMvMVacio.! !

!CineWar methodsFor: 'testing - CineWar' stamp: 'MB 8/12/2019 20:34:57'!
noTieneTicketIntroMvMVacio
	^ preticketMvM noTieneTicketIntroMvMVacio.! !

!CineWar methodsFor: 'testing - CineWar' stamp: 'MB 8/18/2019 01:08:22'!
noTieneTicketPreEndMvM
	^ preticketMvM noTieneTicketPreEndMvMVacio.! !

!CineWar methodsFor: 'testing - CineWar' stamp: 'MB 3/26/2019 23:44:10'!
noTieneTicketPrecuelaVacio
	
	^ precuelaTicket noEstaVacio.! !

!CineWar methodsFor: 'testing - CineWar' stamp: 'MB 3/26/2019 23:57:41'!
noTieneTicketsStageGroupVacio
	
	^ preticketstagegroupI noEstaVacio & preticketstagegroupII noEstaVacio & preticketstagegroupIII noEstaVacio & preticketstagegroupIV noEstaVacio ! !

!CineWar methodsFor: 'private - CineWar' stamp: 'MB 3/22/2019 01:06:41'!
peliculasGanadorasDeBonusInvitacion
	
	| PGBISA PGBISB PGBISC PGBISD listaDePeliculas  |
	
	listaDePeliculas _ OrderedCollection new.
	
	PGBISA _ stageA ganadorDeBonusInvitacion nombre.
	
	PGBISB _ stageB ganadorDeBonusInvitacion nombre.
	
	PGBISC _ stageC ganadorDeBonusInvitacion nombre.
	
	PGBISD _ stageD ganadorDeBonusInvitacion nombre.
	
	listaDePeliculas add: PGBISA ; add: PGBISB ; add: PGBISC ; add: PGBISD .
	
	^ listaDePeliculas 
	
	! !

!CineWar methodsFor: 'accessing' stamp: 'MB 8/17/2019 14:59:04'!
preEndMvMA
	^ preEndMvMA.! !

!CineWar methodsFor: 'accessing' stamp: 'MB 8/17/2019 14:59:37'!
preEndMvMB
	^ preEndMvMB.! !

!CineWar methodsFor: 'accessing' stamp: 'MB 3/27/2019 12:48:28'!
precuelaTicket
	
	^precuelaTicket! !

!CineWar methodsFor: 'accessing' stamp: 'MB 8/12/2019 20:34:57'!
preticketMvM
	^ preticketMvM.! !

!CineWar methodsFor: 'accessing' stamp: 'MB 3/26/2019 23:35:21'!
preticketstagegroupI
	^ preticketstagegroupI.! !

!CineWar methodsFor: 'accessing' stamp: 'MB 3/26/2019 23:35:39'!
preticketstagegroupII
	^ preticketstagegroupII.! !

!CineWar methodsFor: 'accessing' stamp: 'MB 3/26/2019 23:35:58'!
preticketstagegroupIII
	^ preticketstagegroupIII.! !

!CineWar methodsFor: 'accessing' stamp: 'MB 3/26/2019 23:36:28'!
preticketstagegroupIV
	^ preticketstagegroupIV.! !

!CineWar methodsFor: 'private ticket - CineWar' stamp: 'MB 8/18/2019 23:52:45'!
recolectarPreTicketPlayOffDeEndMvM
	| ptf |
	ptf _ endMvM preTicketEndMvM.
	self
		agregarALaCajaDePreTicketPlayOff: ptf
		de: 'PlayOff EndMvM'.! !

!CineWar methodsFor: 'private ticket - CineWar' stamp: 'MB 8/17/2019 15:40:19'!
recolectarPreTicketPlayOffDePreEndMvMs
	| ptfa ptfb |
	ptfa _ preEndMvMA preTicketPreEndMvM.
	ptfb _ preEndMvMB preTicketPreEndMvM.
	self
		
			agregarALaCajaDePreTicketPlayOff: ptfa
			de: 'PlayOff PreEndMvM A';
		
			agregarALaCajaDePreTicketPlayOff: ptfb
			de: 'PlayOff PreEndMvM B'.! !

!CineWar methodsFor: 'private ticket - CineWar' stamp: 'MB 3/7/2019 21:34:13'!
recolectarPreTicketPlayOffStageGroup
	| tcsa tpsa tisa tcsb tpsb tisb tcsc tpsc tisc tcsd tpsd tisd |
	tcsa _ stageA preTicketBonusComodin.
	tpsa _ stageA preTicketBonusPromocion.
	tisa _ stageA preTicketBonusInvitacion.
	tcsb _ stageB preTicketBonusComodin.
	tpsb _ stageB preTicketBonusPromocion.
	tisb _ stageB preTicketBonusInvitacion.
	tcsc _ stageC preTicketBonusComodin.
	tpsc _ stageC preTicketBonusPromocion.
	tisc _ stageC preTicketBonusInvitacion.
	tcsd _ stageD preTicketBonusComodin.
	tpsd _ stageD preTicketBonusPromocion.
	tisd _ stageD preTicketBonusInvitacion.
	self
		
			agregarALaCajaDePreTicketPlayOff: tcsa
			de: 'PlayOff bonus comodin stage group A';
		
			agregarALaCajaDePreTicketPlayOff: tpsa
			de: 'PlayOff bonus promocion stage group A';
		
			agregarALaCajaDePreTicketPlayOff: tisa
			de: 'PlayOff bonus invitacion stage group A';
		
			agregarALaCajaDePreTicketPlayOff: tcsb
			de: 'PlayOff bonus comodin stage group B';
		
			agregarALaCajaDePreTicketPlayOff: tpsb
			de: 'PlayOff bonus promocion stage group B';
		
			agregarALaCajaDePreTicketPlayOff: tisb
			de: 'PlayOff bonus invitacion stage group B';
		
			agregarALaCajaDePreTicketPlayOff: tcsc
			de: 'PlayOff bonus comodin stage group C';
		
			agregarALaCajaDePreTicketPlayOff: tpsc
			de: 'PlayOff bonus promocion stage group C';
		
			agregarALaCajaDePreTicketPlayOff: tisc
			de: 'PlayOff bonus invitacion stage group C';
		
			agregarALaCajaDePreTicketPlayOff: tcsd
			de: 'PlayOff bonus comodin stage group D';
		
			agregarALaCajaDePreTicketPlayOff: tpsd
			de: 'PlayOff bonus promocion stage group D';
		
			agregarALaCajaDePreTicketPlayOff: tisd
			de: 'PlayOff bonus invitacion stage group D'.! !

!CineWar methodsFor: 'accessing' stamp: 'MB 1/4/2019 14:04:23'!
stageA
	^stageA! !

!CineWar methodsFor: 'accessing' stamp: 'MB 1/4/2019 14:10:07'!
stageB
	^stageB! !

!CineWar methodsFor: 'accessing' stamp: 'MB 1/4/2019 14:21:05'!
stageC
	^stageC! !

!CineWar methodsFor: 'accessing' stamp: 'MB 1/4/2019 14:29:02'!
stageD
	^stageD! !

!CineWar methodsFor: 'testing - CineWar' stamp: 'MB 4/6/2020 23:40:56'!
tieneGanadorCineWar
	^ endMvM tieneUnGanadorEndMvM.! !

!CineWar methodsFor: 'testing - CineWar' stamp: 'MB 3/24/2019 15:46:23'!
tieneInscripto: unaPelicula
	| categoriaDeLaPelicula categoriaBuscada |
	categoriaDeLaPelicula _ unaPelicula genero.
	categoriaBuscada _ league buscarCategoriaPertenecienteGenero: categoriaDeLaPelicula .
	^ categoriaBuscada tienePelicula: unaPelicula.! !

!CineWar methodsFor: 'testing - CineWar' stamp: 'MB 7/26/2019 22:51:11'!
tienePeliculasReservadas
	^ cupoReservadoStageGroupI ~= nil | cupoReservadoStageGroupII ~= nil | cupoReservadoStageGroupII ~= nil | cupoReservadoStageGroupIV ~= nil.! !

!CineWar methodsFor: 'accessing' stamp: 'MB 7/26/2019 21:40:25'!
tieneSegundoCupoReservado
	
	^ cupoReservadoStageGroupII ! !

!CineWar methodsFor: 'private puntajes - CineWar' stamp: 'MB 4/6/2020 23:13:40'!
topPeliculas
	| mayorPuntaje listaDeTopPuntaje puntajeDeMayor |
	mayorPuntaje _ topPuntajesRanking first.
	puntajeDeMayor _ globalCineWar puntajeGlobalDe: mayorPuntaje.
	listaDeTopPuntaje _ globalCineWar peliculasConIgualPuntajes: puntajeDeMayor.
	^ listaDeTopPuntaje.! !

!CineWar methodsFor: 'private puntajes - CineWar' stamp: 'MB 4/6/2020 23:13:40'!
topPuntajesRankingCondition
	topPuntajesRanking sortBlock: [ :peliculaA :peliculaB |
		(globalCineWar puntajeGlobalDe: peliculaA) > (globalCineWar puntajeGlobalDe: peliculaB) ].! !

!CineWar methodsFor: 'private ticket - CineWar' stamp: 'MB 3/21/2019 22:37:52'!
transcribirEndTicket
	
	self definirTopPuntajes.
	
	self definirEndTicket.! !

!CineWar methodsFor: 'private ticket - CineWar' stamp: 'MB 8/17/2019 14:49:48'!
transcribirTicketPlayOffEndMvM
	| ticketPreFinalA |
	ticketPreFinalA _ cajaDePreTicketPlayOff at: 'PlayOff EndMvM'.
	procesador
		procesamientoDeTicketPlayOff: ticketPreFinalA
		de: 'EndMvM'.! !

!CineWar methodsFor: 'private ticket - CineWar' stamp: 'MB 8/17/2019 14:50:07'!
transcribirTicketPlayOffPreEndMvMA
	| ticketPreFinalA |
	ticketPreFinalA _ cajaDePreTicketPlayOff at: 'PlayOff PreEndMvM A'.
	procesador
		procesamientoDeTicketPlayOff: ticketPreFinalA
		de: 'PreEnd A'.! !

!CineWar methodsFor: 'private ticket - CineWar' stamp: 'MB 8/17/2019 14:50:19'!
transcribirTicketPlayOffPreEndMvMB
	| ticketPreFinalA |
	ticketPreFinalA _ cajaDePreTicketPlayOff at: 'PlayOff PreEndMvM B'.
	procesador
		procesamientoDeTicketPlayOff: ticketPreFinalA
		de: 'PreEnd B'.! !

!CineWar methodsFor: 'private ticket - CineWar' stamp: 'MB 8/17/2019 14:48:52'!
transcribirTicketPlayOffPreEndMvMs
	self transcribirTicketPlayOffPreEndMvMA.
	self transcribirTicketPlayOffPreEndMvMB.! !

!CineWar methodsFor: 'private ticket - CineWar' stamp: 'MB 3/7/2019 21:28:37'!
transcribirTicketPlayOffStageGroup
	self transcribirTicketPlayOffStageGroupA.
	self transcribirTicketPlayOffStageGroupB.
	self transcribirTicketPlayOffStageGroupC.
	self transcribirTicketPlayOffStageGroupD.! !

!CineWar methodsFor: 'private ticket - CineWar' stamp: 'MB 3/7/2019 21:36:31'!
transcribirTicketPlayOffStageGroupA
	| ticketBC ticketBP ticketBI |
	ticketBC _ cajaDePreTicketPlayOff at: 'PlayOff bonus comodin stage group A'.
	ticketBP _ cajaDePreTicketPlayOff at: 'PlayOff bonus promocion stage group A'.
	ticketBI _ cajaDePreTicketPlayOff at: 'PlayOff bonus invitacion stage group A'.
	procesador
		procesamientoDeTicketPlayOff: ticketBC
		de: 'StageGroupA'.
	procesador
		procesamientoDeTicketPlayOff: ticketBP
		de: 'StageGroupA'.
	procesador
		procesamientoDeTicketPlayOff: ticketBI
		de: 'StageGroupA'.! !

!CineWar methodsFor: 'private ticket - CineWar' stamp: 'MB 3/7/2019 21:36:31'!
transcribirTicketPlayOffStageGroupB
	| ticketBC ticketBP ticketBI |
	ticketBC _ cajaDePreTicketPlayOff at: 'PlayOff bonus comodin stage group B'.
	ticketBP _ cajaDePreTicketPlayOff at: 'PlayOff bonus promocion stage group B'.
	ticketBI _ cajaDePreTicketPlayOff at: 'PlayOff bonus invitacion stage group B'.
	procesador
		procesamientoDeTicketPlayOff: ticketBC
		de: 'StageGroupB'.
	procesador
		procesamientoDeTicketPlayOff: ticketBP
		de: 'StageGroupB'.
	procesador
		procesamientoDeTicketPlayOff: ticketBI
		de: 'StageGroupB'.! !

!CineWar methodsFor: 'private ticket - CineWar' stamp: 'MB 3/7/2019 21:36:31'!
transcribirTicketPlayOffStageGroupC
	| ticketBC ticketBP ticketBI |
	ticketBC _ cajaDePreTicketPlayOff at: 'PlayOff bonus comodin stage group C'.
	ticketBP _ cajaDePreTicketPlayOff at: 'PlayOff bonus promocion stage group C'.
	ticketBI _ cajaDePreTicketPlayOff at: 'PlayOff bonus invitacion stage group C'.
	procesador
		procesamientoDeTicketPlayOff: ticketBC
		de: 'StageGroupC'.
	procesador
		procesamientoDeTicketPlayOff: ticketBP
		de: 'StageGroupC'.
	procesador
		procesamientoDeTicketPlayOff: ticketBI
		de: 'StageGroupC'.! !

!CineWar methodsFor: 'private ticket - CineWar' stamp: 'MB 3/7/2019 21:36:31'!
transcribirTicketPlayOffStageGroupD
	| ticketBC ticketBP ticketBI |
	ticketBC _ cajaDePreTicketPlayOff at: 'PlayOff bonus comodin stage group D'.
	ticketBP _ cajaDePreTicketPlayOff at: 'PlayOff bonus promocion stage group D'.
	ticketBI _ cajaDePreTicketPlayOff at: 'PlayOff bonus invitacion stage group D'.
	procesador
		procesamientoDeTicketPlayOff: ticketBC
		de: 'StageGroupD'.
	procesador
		procesamientoDeTicketPlayOff: ticketBP
		de: 'StageGroupD'.
	procesador
		procesamientoDeTicketPlayOff: ticketBI
		de: 'StageGroupD'.! !

!CineWar methodsFor: 'private - CineWar' stamp: 'MB 4/6/2020 23:42:09'!
unEstadoDeCineWar
	^ AnalizadorDeCantidadDePeliculasInscriptas unEstadoDeCantidadDePeliculasInscriptasEn: self.! !

!Cupo methodsFor: 'associating' stamp: 'MB 12/26/2018 16:56:51'!
estadoActualDe: unaCategoria para: unaLeague 
	
	self subclassResponsibility ! !

!Cupo methodsFor: 'associating' stamp: 'MB 12/26/2018 16:52:01'!
ganadorCupoDe: unaCategoria para: unaLeague 
	
	self subclassResponsibility ! !

!Cupo methodsFor: 'associating' stamp: 'MB 12/26/2018 17:19:02'!
ganadorDelCupo: unaPelicula 
	
	self subclassResponsibility ! !

!CupoOne methodsFor: 'associating' stamp: 'MB 12/26/2018 16:57:38'!
estadoActualDe: unaCategoria para: unaLeague 
	
	^ ProveedorDeEstadoDeCategoria unEstadoDeCategoriaPara: unaCategoria en: unaLeague ! !

!CupoOne methodsFor: 'associating' stamp: 'MB 12/27/2018 16:49:47'!
ganadorCupoDe: unaCategoria para: unaLeague
	
	^ (self estadoActualDe: unaCategoria para: unaLeague) retonarPeliculaGanadoraDeCupoOne: unaCategoria en: unaLeague.! !

!CupoOne methodsFor: 'accessing' stamp: 'MB 12/26/2018 17:29:03'!
ganadorCupoOne
	^ganadorCupoOne! !

!CupoOne methodsFor: 'associating' stamp: 'MB 12/26/2018 17:22:07'!
ganadorDelCupo: unaPelicula 
	
	ganadorCupoOne _ unaPelicula ! !

!CupoOne methodsFor: 'printing' stamp: 'MB 3/24/2019 16:50:04'!
printOn: aStream

	aStream nextPutAll: ganadorCupoOne nombre! !

!CupoSecond methodsFor: 'associating' stamp: 'MB 12/26/2018 17:02:10'!
estadoActualDe: unaCategoria para: unaLeague 
	
	^ ProveedorDeEstadoDeCategoria unEstadoDeCategoriaPara: unaCategoria en: unaLeague ! !

!CupoSecond methodsFor: 'associating' stamp: 'MB 12/26/2018 23:37:12'!
ganadorCupoDe: unaCategoria para: unaLeague
	^ (self
		estadoActualDe: unaCategoria
		para: unaLeague)
		retonarPeliculaGanadoraDeCupoSecond: unaCategoria
		en: unaLeague.! !

!CupoSecond methodsFor: 'accessing' stamp: 'MB 12/26/2018 17:35:56'!
ganadorCupoSecond
	^ganadorCupoSecond! !

!CupoSecond methodsFor: 'associating' stamp: 'MB 12/26/2018 17:20:02'!
ganadorDelCupo: unaPelicula 
	
	ganadorCupoSecond _ unaPelicula ! !

!CupoSecond methodsFor: 'printing' stamp: 'MB 3/24/2019 16:52:04'!
printOn: aStream

	aStream nextPutAll: ganadorCupoSecond nombre! !

!CupoThird methodsFor: 'associating' stamp: 'MB 12/26/2018 17:14:03'!
estadoActualDe: unaCategoria para: unaLeague 
	
	^ ProveedorDeEstadoDeCategoria unEstadoDeCategoriaPara: unaCategoria en: unaLeague ! !

!CupoThird methodsFor: 'associating' stamp: 'MB 12/26/2018 23:37:45'!
ganadorCupoDe: unaCategoria para: unaLeague
	^ (self
		estadoActualDe: unaCategoria
		para: unaLeague)
		retonarPeliculaGanadoraDeCupoThird: unaCategoria
		en: unaLeague.! !

!CupoThird methodsFor: 'accessing' stamp: 'MB 12/26/2018 22:48:42'!
ganadorCupoThird
	
	^ ganadorCupoThird ! !

!CupoThird methodsFor: 'associating' stamp: 'MB 12/26/2018 22:48:07'!
ganadorDelCupo: unaPelicula 
	
	ganadorCupoThird _ unaPelicula! !

!CupoThird methodsFor: 'printing' stamp: 'MB 3/24/2019 16:52:15'!
printOn: aStream

	aStream nextPutAll: ganadorCupoThird nombre! !

!LastCupo methodsFor: 'associating' stamp: 'MB 4/1/2019 23:47:44'!
estadoActualDe: unCategoria para: unaLeague
	^ ProveedorDeEstadoCantidadDePeliculasEnLastRango unEstadoActualDeLastRango: unaLeague.! !

!LastCupo methodsFor: 'associating' stamp: 'MB 12/26/2018 17:46:08'!
ganadorCupoDe: unaCategoria para: unaLeague 
	
	^ (self estadoActualDe: unaCategoria para: unaLeague ) retonarPeliculaGanadoraDeLastRango: unaCategoria en: unaLeague .! !

!LastCupo methodsFor: 'associating' stamp: 'MB 12/26/2018 17:48:17'!
ganadorDelCupo: unaPelicula
	
	ganadorLastCupo _ unaPelicula ! !

!LastCupo methodsFor: 'accessing' stamp: 'MB 12/26/2018 17:50:22'!
ganadorLastCupo
	^ganadorLastCupo! !

!LastCupo methodsFor: 'printing' stamp: 'MB 3/24/2019 16:52:32'!
printOn: aStream

	aStream nextPutAll: ganadorLastCupo nombre! !

!Decodificador methodsFor: 'decode' stamp: 'MB 3/4/2019 22:53:27'!
agregarTicketATicketCodificados: unFinalTicket 
	
	listaTicketCodificados add: unFinalTicket ! !

!Decodificador methodsFor: 'decode' stamp: 'MB 2/27/2019 23:53:47'!
codificarNombreDePrimeraPeliculaDeTicket: unFinalTicket 
	
	| nombreDeLaPelicula |
	
	nombreDeLaPelicula _ unFinalTicket primeraPeliculaDelTicket nombre.
	
	
	unFinalTicket asociarPrimeraPeliculaDelTicket: nombreDeLaPelicula ! !

!Decodificador methodsFor: 'decode' stamp: 'MB 3/3/2019 23:12:56'!
codificarNombreDeSegundaPeliculaDeTicket: unFinalTicket 
	
	| nombreDeLaPelicula |
	
	nombreDeLaPelicula _ unFinalTicket segundaPeliculaDelTicket nombre.
	
	
	unFinalTicket asociarSegundaPeliculaDelTicket: nombreDeLaPelicula ! !

!Decodificador methodsFor: 'decode' stamp: 'MB 3/4/2019 22:52:46'!
codificarPuntosDeTicket: unFinalTicket
	
	self codificarTandaPointPlayOffDePrimeraPelicula: unFinalTicket.
	self codificarTandaPointBlackPlayOffDePrimeraPelicula: unFinalTicket.
	self codificarTandaPointPlayOffDeSegundaPelicula: unFinalTicket.
	self codificarTandaPointBlackPlayOffDeSegundaPelicula: unFinalTicket.
	
	self agregarTicketATicketCodificados: unFinalTicket .! !

!Decodificador methodsFor: 'decode' stamp: 'MB 3/10/2019 23:13:40'!
codificarTandaDePuntos: unaTandaDePuntos 
	
	| listaNueva listaCodificada |
	
	listaNueva _ OrderedCollection new.
	
	unaTandaDePuntos do: [:unPunto |  listaNueva add: unPunto asString  ].
	
	listaCodificada _  '' join: listaNueva.
	
	^ listaCodificada ! !

!Decodificador methodsFor: 'decode' stamp: 'MB 2/28/2019 00:36:21'!
codificarTandaPointBlackPlayOffDePrimeraPelicula: unFinalTicket 
	
	| tandaBlackPlayOff |
	
	tandaBlackPlayOff _ unFinalTicket tandaPointBlackPlayOffDePrimeraPelicula.
	
	(self estadoDeTandaDeBlackPlayOffDe: tandaBlackPlayOff ) codificarTandaPointDeBlackPointDePrimeraPelicula: unFinalTicket ! !

!Decodificador methodsFor: 'decode' stamp: 'MB 2/28/2019 21:21:39'!
codificarTandaPointBlackPlayOffDeSegundaPelicula: unFinalTicket 
	
	| tandaBlackPlayOff |
	
	tandaBlackPlayOff _ unFinalTicket tandaPointBlackPlayOffDeSegundaPelicula.
	
	(self estadoDeTandaDeBlackPlayOffDe: tandaBlackPlayOff ) codificarTandaPointDeBlackPointDeSegundaPelicula: unFinalTicket ! !

!Decodificador methodsFor: 'decode' stamp: 'MB 3/4/2019 22:48:53'!
codificarTandaPointPlayOffDePrimeraPelicula: unFinalTicket 
	
	| listaCodificada  listaSinCodificar listaNueva  |
	
	
	listaSinCodificar _ unFinalTicket tandaPointPlayOffDePrimeraPelicula. 
	
	listaNueva _ OrderedCollection new.
	
	listaSinCodificar do: [:unPunto |  listaNueva add: unPunto asString  ].
	
	
	listaCodificada _ '' join: listaNueva.
	
	
	unFinalTicket asociarTandaPointPlayOffDePrimeraPeliculaEnTicket: listaCodificada ! !

!Decodificador methodsFor: 'decode' stamp: 'MB 3/4/2019 22:22:32'!
codificarTandaPointPlayOffDeSegundaPelicula: unFinalTicket 

	| listaCodificada  listaSinCodificar listaNueva  |
	
	listaSinCodificar _ unFinalTicket tandaPointPlayOffDeSegundaPelicula. 
	
	listaNueva _ OrderedCollection new.
	
	listaSinCodificar do: [:unPunto |  listaNueva add: unPunto asString  ].
	
	listaCodificada _ '' join: listaNueva.
	
	unFinalTicket asociarTandaPointPlayOffDeSegundaPeliculaEnTicket: listaCodificada ! !

!Decodificador methodsFor: 'decode' stamp: 'MB 3/20/2019 00:15:02'!
decodificar: unaCosa 
	
	^ unaCosa asString ! !

!Decodificador methodsFor: 'decode' stamp: 'MB 2/28/2019 00:25:13'!
estadoDeTandaDeBlackPlayOffDe: unaListaDePuntos 
	
	^ AnalizadorDeEstadoDeTandaBlackPlayOff unEstadoDeTandaBlackPlayOffDe: unaListaDePuntos ! !

!Decodificador methodsFor: 'initialization' stamp: 'MB 3/4/2019 22:29:38'!
initialize


	listaTicketCodificados _ OrderedCollection new.! !

!Decodificador methodsFor: 'accessing' stamp: 'MB 3/4/2019 23:45:33'!
listaDeTicketCodificados
	
	^ listaTicketCodificados ! !

!DefinidorDePuntos methodsFor: 'initialization' stamp: 'MB 1/4/2019 23:45:41'!
initialize

	posibilidades _ Set new.
	
	posibilidades 
	add: O  ;
	add: X.
	
	! !

!DefinidorDePuntos methodsFor: 'definidor de puntos' stamp: 'MB 10/9/2018 18:39:22'!
unPuntajePara: unPoint paraRonda: unaRonda 
	
	| puntaje  | 
	
	puntaje  _ posibilidades atRandom.
	
	unPoint registrarPunto: puntaje paraRonda: unaRonda ! !

!DefinidorDePuntos class methodsFor: 'instance creation' stamp: 'MB 10/7/2018 15:21:28'!
crearInstancia
	^ self new! !

!DefinidorDePuntos class methodsFor: 'return - puntaje' stamp: 'MB 10/7/2018 21:30:33'!
unPuntajePara: unPoint paraRonda: unaRonda 
	
	^ self crearInstancia unPuntajePara: unPoint paraRonda: unaRonda ! !

!DefinidorDePuntosBlackPlayOff methodsFor: 'initialization' stamp: 'MB 1/4/2019 23:50:15'!
initialize

	posibilidades _ Set new.
	
	posibilidades 
	add: (X conIdSimbolo: 'X');
	add: (O conIdSimbolo: 'O').
	! !

!DefinidorDePuntosBlackPlayOff methodsFor: 'definidor de puntos black playOff' stamp: 'MB 3/26/2019 20:14:19'!
unPuntajeParaParticipanteA: puntosDelParticipante de: unaPelicula para: unPlayOff
	| puntaje |
	puntaje _ posibilidades atRandom.
	puntosDelParticipante add: puntaje.
	unPlayOff guardarPuntoParticipanteAEnListaBlackPlalOff: puntaje.
	unPlayOff
		guardarPuntajeDeBlackPlayOff: puntaje
		de: unaPelicula.! !

!DefinidorDePuntosBlackPlayOff methodsFor: 'definidor de puntos black playOff' stamp: 'MB 3/26/2019 20:13:53'!
unPuntajeParaParticipanteB: puntosDelParticipante de: unaPelicula para: unPlayOff
	| puntaje |
	puntaje _ posibilidades atRandom.
	puntosDelParticipante add: puntaje.
	unPlayOff guardarPuntoParticipanteBEnListaBlackPlayOff: puntaje.
	unPlayOff
		guardarPuntajeDeBlackPlayOff: puntaje
		de: unaPelicula.! !

!DefinidorDePuntosBlackPlayOff class methodsFor: 'instance creation' stamp: 'MB 10/23/2018 21:38:40'!
crearInstancia
	
	^ self new! !

!DefinidorDePuntosBlackPlayOff class methodsFor: 'definidor de puntos' stamp: 'MB 2/28/2019 22:15:24'!
unPuntajeParaParticipanteA: puntoDelParticipante de: unaPelicula para: unPlayOff 
	
	^ self crearInstancia unPuntajeParaParticipanteA: puntoDelParticipante de: unaPelicula para: unPlayOff ! !

!DefinidorDePuntosBlackPlayOff class methodsFor: 'definidor de puntos' stamp: 'MB 2/28/2019 22:19:47'!
unPuntajeParaParticipanteB: puntosDelParticipante de: unaPelicula para: unPlayOff 

	^ self crearInstancia unPuntajeParaParticipanteB: puntosDelParticipante de: unaPelicula para: unPlayOff ! !

!DefinidorDePuntosPlayOff methodsFor: 'initialization' stamp: 'MB 1/4/2019 23:51:40'!
initialize

	posibilidades _ Set new.
	
	posibilidades 
	add: (X conIdSimbolo: 'X');
	add: (O conIdSimbolo: 'O').
	! !

!DefinidorDePuntosPlayOff methodsFor: 'definidor de puntos playOff' stamp: 'MB 1/12/2019 16:50:20'!
unPuntajeParaPlayOff: unaPelicula enPunto: puntoPlayOff
	
	| puntaje nombreDePelicula |
	
	puntaje _ posibilidades atRandom .
	
	nombreDePelicula _ unaPelicula nombre.
	
	puntoPlayOff
		at: nombreDePelicula
		put: puntaje.! !

!DefinidorDePuntosPlayOff class methodsFor: 'instance creation' stamp: 'MB 10/21/2018 23:10:53'!
crearInstancia
	
	^ self new.! !

!DefinidorDePuntosPlayOff class methodsFor: 'definidor de puntos' stamp: 'MB 12/7/2018 20:53:33'!
unPuntajeParaPlayOff: unaPelicula enPunto: unaInstancePunto
	^ self crearInstancia
		unPuntajeParaPlayOff: unaPelicula
		enPunto: unaInstancePunto.! !

!DefinidorDeZona methodsFor: 'initialization' stamp: 'MB 11/13/2018 19:50:23'!
initialize

	zonasPosibles _ Set new.
	
	zonasPosibles 
	add: ZonaSegura ;
	add: ZonaEnRiesgo .
	! !

!DefinidorDeZona methodsFor: 'zonasPosibles' stamp: 'MB 11/13/2018 19:51:36'!
zonasPosibles
	
	^ zonasPosibles atRandom! !

!DefinidorDeZona class methodsFor: 'instance creation' stamp: 'MB 11/7/2018 22:51:17'!
crearInstancia
	
	^ self new! !

!DefinidorDeZona class methodsFor: 'definidor de zona' stamp: 'MB 11/12/2018 21:41:13'!
definirZonaDePeliculas: unaListaDePeliculas para: unaRuleta 

	^ self crearInstancia definirZonaDePeliculas: unaListaDePeliculas para: unaRuleta ! !

!DefinidorDeZona class methodsFor: 'definidor de zona' stamp: 'MB 11/13/2018 16:03:52'!
unaZonaPara: unaPelicula 
	
	^ (self allSubclasses detect: [:unEstado | unEstado puedeHacerseCargo: unaPelicula ]) new! !

!DefinidorDeZona class methodsFor: 'definidor de zona' stamp: 'MB 11/13/2018 19:50:55'!
zonasPosibles
	
	^ self crearInstancia zonasPosibles ! !

!DetectorGanadorMvM class methodsFor: 'detector ganador MvM' stamp: 'MB 8/13/2019 00:17:20'!
unEstadoDeMvM: peliculaA vs: peliculaB en: unIntroPvP
	^ (self allSubclasses detect: [ :unEstado |
		unEstado
			puedeHacerCargoDeMvM: peliculaA
			vs: peliculaB
			en: unIntroPvP ]) new.! !

!EstadoDeEmpateEnMvM methodsFor: 'instance status - MvM' stamp: 'MB 8/17/2019 15:18:33'!
definirGanadorEndMvM: peliculaA vs: peliculaB en: unEndMvM
	unEndMvM
		definirCasoEmpateEndMvM: peliculaA
		vs: peliculaB.! !

!EstadoDeEmpateEnMvM methodsFor: 'instance status - MvM' stamp: 'MB 8/12/2019 23:48:34'!
definirGanadorIntroMvM: peliculaA vs: peliculaB en: unaFaseMvM
	unaFaseMvM
		definirCasoEmpateMvM: peliculaA
		vs: peliculaB.! !

!EstadoDeEmpateEnMvM methodsFor: 'instance status - MvM' stamp: 'MB 8/17/2019 15:18:45'!
definirGanadorPreEndMvM: peliculaA vs: peliculaB en: unPreEndMvM
	unPreEndMvM
		definirCasoEmpatePreFinalMvM: peliculaA
		vs: peliculaB.! !

!EstadoDeEmpateEnMvM class methodsFor: 'status - MvM' stamp: 'MB 8/13/2019 00:17:19'!
puedeHacerCargoDeMvM: peliculaA vs: peliculaB en: unIntroPvP
	^ unIntroPvP
		empateMvM: peliculaA
		vs: peliculaB.! !

!EstadoDeGanadorPeliculaAEnMvM methodsFor: 'instance status - MvM' stamp: 'MB 8/17/2019 15:19:48'!
definirGanadorEndMvM: peliculaA vs: peliculaB en: unEndMvM
	unEndMvM coronarGanadorMvM: peliculaA.
	unEndMvM coronarPerdedorMvM: peliculaB.! !

!EstadoDeGanadorPeliculaAEnMvM methodsFor: 'instance status - MvM' stamp: 'MB 8/17/2019 15:20:03'!
definirGanadorIntroMvM: peliculaA vs: peliculaB en: unaFaseMvm
	unaFaseMvm coronarGanadorMvM: peliculaA.
	unaFaseMvm coronarPerdedorMvM: peliculaB.! !

!EstadoDeGanadorPeliculaAEnMvM methodsFor: 'instance status - MvM' stamp: 'MB 8/17/2019 15:20:17'!
definirGanadorPreEndMvM: peliculaA vs: peliculaB en: unPreEndMvM
	unPreEndMvM coronarGanadorMvM: peliculaA.
	unPreEndMvM coronarPerdedorMvM: peliculaB.! !

!EstadoDeGanadorPeliculaAEnMvM class methodsFor: 'status - MvM' stamp: 'MB 8/13/2019 00:17:19'!
puedeHacerCargoDeMvM: peliculaA vs: peliculaB en: unIntroPvP
	^ unIntroPvP
		ganoElMvMLaPeliculaA: peliculaA
		vs: peliculaB.! !

!EstadoDeGanadorPeliculaBEnMvM methodsFor: 'instance status - mvm' stamp: 'MB 8/17/2019 15:18:01'!
definirGanadorEndMvM: peliculaA vs: peliculaB en: unFinalPvP
	unFinalPvP coronarGanadorMvM: peliculaB.
	unFinalPvP coronarPerdedorMvM: peliculaA.! !

!EstadoDeGanadorPeliculaBEnMvM methodsFor: 'instance status - mvm' stamp: 'MB 8/12/2019 23:47:52'!
definirGanadorIntroMvM: peliculaA vs: peliculaB en: unaFasePvP
	unaFasePvP coronarGanadorMvM: peliculaB.
	unaFasePvP coronarPerdedorMvM: peliculaA.! !

!EstadoDeGanadorPeliculaBEnMvM methodsFor: 'instance status - mvm' stamp: 'MB 8/17/2019 15:18:19'!
definirGanadorPreEndMvM: peliculaA vs: peliculaB en: unPreFinalPvP
	unPreFinalPvP coronarGanadorMvM: peliculaB.
	unPreFinalPvP coronarPerdedorMvM: peliculaA.! !

!EstadoDeGanadorPeliculaBEnMvM class methodsFor: 'status - MvM' stamp: 'MB 8/13/2019 00:17:19'!
puedeHacerCargoDeMvM: peliculaA vs: peliculaB en: unIntroPvP
	^ unIntroPvP
		ganoElMvMLaPeliculaB: peliculaA
		vs: peliculaB.! !

!DetectorGanadorPlayOff class methodsFor: 'detector ganador playOff' stamp: 'MB 12/7/2018 21:13:20'!
ganadorEntre: peliculaA vs: peliculaB en: unPlayOff
	
	^ (self allSubclasses detect:[:unEstado | unEstado puedeHacerseCargoDe: peliculaA vs: peliculaB en: unPlayOff ]) new! !

!EstadoDeGanadorPeliculaAEnPlayOffEnStageGroup methodsFor: 'definition - status ganador versus' stamp: 'MB 8/17/2019 15:25:52'!
definirGanadorEndVersus: peliculaA vs: peliculaB en: unPlayOff
	unPlayOff
		registrarGanadorPlayOff: peliculaA;
		registrarPerdedorPlayOff: peliculaB.! !

!EstadoDeGanadorPeliculaAEnPlayOffEnStageGroup methodsFor: 'definition - status ganador versus' stamp: 'MB 1/31/2019 00:15:14'!
definirGanadorPrimerVersusCuatripleEmpateDeStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	unPlayOff
		registrarGanadorPlayOff: peliculaA;
		registrarPerdedorPlayOff: peliculaB.! !

!EstadoDeGanadorPeliculaAEnPlayOffEnStageGroup methodsFor: 'definition - status ganador versus' stamp: 'MB 1/30/2019 23:44:19'!
definirGanadorPrimerVersusTripleEmpateDeStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	unPlayOff
		registrarGanadorPlayOff: peliculaA;
		registrarPerdedorPlayOff: peliculaB.! !

!EstadoDeGanadorPeliculaAEnPlayOffEnStageGroup methodsFor: 'definition - status ganador versus' stamp: 'MB 2/2/2019 23:58:44'!
definirGanadorPrimerVersusTripleEmpateDeStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff 
	
	unPlayOff
		registrarGanadorPlayOff: peliculaA;
		registrarPerdedorPlayOff: peliculaB.! !

!EstadoDeGanadorPeliculaAEnPlayOffEnStageGroup methodsFor: 'definition - status ganador versus' stamp: 'MB 1/31/2019 00:34:29'!
definirGanadorSegundoVersusCuatripleEmpateDeStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	unPlayOff
		registrarGanadorPlayOff: peliculaA;
		registrarPerdedorPlayOff: peliculaB.! !

!EstadoDeGanadorPeliculaAEnPlayOffEnStageGroup methodsFor: 'definition - status ganador versus' stamp: 'MB 1/30/2019 23:49:51'!
definirGanadorSegundoVersusDeTripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	unPlayOff
		registrarGanadorPlayOff: peliculaA;
		registrarPerdedorPlayOff: peliculaB.! !

!EstadoDeGanadorPeliculaAEnPlayOffEnStageGroup methodsFor: 'definition - status ganador versus' stamp: 'MB 2/3/2019 15:35:20'!
definirGanadorSegundoVersusTripleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff 
	
	unPlayOff
		registrarGanadorPlayOff: peliculaA;
		registrarPerdedorPlayOff: peliculaB.! !

!EstadoDeGanadorPeliculaAEnPlayOffEnStageGroup methodsFor: 'definition - status ganador versus' stamp: 'MB 1/31/2019 00:52:43'!
definirGanadorTercerVersusDeCuatripleEmpateDeStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	unPlayOff
		registrarGanadorPlayOff: peliculaA;
		registrarPerdedorPlayOff: peliculaB.! !

!EstadoDeGanadorPeliculaAEnPlayOffEnStageGroup methodsFor: 'definition - status ganador versus' stamp: 'MB 2/3/2019 15:21:19'!
definirGanadorUnicoVersusDeStageGroupBonusInvitacion: peliculaA vs: peliculaB en: unPlayOff 
	
	unPlayOff
		registrarGanadorPlayOff: peliculaA;
		registrarPerdedorPlayOff: peliculaB.! !

!EstadoDeGanadorPeliculaAEnPlayOffEnStageGroup methodsFor: 'definition - status ganador versus' stamp: 'MB 2/2/2019 23:48:12'!
definirGanadorUnicoVersusStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff 
	
	unPlayOff
		registrarGanadorPlayOff: peliculaA;
		registrarPerdedorPlayOff: peliculaB.! !

!EstadoDeGanadorPeliculaAEnPlayOffEnStageGroup methodsFor: 'instance status - ganador pelicula' stamp: 'MB 12/7/2018 21:05:56'!
definirGanadorVersus: peliculaA vs: peliculaB en: unPlayOff
	^ unPlayOff
		registrarGanadorPlayOff: peliculaA;
		registrarPerdedorPlayOff: peliculaB.! !

!EstadoDeGanadorPeliculaAEnPlayOffEnStageGroup methodsFor: 'definition - status ganador versus' stamp: 'MB 8/17/2019 15:20:57'!
definirGanadorVersusPreEnd: peliculaA vs: peliculaB en: unPlayOff
	unPlayOff
		registrarGanadorPlayOff: peliculaA;
		registrarPerdedorPlayOff: peliculaB.! !

!EstadoDeGanadorPeliculaAEnPlayOffEnStageGroup methodsFor: 'definition - status ganador versus' stamp: 'MB 8/17/2019 15:21:14'!
definirGanadorVersusPreEndB: peliculaA vs: peliculaB en: unPlayOff
	unPlayOff
		registrarGanadorPlayOff: peliculaA;
		registrarPerdedorPlayOff: peliculaB.! !

!EstadoDeGanadorPeliculaAEnPlayOffEnStageGroup methodsFor: 'definition - status ganador versus' stamp: 'MB 1/30/2019 23:20:40'!
definirGanadorVersusUnicoStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	unPlayOff
		registrarGanadorPlayOff: peliculaA;
		registrarPerdedorPlayOff: peliculaB.! !

!EstadoDeGanadorPeliculaAEnPlayOffEnStageGroup class methodsFor: 'status - ganador pelicula' stamp: 'MB 12/7/2018 21:06:06'!
puedeHacerseCargoDe: peliculaA vs: peliculaB en: unPlayOff
	^ unPlayOff
		ganoPlayOffLaPeliculaA: peliculaA
		vs: peliculaB.! !

!EstadoDeGanadorPeliculaBEnPlayOffEnStageGroup methodsFor: 'definition - status ganador versus' stamp: 'MB 8/17/2019 15:25:52'!
definirGanadorEndVersus: peliculaA vs: peliculaB en: unPlayOff
	unPlayOff
		registrarGanadorPlayOff: peliculaB;
		registrarPerdedorPlayOff: peliculaA.! !

!EstadoDeGanadorPeliculaBEnPlayOffEnStageGroup methodsFor: 'definition - status ganador versus' stamp: 'MB 1/30/2019 23:21:30'!
definirGanadorPrimerDeTripleEmpateVersusStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	unPlayOff
		registrarGanadorPlayOff: peliculaB;
		registrarPerdedorPlayOff: peliculaA.! !

!EstadoDeGanadorPeliculaBEnPlayOffEnStageGroup methodsFor: 'definition - status ganador versus' stamp: 'MB 1/31/2019 00:16:22'!
definirGanadorPrimerVersusCuatripleEmpateDeStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	unPlayOff
		registrarGanadorPlayOff: peliculaB;
		registrarPerdedorPlayOff: peliculaA.! !

!EstadoDeGanadorPeliculaBEnPlayOffEnStageGroup methodsFor: 'definition - status ganador versus' stamp: 'MB 1/30/2019 23:43:16'!
definirGanadorPrimerVersusTripleEmpateDeStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	unPlayOff
		registrarGanadorPlayOff: peliculaB;
		registrarPerdedorPlayOff: peliculaA.! !

!EstadoDeGanadorPeliculaBEnPlayOffEnStageGroup methodsFor: 'definition - status ganador versus' stamp: 'MB 2/2/2019 23:57:54'!
definirGanadorPrimerVersusTripleEmpateDeStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff 
	
	unPlayOff
		registrarGanadorPlayOff: peliculaB;
		registrarPerdedorPlayOff: peliculaA.! !

!EstadoDeGanadorPeliculaBEnPlayOffEnStageGroup methodsFor: 'definition - status ganador versus' stamp: 'MB 1/31/2019 00:36:59'!
definirGanadorSegundoVersusCuatripleEmpateDeStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	unPlayOff
		registrarGanadorPlayOff: peliculaB;
		registrarPerdedorPlayOff: peliculaA.! !

!EstadoDeGanadorPeliculaBEnPlayOffEnStageGroup methodsFor: 'definition - status ganador versus' stamp: 'MB 1/30/2019 23:51:15'!
definirGanadorSegundoVersusDeTripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	unPlayOff
		registrarGanadorPlayOff: peliculaB;
		registrarPerdedorPlayOff: peliculaA.! !

!EstadoDeGanadorPeliculaBEnPlayOffEnStageGroup methodsFor: 'definition - status ganador versus' stamp: 'MB 2/3/2019 15:32:14'!
definirGanadorSegundoVersusTripleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff 
	
	unPlayOff
		registrarGanadorPlayOff: peliculaB;
		registrarPerdedorPlayOff: peliculaA.! !

!EstadoDeGanadorPeliculaBEnPlayOffEnStageGroup methodsFor: 'definition - status ganador versus' stamp: 'MB 1/31/2019 00:51:44'!
definirGanadorTercerVersusDeCuatripleEmpateDeStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	unPlayOff
		registrarGanadorPlayOff: peliculaB;
		registrarPerdedorPlayOff: peliculaA.! !

!EstadoDeGanadorPeliculaBEnPlayOffEnStageGroup methodsFor: 'definition - status ganador versus' stamp: 'MB 2/3/2019 15:20:04'!
definirGanadorUnicoVersusDeStageGroupBonusInvitacion: peliculaA vs: peliculaB en: unPlayOff 
	
	unPlayOff
		registrarGanadorPlayOff: peliculaB;
		registrarPerdedorPlayOff: peliculaA.! !

!EstadoDeGanadorPeliculaBEnPlayOffEnStageGroup methodsFor: 'definition - status ganador versus' stamp: 'MB 2/2/2019 23:04:07'!
definirGanadorUnicoVersusStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff 
	
	unPlayOff
		registrarGanadorPlayOff: peliculaB;
		registrarPerdedorPlayOff: peliculaA.! !

!EstadoDeGanadorPeliculaBEnPlayOffEnStageGroup methodsFor: 'instance status - ganador pelicula' stamp: 'MB 12/7/2018 21:05:48'!
definirGanadorVersus: peliculaA vs: peliculaB en: unPlayOff
	unPlayOff
		registrarGanadorPlayOff: peliculaB;
		registrarPerdedorPlayOff: peliculaA.! !

!EstadoDeGanadorPeliculaBEnPlayOffEnStageGroup methodsFor: 'definition - status ganador versus' stamp: 'MB 8/17/2019 15:20:57'!
definirGanadorVersusPreEnd: peliculaA vs: peliculaB en: unPlayOff
	unPlayOff
		registrarGanadorPlayOff: peliculaB;
		registrarPerdedorPlayOff: peliculaA.! !

!EstadoDeGanadorPeliculaBEnPlayOffEnStageGroup methodsFor: 'definition - status ganador versus' stamp: 'MB 1/30/2019 23:20:23'!
definirGanadorVersusUnicoStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	unPlayOff
		registrarGanadorPlayOff: peliculaB;
		registrarPerdedorPlayOff: peliculaA.! !

!EstadoDeGanadorPeliculaBEnPlayOffEnStageGroup class methodsFor: 'status - ganador pelicula' stamp: 'MB 12/7/2018 21:06:15'!
puedeHacerseCargoDe: peliculaA vs: peliculaB en: unaPlayOff
	^ unaPlayOff
		ganoPlayOffLaPeliculaB: peliculaA
		vs: peliculaB.! !

!EstadoDePlayOffEmpatado methodsFor: 'definition - status ganador versus' stamp: 'MB 8/17/2019 15:25:53'!
definirGanadorEndVersus: peliculaA vs: peliculaB en: unPlayOff
	^ unPlayOff
		definirBlackPlayOffDeFinalMvM: peliculaA
		vs: peliculaB.! !

!EstadoDePlayOffEmpatado methodsFor: 'definition - status ganador versus' stamp: 'MB 1/31/2019 00:19:00'!
definirGanadorPrimerVersusCuatripleEmpateDeStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	^ unPlayOff definirBlackPlayOffDePrimerVersusDeCuatripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB ! !

!EstadoDePlayOffEmpatado methodsFor: 'definition - status ganador versus' stamp: 'MB 1/30/2019 23:33:49'!
definirGanadorPrimerVersusTripleEmpateDeStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	^ unPlayOff definirBlackPlayOffDePrimerVersusDeTripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB ! !

!EstadoDePlayOffEmpatado methodsFor: 'definition - status ganador versus' stamp: 'MB 2/3/2019 00:07:18'!
definirGanadorPrimerVersusTripleEmpateDeStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff 
	
	^ unPlayOff definirBlackPlayOffDePrimerVersusDeTripleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB ! !

!EstadoDePlayOffEmpatado methodsFor: 'definition - status ganador versus' stamp: 'MB 1/31/2019 00:40:31'!
definirGanadorSegundoVersusCuatripleEmpateDeStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	^ unPlayOff definirBlackPlayOffDeSegundoVersusDeCuatripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB ! !

!EstadoDePlayOffEmpatado methodsFor: 'definition - status ganador versus' stamp: 'MB 1/30/2019 23:53:57'!
definirGanadorSegundoVersusDeTripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	^ unPlayOff definirBlackPlayOffSegundoVersusDeTripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB ! !

!EstadoDePlayOffEmpatado methodsFor: 'definition - status ganador versus' stamp: 'MB 2/3/2019 15:03:25'!
definirGanadorSegundoVersusTripleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff 
	
	^ unPlayOff definirBlackPlayOffDeSegundoVersusDeTripleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB ! !

!EstadoDePlayOffEmpatado methodsFor: 'definition - status ganador versus' stamp: 'MB 1/31/2019 00:54:13'!
definirGanadorTercerVersusDeCuatripleEmpateDeStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 

	^ unPlayOff definirBlackPlayOffDeTercerVersusDeCuatripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB ! !

!EstadoDePlayOffEmpatado methodsFor: 'definition - status ganador versus' stamp: 'MB 2/3/2019 15:23:43'!
definirGanadorUnicoVersusDeStageGroupBonusInvitacion: peliculaA vs: peliculaB en: unPlayOff 
	
	^ unPlayOff definirBlackPlayOffVersusUnicoStageGroupBonusInvitacion: peliculaA vs: peliculaB ! !

!EstadoDePlayOffEmpatado methodsFor: 'definition - status ganador versus' stamp: 'MB 2/2/2019 23:12:59'!
definirGanadorUnicoVersusStageGroupBonusPromocion: peliculaA vs: peliculaB en: unPlayOff 
	
	^ unPlayOff definirUnicoBlackPlayOffStageGroupBonusPromocion: peliculaA vs: peliculaB ! !

!EstadoDePlayOffEmpatado methodsFor: 'instance status - estado de punto' stamp: 'MB 12/7/2018 21:06:44'!
definirGanadorVersus: peliculaA vs: peliculaB en: unPlayOff

	^ unPlayOff definirBlackPlayOff: peliculaA vs: peliculaB ! !

!EstadoDePlayOffEmpatado methodsFor: 'definition - status ganador versus' stamp: 'MB 8/17/2019 15:20:57'!
definirGanadorVersusPreEnd: peliculaA vs: peliculaB en: unPlayOff
	^ unPlayOff
		definirBlackPlayOffPreFinalMvMA: peliculaA
		vs: peliculaB.! !

!EstadoDePlayOffEmpatado methodsFor: 'definition - status ganador versus' stamp: 'MB 1/30/2019 23:05:49'!
definirGanadorVersusUnicoStageGroupBonusComodin: peliculaA vs: peliculaB en: unPlayOff 
	
	^ unPlayOff definirBlackPlayOffUnicoStageGroupBonusComodin: peliculaA vs: peliculaB ! !

!EstadoDePlayOffEmpatado class methodsFor: 'status - estado de punto' stamp: 'MB 12/7/2018 21:06:56'!
puedeHacerseCargoDe: peliculaA vs: peliculaB en: unPlayOff
	^ unPlayOff
		puntosDePlayOffEmpatado: peliculaA
		vs: peliculaB.! !

!EndTicket methodsFor: 'associating' stamp: 'MB 4/8/2020 00:07:14'!
asociarCampeonCineWar: unaPelicula
	campeonCineWar _ unaPelicula nombre.! !

!EndTicket methodsFor: 'associating' stamp: 'MB 3/22/2019 00:34:41'!
asociarPeliculasEnTop: unaListaDeTopPeliculasCodificadas 
	
	topPeliculas _ unaListaDeTopPeliculasCodificadas ! !

!EndTicket methodsFor: 'associating' stamp: 'MB 3/22/2019 01:10:30'!
asociarPeliculasGanadorasDeBonusInvitacion: unaListaDePeliclasCodificadas 
	
	peliculasGanadorasDeBonusInvitacion _ unaListaDePeliclasCodificadas ! !

!EndTicket methodsFor: 'associating' stamp: 'MB 3/22/2019 00:35:49'!
asociarPuntajeDelTop: unPuntajeCodificado 
	
	puntajeDeTop _ unPuntajeCodificado ! !

!EndTicket methodsFor: 'associating' stamp: 'MB 4/8/2020 00:09:40'!
asociarSubCampeonCineWar: unaPelicula
	subCampeonCineWar _ unaPelicula nombre.! !

!EndTicket methodsFor: 'printing' stamp: 'MB 4/8/2020 00:09:38'!
printOn: unStream
	unStream
		nextPutAll: '--------------------------------------------------------';
		space;
		newLine;
		space;
		newLine;
		newLine;
		nextPutAll: '# Estadisticas: ';
		space;
		newLine;
		newLine;
		nextPutAll: '-- Campeon CineWar:';
		space;
		nextPutAll: campeonCineWar;
		space;
		newLine;
		newLine;
		nextPutAll: '-- Sub Campeon CineWar:';
		space;
		nextPutAll: subCampeonCineWar;
		space;
		newLine;
		newLine;
		nextPutAll: '-- Top Peliculas Con Mas Puntos: -> ';
		space;
		nextPutAll: topPeliculas;
		space;
		nextPutAll: '=';
		space;
		nextPutAll: puntajeDeTop;
		space;
		nextPutAll: 'Puntos';
		newLine;
		newLine;
		nextPutAll: 'Peliculas Ganadoras De Bonus Invitacion:';
		space;
		nextPutAll: peliculasGanadorasDeBonusInvitacion;
		space;
		newLine.! !

!FinalPrecuelaTicket methodsFor: 'associating' stamp: 'MB 3/18/2019 00:36:30'!
asociarDataOutSidePeliculas: unaListaDePeliculasEnOutSide 
	
	dataPeliculasEnOutSide _ unaListaDePeliculasEnOutSide ! !

!FinalPrecuelaTicket methodsFor: 'printing' stamp: 'MB 3/26/2019 19:50:04'!
printOn: unStream

	unStream
		nextPutAll:'--------------------------------------------------------'; space ; newLine; space ; newLine; newLine;
		
		nextPutAll:'# Peliculas OutSide Spin-Off'; space; newLine; newLine;
		
		nextPutAll: '--' ; space; nextPutAll: dataPeliculasEnOutSide ; space ; newLine.! !

!FinalTicketCineWarMvM methodsFor: 'associating' stamp: 'MB 3/22/2019 01:40:23'!
asociarPrimeraPelicula: unaPelicula 

	primeraPelicula _ unaPelicula nombre! !

!FinalTicketCineWarMvM methodsFor: 'associating' stamp: 'MB 3/19/2019 21:11:03'!
asociarPrimeraTandaPointExpressDePrimeraRondaDePeliculaA: unaListaDePuntos 
	
	primeraTandaPointExpressDePrimeraRondaDePeliculaA _ unaListaDePuntos ! !

!FinalTicketCineWarMvM methodsFor: 'associating' stamp: 'MB 3/19/2019 21:46:37'!
asociarPrimeraTandaPointExpressDePrimeraRondaDePeliculaB: unaListaDePuntos 
	
	primeraTandaPointExpressDePrimeraRondaDePeliculaB _ unaListaDePuntos ! !

!FinalTicketCineWarMvM methodsFor: 'associating' stamp: 'MB 3/19/2019 22:48:14'!
asociarPrimeraTandaPointExpressDeRondaRevanchaDePeliculaA: unaTandaDePuntos 
	
	primeraTandaPointExpressDeRondaRevanchaDePeliculaA _ unaTandaDePuntos ! !

!FinalTicketCineWarMvM methodsFor: 'associating' stamp: 'MB 3/19/2019 22:49:25'!
asociarPrimeraTandaPointExpressDeRondaRevanchaDePeliculaB: unaTandaDePuntos 
	
	primeraTandaPointExpressDeRondaRevanchaDePeliculaB _ unaTandaDePuntos ! !

!FinalTicketCineWarMvM methodsFor: 'associating' stamp: 'MB 3/19/2019 22:23:06'!
asociarRepechajeTandaPointExpressDePrimeraRondaDePeliculaA: unaListaDePuntos 
	
	repechajeTandaPointExpressDePrimeraRondaDePeliculaA _ unaListaDePuntos ! !

!FinalTicketCineWarMvM methodsFor: 'associating' stamp: 'MB 3/19/2019 22:24:50'!
asociarRepechajeTandaPointExpressDePrimeraRondaDePeliculaB: unaListaDePuntos 
	
	repechajeTandaPointExpressDePrimeraRondaDePeliculaB _  unaListaDePuntos ! !

!FinalTicketCineWarMvM methodsFor: 'associating' stamp: 'MB 3/19/2019 23:16:37'!
asociarRepechajeTandaPointExpressDeRondaRevanchaDePeliculaA: unaListaDePuntos 
	
	repechajeTandaPointExpressDeRondaRevanchaDePeliculaA _ unaListaDePuntos ! !

!FinalTicketCineWarMvM methodsFor: 'associating' stamp: 'MB 3/19/2019 23:20:08'!
asociarRepechajeTandaPointExpressDeRondaRevanchaDePeliculaB: unaListaDePuntos 
	
	repechajeTandaPointExpressDeRondaRevanchaDePeliculaB _ unaListaDePuntos ! !

!FinalTicketCineWarMvM methodsFor: 'associating' stamp: 'MB 3/20/2019 00:40:11'!
asociarSegundaPelicula: unaPelicula
	segundaPelicula _ unaPelicula nombre.! !

!FinalTicketCineWarMvM methodsFor: 'associating' stamp: 'MB 3/19/2019 22:03:35'!
asociarSegundaTandaPointExpressDePrimeraRondaDePeliculaA: unaListaDePuntos 
	
	segundaTandaPointExpressDePrimeraRondaDePeliculaA _ unaListaDePuntos ! !

!FinalTicketCineWarMvM methodsFor: 'associating' stamp: 'MB 3/19/2019 22:04:43'!
asociarSegundaTandaPointExpressDePrimeraRondaDePeliculaB: unaListaDePuntos 
	
	segundaTandaPointExpressDePrimeraRondaDePeliculaB _ unaListaDePuntos ! !

!FinalTicketCineWarMvM methodsFor: 'associating' stamp: 'MB 3/19/2019 23:09:31'!
asociarSegundaTandaPointExpressDeRondaRevanchaDePeliculaA: unaListaDePuntos 
	
	segundaTandaPointExpressDeRondaRevanchaDePeliculaA _ unaListaDePuntos ! !

!FinalTicketCineWarMvM methodsFor: 'associating' stamp: 'MB 3/19/2019 23:10:16'!
asociarSegundaTandaPointExpressDeRondaRevanchaDePeliculaB: unaListaDePuntos 
	
	segundaTandaPointExpressDeRondaRevanchaDePeliculaB _ unaListaDePuntos ! !

!FinalTicketCineWarMvM methodsFor: 'associating' stamp: 'MB 3/22/2019 01:20:20'!
asociarSubCampeon: unaPelicula 
	
	subCampeonColiseum _ unaPelicula nombre! !

!FinalTicketCineWarMvM methodsFor: 'associating' stamp: 'MB 8/18/2019 23:45:00'!
asociarTituloEndMvM: unaInstanciaMvM
	| titulo |
	titulo _ 'EndMvM ' append: unaInstanciaMvM.
	tituloMvM _ titulo.! !

!FinalTicketCineWarMvM methodsFor: 'associating' stamp: 'MB 8/12/2019 23:55:44'!
asociarTituloIntroMvM: unaInstanciaMvM
	| titulo |
	titulo _ 'IntroMvM ' append: unaInstanciaMvM.
	tituloMvM _ titulo.! !

!FinalTicketCineWarMvM methodsFor: 'associating' stamp: 'MB 8/18/2019 23:45:35'!
asociarTituloPreEndMvM: unaInstanciaPreFinalMvM
	| titulo |
	titulo _ 'PreEndMvM ' append: unaInstanciaPreFinalMvM.
	tituloMvM _ titulo.! !

!FinalTicketCineWarMvM methodsFor: 'accessing' stamp: 'MB 3/20/2019 23:38:26'!
primeraPelicula
	^ primeraPelicula.! !

!FinalTicketCineWarMvM methodsFor: 'printing' stamp: 'MB 8/12/2019 23:55:44'!
printOn: unStream
	unStream
		nextPutAll: '--------------------------------------------------------';
		space;
		newLine;
		space;
		newLine;
		newLine;
		nextPutAll: '*';
		space;
		nextPutAll: tituloMvM;
		newLine;
		space;
		newLine;
		newLine;
		nextPutAll: '# Peliculas Inside ';
		space;
		newLine;
		newLine;
		nextPutAll: '-- °1 Pelicula:';
		space;
		nextPutAll: primeraPelicula;
		space;
		newLine;
		nextPutAll: '-- °2 Pelicula:';
		space;
		nextPutAll: segundaPelicula;
		space;
		newLine;
		newLine;
		nextPutAll: '* Tanda Point Express ';
		space;
		newLine;
		newLine;
		nextPutAll: '# Primera Ronda ';
		newLine;
		newLine;
		nextPutAll: '--';
		space;
		nextPutAll: primeraPelicula;
		newLine;
		nextPutAll: '1° tanda:';
		space;
		nextPutAll: primeraTandaPointExpressDePrimeraRondaDePeliculaA;
		newLine;
		nextPutAll: '2° tanda:';
		space;
		nextPutAll: segundaTandaPointExpressDePrimeraRondaDePeliculaA;
		newLine;
		nextPutAll: 'Repechaje:';
		space;
		nextPutAll: repechajeTandaPointExpressDePrimeraRondaDePeliculaA;
		newLine;
		newLine;
		nextPutAll: '--';
		space;
		nextPutAll: segundaPelicula;
		newLine;
		nextPutAll: '1° tanda:';
		space;
		nextPutAll: primeraTandaPointExpressDePrimeraRondaDePeliculaB;
		newLine;
		nextPutAll: '2° tanda:';
		space;
		nextPutAll: segundaTandaPointExpressDePrimeraRondaDePeliculaB;
		newLine;
		nextPutAll: 'Repechaje:';
		space;
		nextPutAll: repechajeTandaPointExpressDePrimeraRondaDePeliculaB;
		newLine;
		newLine;
		nextPutAll: '# Ronda Revancha ';
		newLine;
		newLine;
		nextPutAll: '--';
		space;
		nextPutAll: primeraPelicula;
		newLine;
		nextPutAll: '1° tanda:';
		space;
		nextPutAll: primeraTandaPointExpressDeRondaRevanchaDePeliculaA;
		newLine;
		nextPutAll: '2° tanda:';
		space;
		nextPutAll: segundaTandaPointExpressDeRondaRevanchaDePeliculaA;
		newLine;
		nextPutAll: 'Repechaje:';
		space;
		nextPutAll: repechajeTandaPointExpressDeRondaRevanchaDePeliculaA;
		newLine;
		newLine;
		nextPutAll: '--';
		space;
		nextPutAll: segundaPelicula;
		newLine;
		nextPutAll: '1° tanda:';
		space;
		nextPutAll: primeraTandaPointExpressDeRondaRevanchaDePeliculaB;
		newLine;
		nextPutAll: '2° tanda:';
		space;
		nextPutAll: segundaTandaPointExpressDeRondaRevanchaDePeliculaB;
		newLine;
		nextPutAll: 'Repechaje:';
		space;
		nextPutAll: repechajeTandaPointExpressDeRondaRevanchaDePeliculaB;
		newLine;
		newLine;
		nextPutAll: '# Global: ';
		newLine;
		newLine;
		nextPutAll: '-- °1 Pelicula -> ';
		space;
		nextPutAll: primeraPelicula;
		space;
		nextPutAll: '=';
		space;
		nextPutAll: puntajeFinalPeliculaA;
		space;
		nextPutAll: 'Puntos';
		newLine;
		nextPutAll: '-- °2 Pelicula -> ';
		space;
		nextPutAll: segundaPelicula;
		space;
		nextPutAll: '=';
		space;
		nextPutAll: puntajeFinalPeliculaB;
		space;
		nextPutAll: 'Puntos';
		newLine.! !

!FinalTicketCineWarMvM methodsFor: 'associating' stamp: 'MB 3/19/2019 23:31:52'!
puntajeFinalPeliculaA: unPuntaje 
	
	puntajeFinalPeliculaA _ unPuntaje ! !

!FinalTicketCineWarMvM methodsFor: 'associating' stamp: 'MB 3/19/2019 23:32:45'!
puntajeFinalPeliculaB: unPuntajeFinal 
	
	puntajeFinalPeliculaB _ unPuntajeFinal ! !

!FinalTicketCineWarMvM methodsFor: 'accessing' stamp: 'MB 3/20/2019 23:38:46'!
segundaPelicula
	^ segundaPelicula.! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/13/2019 16:51:29'!
asociarCantidadDePuntosDePuesto: unRegistro 
	
	| puntosGanadorBonusComodin puntosGanadorBonusPromocion puntosGanadorBonusInvitacion puntosLastPelicula |
	
	puntosGanadorBonusComodin _ (self puntajeDePelicula: ganadorBonusComodin en: unRegistro) asString .
	
	puntosGanadorBonusPromocion _ (self puntajeDePelicula: ganadorBonusPromocion en: unRegistro) asString.
	
	puntosGanadorBonusInvitacion _ (self puntajeDePelicula: ganadorBonusInvitacion en: unRegistro) asString .
	
	puntosLastPelicula _( self puntajeDePelicula: lastPelicula en: unRegistro) asString.
	
	self asociarPuntajeDeGanadorBonusComodin: puntosGanadorBonusComodin .
	
	self asociarPuntajeDeGanadorPromocion: puntosGanadorBonusPromocion .
	
	self asociarPuntajeDeGanadorInvitacion: puntosGanadorBonusInvitacion .
	
	self asociarPuntajeDeLastPelicula: puntosLastPelicula ! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/13/2019 20:21:55'!
asociarCuartoGanadorDeCupo: unaPelicula
	cuartoGanadorDeCupo _ unaPelicula nombre.! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/13/2019 16:26:30'!
asociarGanadorBonusComodin: unaPelicula 
	
	ganadorBonusComodin  _ unaPelicula ! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/13/2019 16:30:07'!
asociarGanadorBonusInvitacion: unaPelicula
	
	ganadorBonusInvitacion _ unaPelicula ! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/13/2019 16:27:20'!
asociarGanadorBonusPromocion: unaPelicula 
	
	ganadorBonusPromocion _ unaPelicula ! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/13/2019 16:31:29'!
asociarLastPelicula: unaPelicula 
	
	lastPelicula _ unaPelicula ! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/8/2019 23:33:03'!
asociarPrimerGanadorDeCupo: unaPelicula 
	
	primerGanadorDeCupo _ unaPelicula nombre! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/11/2019 23:44:58'!
asociarPrimeraTandaPointEnPrimeraRondaDePeliculaA: unaListaDePuntos 
	
	primeraTandaPointEnPrimeraRondaDePeliculaA _ unaListaDePuntos ! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/11/2019 23:46:02'!
asociarPrimeraTandaPointEnPrimeraRondaDePeliculaB: unaTandaDePuntos 
	
	primeraTandaPointEnPrimeraRondaDePeliculaB _ unaTandaDePuntos ! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/11/2019 23:46:37'!
asociarPrimeraTandaPointEnPrimeraRondaDePeliculaC: unaTandaDePuntos 
	
	primeraTandaPointEnPrimeraRondaDePeliculaC _ unaTandaDePuntos ! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/11/2019 23:47:16'!
asociarPrimeraTandaPointEnPrimeraRondaDePeliculaD: unaTandaDePuntos 
	
	primeraTandaPointEnPrimeraRondaDePeliculaD _ unaTandaDePuntos ! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/11/2019 23:47:33'!
asociarPrimeraTandaPointEnRondaRevanchaDePeliculaA: unaTandaDePuntos 
	
	primeraTandaPointEnRondaRevanchaDePeliculaA _ unaTandaDePuntos ! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/11/2019 23:48:23'!
asociarPrimeraTandaPointEnRondaRevanchaDePeliculaB: unaTandaDePuntos 
	
	primeraTandaPointEnRondaRevanchaDePeliculaB _ unaTandaDePuntos ! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/11/2019 23:49:14'!
asociarPrimeraTandaPointEnRondaRevanchaDePeliculaC: unaTandaDePuntos 
	
	primeraTandaPointEnRondaRevanchaDePeliculaC _ unaTandaDePuntos ! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/11/2019 23:49:32'!
asociarPrimeraTandaPointEnRondaRevanchaDePeliculaD: unaTandaDePuntos
	
	primeraTandaPointEnRondaRevanchaDePeliculaD _ unaTandaDePuntos ! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/13/2019 16:41:19'!
asociarPuestosDeRanking: unBonus 
	
	| ganadorBonusComodin ganadorBonusPromocion ganadorBonusInvitacion lastPelicula |
	
	ganadorBonusComodin _ unBonus ganadorComodin nombre.
	
	ganadorBonusPromocion _ unBonus ganadorPromocion nombre.
	
	ganadorBonusInvitacion _ unBonus ganadorInvitacion nombre.
	
	lastPelicula _ unBonus lastPelicula nombre.
	
	self asociarGanadorBonusComodin: ganadorBonusComodin .
	
	self asociarGanadorBonusPromocion: ganadorBonusPromocion .
	
	self asociarGanadorBonusInvitacion: ganadorBonusInvitacion .
	
	self asociarLastPelicula: lastPelicula .
	
	
	! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/13/2019 16:52:29'!
asociarPuntajeDeGanadorBonusComodin: unPuntaje 
	
	puntajeDeGanadorBonusComodin _ unPuntaje .! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/13/2019 16:55:42'!
asociarPuntajeDeGanadorInvitacion: unPuntaje 
	
	puntajeDeGanadorBonusInvitacion _ unPuntaje ! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/13/2019 16:53:39'!
asociarPuntajeDeGanadorPromocion: unPuntaje 
	
	puntajeDeGanadorBonusPromocion _ unPuntaje ! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/13/2019 16:56:43'!
asociarPuntajeDeLastPelicula: unPuntaje 
	
	puntajeDeLastPelicula _ unPuntaje ! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/11/2019 23:50:19'!
asociarRepechajeTandaPointEnPrimeraRondaDePeliculaA: unaTandaDePuntos 
	
	repechajeTandaPointEnPrimeraRondaDePeliculaA _ unaTandaDePuntos ! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/11/2019 23:50:42'!
asociarRepechajeTandaPointEnPrimeraRondaDePeliculaB: unaTandaDePuntos 
	
	repechajeTandaPointEnPrimeraRondaDePeliculaB _ unaTandaDePuntos ! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/11/2019 23:51:05'!
asociarRepechajeTandaPointEnPrimeraRondaDePeliculaC: unaTandaDePuntos 
	
	repechajeTandaPointEnPrimeraRondaDePeliculaC _ unaTandaDePuntos ! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/11/2019 23:51:40'!
asociarRepechajeTandaPointEnPrimeraRondaDePeliculaD: unaTandaDePuntos 
	
	repechajeTandaPointEnPrimeraRondaDePeliculaD _ unaTandaDePuntos ! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/12/2019 00:51:36'!
asociarRepechajeTandaPointEnRondaRevanchaDePeliculaA: unaTandaDePuntos 
	
	repechajeTandaPointEnRondaRevanchaDePeliculaA _ unaTandaDePuntos ! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/12/2019 00:52:38'!
asociarRepechajeTandaPointEnRondaRevanchaDePeliculaB: unaTandaDePuntos 
	
	repechajeTandaPointEnRondaRevanchaDePeliculaB _ unaTandaDePuntos ! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/12/2019 00:53:21'!
asociarRepechajeTandaPointEnRondaRevanchaDePeliculaC: unaTandaDePuntos 
	
	repechajeTandaPointEnRondaRevanchaDePeliculaC _ unaTandaDePuntos ! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/12/2019 00:54:16'!
asociarRepechajeTandaPointEnRondaRevanchaDePeliculaD: unaTandaDePuntos 
	
	repechajeTandaPointEnRondaRevanchaDePeliculaD _ unaTandaDePuntos ! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/11/2019 23:52:00'!
asociarSegundaTandaPointEnPrimeraRondaDePeliculaA: unaTandaDePuntos 
	
	segundaTandaPointEnPrimeraRondaDePeliculaA _ unaTandaDePuntos ! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/11/2019 23:52:18'!
asociarSegundaTandaPointEnPrimeraRondaDePeliculaB: unaTandaDePuntos 
	
	segundaTandaPointEnPrimeraRondaDePeliculaB _ unaTandaDePuntos ! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/11/2019 23:52:34'!
asociarSegundaTandaPointEnPrimeraRondaDePeliculaC: unaTandaDePuntos 
	
	segundaTandaPointEnPrimeraRondaDePeliculaC _ unaTandaDePuntos ! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/11/2019 23:52:49'!
asociarSegundaTandaPointEnPrimeraRondaDePeliculaD: unaTandaDePuntos 
	
	segundaTandaPointEnPrimeraRondaDePeliculaD _ unaTandaDePuntos ! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/12/2019 00:09:55'!
asociarSegundaTandaPointEnRondaRevanchaDePeliculaA: unaTandaDePuntos 
	
	segundaTandaPointEnRondaRevanchaDePeliculaA _ unaTandaDePuntos ! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/12/2019 00:11:06'!
asociarSegundaTandaPointEnRondaRevanchaDePeliculaB: unaTandaDePuntos 
	
	segundaTandaPointEnRondaRevanchaDePeliculaB _ unaTandaDePuntos ! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/12/2019 00:33:56'!
asociarSegundaTandaPointEnRondaRevanchaDePeliculaC: unaTandaDePuntos 
	
	segundaTandaPointEnRondaRevanchaDePeliculaC _ unaTandaDePuntos ! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/12/2019 00:36:41'!
asociarSegundaTandaPointEnRondaRevanchaDePeliculaD: unaTandaDePuntos 
	
	segundaTandaPointEnRondaRevanchaDePeliculaD _ unaTandaDePuntos ! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/8/2019 23:33:15'!
asociarSegundoGanadorDeCupo: unaPelicula 
	
	segundoGanadorDeCupo _ unaPelicula nombre ! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/8/2019 23:34:07'!
asociarTercerGanadorDeCupo: unaPelicula 
	
	tercerGanadorDeCupo _ unaPelicula nombre! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/15/2019 21:10:10'!
asociarTituloDeTicketStageGroup: unTicketColiseum 
	
	
	
	tituloStageGroup _ unTicketColiseum tituloTicket! !

!FinalTicketCineWarStageGroup methodsFor: 'printing' stamp: 'MB 3/13/2019 21:27:54'!
printOn: unStream


	unStream 
		nextPutAll:'--------------------------------------------------------'; space ; newLine; space ; newLine; newLine;
		
		nextPutAll:'*';space; nextPutAll: tituloStageGroup ; newLine ; space ; newLine; newLine;
		
		nextPutAll:'# Peliculas Inside '; space; newLine; newLine;
		
		nextPutAll: '-- Ganador 1° Cupo:' ; space; nextPutAll: primerGanadorDeCupo ; space ; newLine;
		nextPutAll: '-- Ganador 2° Cupo:' ; space; nextPutAll: segundoGanadorDeCupo ; space ; newLine;
		nextPutAll: '-- Ganador 3° Cupo:' ; space; nextPutAll: tercerGanadorDeCupo ; space ; newLine;
		nextPutAll: '-- Ganador 4° Cupo:' ; space; nextPutAll: cuartoGanadorDeCupo ; space ; newLine; newLine;
		
		nextPutAll:'* Tanda Point Express '; space; newLine; newLine;
		
		nextPutAll: '# Primera Ronda ' ; newLine; newLine; 
		
		nextPutAll: '--'; space; nextPutAll: primerGanadorDeCupo ; newLine;
		nextPutAll: '1° tanda:' ; space; nextPutAll: primeraTandaPointEnPrimeraRondaDePeliculaA ; newLine;
		nextPutAll: '2° tanda:' ; space; nextPutAll: segundaTandaPointEnPrimeraRondaDePeliculaA ; newLine;
		nextPutAll: 'Repechaje:' ; space; nextPutAll: repechajeTandaPointEnPrimeraRondaDePeliculaA ; newLine; newLine;
		
		nextPutAll: '--'; space; nextPutAll: segundoGanadorDeCupo ; newLine;
		nextPutAll: '1° tanda:' ; space; nextPutAll: primeraTandaPointEnPrimeraRondaDePeliculaB ; newLine;
		nextPutAll: '2° tanda:' ; space; nextPutAll: segundaTandaPointEnPrimeraRondaDePeliculaB ; newLine;
		nextPutAll: 'Repechaje:' ; space; nextPutAll: repechajeTandaPointEnPrimeraRondaDePeliculaB ; newLine; newLine;
		
		nextPutAll: '--'; space; nextPutAll: tercerGanadorDeCupo ; newLine;
		nextPutAll: '1° tanda:' ; space; nextPutAll: primeraTandaPointEnPrimeraRondaDePeliculaC ; newLine;
		nextPutAll: '2° tanda:' ; space; nextPutAll: segundaTandaPointEnPrimeraRondaDePeliculaC ; newLine;
		nextPutAll: 'Repechaje:' ; space; nextPutAll: repechajeTandaPointEnPrimeraRondaDePeliculaC ; newLine; newLine;
		
		nextPutAll: '--'; space; nextPutAll: cuartoGanadorDeCupo ; newLine;
		nextPutAll: '1° tanda:' ; space; nextPutAll: primeraTandaPointEnPrimeraRondaDePeliculaD ; newLine;
		nextPutAll: '2° tanda:' ; space; nextPutAll: segundaTandaPointEnPrimeraRondaDePeliculaD ; newLine;
		nextPutAll: 'Repechaje:' ; space; nextPutAll: repechajeTandaPointEnPrimeraRondaDePeliculaD ; newLine; newLine;
		
		nextPutAll: '# Ronda Revancha ' ; newLine; newLine;
		
		nextPutAll: '--'; space; nextPutAll: primerGanadorDeCupo ; newLine;
		nextPutAll: '1° tanda:' ; space; nextPutAll: primeraTandaPointEnRondaRevanchaDePeliculaA ; newLine;
		nextPutAll: '2° tanda:' ; space; nextPutAll: segundaTandaPointEnRondaRevanchaDePeliculaA ; newLine;
		nextPutAll: 'Repechaje:' ; space; nextPutAll: repechajeTandaPointEnRondaRevanchaDePeliculaA ; newLine; newLine;
		
		nextPutAll: '--'; space; nextPutAll: segundoGanadorDeCupo ; newLine;
		nextPutAll: '1° tanda:' ; space; nextPutAll: primeraTandaPointEnRondaRevanchaDePeliculaB ; newLine;
		nextPutAll: '2° tanda:' ; space; nextPutAll: segundaTandaPointEnRondaRevanchaDePeliculaB ; newLine;
		nextPutAll: 'Repechaje:' ; space; nextPutAll: repechajeTandaPointEnRondaRevanchaDePeliculaB ; newLine; newLine;
		
		nextPutAll: '--'; space; nextPutAll: tercerGanadorDeCupo ; newLine;
		nextPutAll: '1° tanda:' ; space; nextPutAll: primeraTandaPointEnRondaRevanchaDePeliculaC ; newLine;
		nextPutAll: '2° tanda:' ; space; nextPutAll: segundaTandaPointEnRondaRevanchaDePeliculaC ; newLine;
		nextPutAll: 'Repechaje:' ; space; nextPutAll: repechajeTandaPointEnRondaRevanchaDePeliculaC ; newLine; newLine;
		
		nextPutAll: '--'; space; nextPutAll: cuartoGanadorDeCupo ; newLine;
		nextPutAll: '1° tanda:' ; space; nextPutAll: primeraTandaPointEnRondaRevanchaDePeliculaD ; newLine;
		nextPutAll: '2° tanda:' ; space; nextPutAll: segundaTandaPointEnRondaRevanchaDePeliculaD ; newLine;
		nextPutAll: 'Repechaje:' ; space; nextPutAll: repechajeTandaPointEnRondaRevanchaDePeliculaD ; newLine; newLine;
		
		nextPutAll: '# Ranking ' ; newLine; newLine;
		
		nextPutAll: '-- Ganador Bonus Comodin -> ' ; space; nextPutAll: ganadorBonusComodin ; space ; nextPutAll: '=' ; space; nextPutAll: puntajeDeGanadorBonusComodin; space; nextPutAll: 'Puntos'; newLine;
		nextPutAll: '-- Ganador Bonus Promocion ->' ; space; nextPutAll: ganadorBonusPromocion ; space ; nextPutAll: '=' ; space; nextPutAll: puntajeDeGanadorBonusPromocion ; space; nextPutAll: 'Puntos'; newLine;
		nextPutAll: '-- Ganador Bonus Invitacion ->' ; space; nextPutAll: ganadorBonusInvitacion ; space ; nextPutAll: '=' ; space; nextPutAll: puntajeDeGanadorBonusInvitacion ; space; nextPutAll: 'Puntos'; newLine;
		nextPutAll: '-- Last Pelicula ->' ; space; nextPutAll: lastPelicula ; space ; nextPutAll: '=' ; space; nextPutAll: puntajeDeLastPelicula ; space; nextPutAll: 'Puntos'; newLine.
		
		
		
		
! !

!FinalTicketCineWarStageGroup methodsFor: 'associating' stamp: 'MB 3/13/2019 16:44:34'!
puntajeDePelicula: nombreDeLaPelicula en: unRegistro 
	
	^ unRegistro puntajeStageGroupFinalDe: nombreDeLaPelicula ! !

!FinalTicketPlayOff methodsFor: 'associating' stamp: 'MB 3/7/2019 22:52:14'!
asociarPrimeraPeliculaDelTicket: unaPelicula 
	
	primeraPeliculaDelTicket _ unaPelicula ! !

!FinalTicketPlayOff methodsFor: 'associating' stamp: 'MB 3/7/2019 22:52:14'!
asociarSegundaPeliculaDelTicket: unaPelicula 
	
	segundaPeliculaDelTicket _ unaPelicula ! !

!FinalTicketPlayOff methodsFor: 'associating' stamp: 'MB 3/7/2019 22:52:15'!
asociarTandaPointBlackPlayDePrimeraPeliculaEnTicket: unaListaDePuntos 
	
	tandaPointBlackPlayOffDePrimeraPelicula _ unaListaDePuntos ! !

!FinalTicketPlayOff methodsFor: 'associating' stamp: 'MB 3/7/2019 22:52:15'!
asociarTandaPointBlackPlayDeSegundaPeliculaEnTicket: unaListaDePuntos 
	
	tandaPointBlackPlayOffDeSegundaPelicula _ unaListaDePuntos ! !

!FinalTicketPlayOff methodsFor: 'associating' stamp: 'MB 3/7/2019 22:52:15'!
asociarTandaPointPlayOffDePrimeraPeliculaEnTicket: unaListaDePuntos 
	
	tandaPointPlayOffDePrimeraPelicula _ unaListaDePuntos ! !

!FinalTicketPlayOff methodsFor: 'associating' stamp: 'MB 3/7/2019 22:52:15'!
asociarTandaPointPlayOffDeSegundaPeliculaEnTicket: unaListaDePuntos 
	
	tandaPointPlayOffDeSegundaPelicula _ unaListaDePuntos ! !

!FinalTicketPlayOff methodsFor: 'associating' stamp: 'MB 3/7/2019 22:52:16'!
asociarTituloDeTicket: tituloDeSubTicket de: nombreDeLaInstancia 
	
	| titulo |
	
	titulo _ tituloDeSubTicket append: ' de '.
	
	
	tituloTicket  _  titulo append: nombreDeLaInstancia ! !

!FinalTicketPlayOff methodsFor: 'accessing' stamp: 'MB 3/7/2019 22:52:16'!
primeraPeliculaDelTicket
	^primeraPeliculaDelTicket! !

!FinalTicketPlayOff methodsFor: 'printing' stamp: 'MB 3/7/2019 22:52:18'!
printOn: unStream

	unStream
		nextPutAll:'-----------------------------------'; space ; newLine; space: 75 ; newLine;
		nextPutAll:'*';space; nextPutAll: self tituloTicket; newLine ; space: 16 ; newLine;
		nextPutAll:'-- Pelicula A = '; space; nextPutAll: self primeraPeliculaDelTicket; newLine ; space: 40; newLine;
		nextPutAll:'-- Tanda PlayOff ='; space; nextPutAll: self tandaPointPlayOffDePrimeraPelicula; newLine ; 
		nextPutAll:'-- Tanda BlackPlayOff ='; space; nextPutAll: self tandaPointBlackPlayOffDePrimeraPelicula; newLine ; newLine;
		nextPutAll:'-- Pelicula B ='; space; nextPutAll: self segundaPeliculaDelTicket; newLine ; newLine;
		nextPutAll:'-- Tanda PlayOff ='; space; nextPutAll:  self tandaPointPlayOffDeSegundaPelicula; newLine ;
		nextPutAll:'-- Tanda BlackPlayOff ='; space; nextPutAll: self tandaPointBlackPlayOffDeSegundaPelicula; newLine.


! !

!FinalTicketPlayOff methodsFor: 'accessing' stamp: 'MB 3/7/2019 22:52:16'!
segundaPeliculaDelTicket

	^segundaPeliculaDelTicket! !

!FinalTicketPlayOff methodsFor: 'accessing' stamp: 'MB 3/7/2019 22:52:16'!
tandaPointBlackPlayOffDePrimeraPelicula
	^tandaPointBlackPlayOffDePrimeraPelicula! !

!FinalTicketPlayOff methodsFor: 'accessing' stamp: 'MB 3/7/2019 22:52:17'!
tandaPointBlackPlayOffDeSegundaPelicula
	^tandaPointBlackPlayOffDeSegundaPelicula! !

!FinalTicketPlayOff methodsFor: 'accessing' stamp: 'MB 3/7/2019 22:52:17'!
tandaPointPlayOffDePrimeraPelicula
	^tandaPointPlayOffDePrimeraPelicula! !

!FinalTicketPlayOff methodsFor: 'accessing' stamp: 'MB 3/7/2019 22:52:17'!
tandaPointPlayOffDeSegundaPelicula
	^tandaPointPlayOffDeSegundaPelicula! !

!FinalTicketPlayOff methodsFor: 'accessing' stamp: 'MB 3/7/2019 22:52:17'!
tituloTicket

	^ tituloTicket ! !

!Impresora methodsFor: 'printer' stamp: 'MB 3/4/2019 23:48:41'!
escribirTicketEnHojaDeImpresion: unTicket 
	
	unTicket printOn: hojaDeImpresion ! !

!Impresora methodsFor: 'printer' stamp: 'MB 4/10/2020 02:03:04'!
imprimiTicketCineWar: unFinalTicketCineWar
	| ticketEnEspera |
	ticketEnEspera _ OrderedCollection new.
	ticketEnEspera add: unFinalTicketCineWar.
	'TicketsCineWar.txt' asFileEntry appendStreamDo: [ :stream |
		ticketEnEspera do: [ :identikit |
			identikit printOn: stream.
			stream newLine ]].
	ticketEnEspera removeAll.! !

!Impresora methodsFor: 'printer' stamp: 'MB 4/10/2020 01:42:36'!
imprimirTicketCineWar: unTicketProcesado
	self prepararHojaDeImpresion.
	self escribirTicketEnHojaDeImpresion: unTicketProcesado.
	self imprimiTicketCineWar: unTicketProcesado.! !

!Impresora methodsFor: 'printer' stamp: 'MB 4/10/2020 01:43:44'!
imprimirTicketPlayOff: unFinalTicket
	self escribirTicketEnHojaDeImpresion: unFinalTicket.
	self realizarImpresionDelTicketCineWar: unFinalTicket.! !

!Impresora methodsFor: 'associating' stamp: 'MB 3/4/2019 23:45:03'!
prepararHojaDeImpresion
	
	hojaDeImpresion _ ReadWriteStream on: ''.! !

!Impresora methodsFor: 'printer' stamp: 'MB 4/10/2020 01:43:42'!
realizarImpresionDelTicketCineWar: unTicket
	| ticketEnEspera |
	ticketEnEspera _ OrderedCollection new.
	ticketEnEspera add: unTicket.
	'TicketsPlayOff.txt' asFileEntry appendStreamDo: [ :stream |
		ticketEnEspera do: [ :identikit |
			identikit printOn: stream.
			stream newLine ]].
	ticketEnEspera removeAll.! !

!League methodsFor: 'league' stamp: 'MB 12/18/2018 23:49:03'!
agregarCategoria: unaCategoria
	
	categorias add: unaCategoria ! !

!League methodsFor: 'private - league' stamp: 'MB 4/2/2019 00:09:39'!
borrarPeliculaDeCupoRepechaje: unaPelicula 
	
	| categoriaDeLaPelicula categoriaBuscada |
	
	categoriaDeLaPelicula _ unaPelicula genero .
	
	categoriaBuscada _ self buscarCategoriaPertenecienteGenero: categoriaDeLaPelicula .
	
	categoriaBuscada borrarPelicula: unaPelicula ! !

!League methodsFor: 'private - league' stamp: 'MB 3/24/2019 16:00:42'!
buscarCategoria: unIdCategoria 

	^ categorias detect: [:unaCategoriaDeLaLista | unaCategoriaDeLaLista idCategoria = unIdCategoria ]! !

!League methodsFor: 'private - league' stamp: 'MB 3/23/2019 23:38:23'!
buscarCategoriaConGenero: unGenero 
	
	^ categorias detect: [:unaCategoria | unaCategoria tieneGenero: unGenero ]! !

!League methodsFor: 'private - league' stamp: 'MB 3/24/2019 00:57:10'!
buscarCategoriaConNombre: unNombreDeCategoria 
	
	^ categorias detect: [:unaCategoriaDeLaCollection | unaCategoriaDeLaCollection nombreDeCategoria  = unNombreDeCategoria ]! !

!League methodsFor: 'private - league' stamp: 'MB 3/24/2019 15:43:21'!
buscarCategoriaPertenecienteGenero: unGenero 
	
	^ (self estadoDeCategoria: unGenero ) buscarCategoria: unGenero en: self! !

!League methodsFor: 'accessing' stamp: 'MB 7/26/2019 19:12:41'!
categoriaAlternativo
	
	^categoriaAlternativo! !

!League methodsFor: 'accessing' stamp: 'MB 7/26/2019 18:24:18'!
categoriaEntretenimiento
	
	^categoriaEntretenimiento! !

!League methodsFor: 'accessing' stamp: 'MB 7/26/2019 18:24:29'!
categoriaHorror
	
	^categoriaHorror! !

!League methodsFor: 'accessing' stamp: 'MB 7/26/2019 18:24:05'!
categoriaTension
	
	^categoriaTension! !

!League methodsFor: 'accessing' stamp: 'MB 11/2/2018 22:27:10'!
categorias
	^ categorias.! !

!League methodsFor: 'accessing' stamp: 'MB 12/26/2018 17:54:09'!
cupoOne
	^cupoOne! !

!League methodsFor: 'private - league' stamp: 'MB 4/13/2019 22:48:31'!
cupoRepechaje
	
	| categoriaTension categoriaEntretenimiento categoriaHorror peliculasCategoriaTension peliculasCategoriaEntretenimiento peliculasCategoriaHorror listasDePeliculas |
	
	categoriaTension _ self buscarCategoria: 'Tension'.
	
	categoriaEntretenimiento _ self buscarCategoria: 'Entretenimiento'.
	
	categoriaHorror _ self buscarCategoria: 'Horror'.
	
	listasDePeliculas _ OrderedCollection new.
	
	peliculasCategoriaTension _ categoriaTension peliculas.
	
	peliculasCategoriaEntretenimiento _ categoriaEntretenimiento peliculas.
	
	peliculasCategoriaHorror _ categoriaHorror peliculas.
	
	listasDePeliculas
		addAll: peliculasCategoriaTension;
		addAll: peliculasCategoriaEntretenimiento;
		addAll: peliculasCategoriaHorror.
		
	spinOff unaPeliculaEntre: listasDePeliculas.! !

!League methodsFor: 'accessing' stamp: 'MB 12/26/2018 17:35:41'!
cupoSecond
	^cupoSecond! !

!League methodsFor: 'private - league' stamp: 'MB 3/24/2019 16:15:28'!
cupoSuperiores
	| CupoOne CupoSecond CupoThird |
	CupoOne _ self buscarCategoria: 'Tension'.
	CupoSecond _ self buscarCategoria: 'Entretenimiento'.
	CupoThird _ self buscarCategoriaConNombre: 'Horror'.
	^ {CupoOne. CupoSecond. CupoThird}.! !

!League methodsFor: 'accessing' stamp: 'MB 12/26/2018 22:54:41'!
cupoThird
	^cupoThird! !

!League methodsFor: 'private - league' stamp: 'MB 3/26/2019 23:13:33'!
desocuparPeliculaEnCategoria: unaPelicula 
	
	| categoriaDeLaPelicula |
	
	categoriaDeLaPelicula _ self buscarCategoriaPertenecienteGenero: unaPelicula genero.
	
	categoriaDeLaPelicula borrarPelicula: unaPelicula ! !

!League methodsFor: 'private - league' stamp: 'MB 3/23/2019 23:16:52'!
estadoDeCategoria: unGenero 
	
	^ AnalizadorDeCategoria unEstadoCategoriaDe: unGenero para: self! !

!League methodsFor: 'private testing - league' stamp: 'MB 3/23/2019 23:28:57'!
existeGeneroEnCategorias: unGenero 
	
	^ categorias anySatisfy: [:unaCategoria | unaCategoria tieneGenero: unGenero ]! !

!League methodsFor: 'league' stamp: 'MB 4/1/2019 14:47:57'!
ganadorDeCategoria: unaCategoria
	
	unaCategoria mejorPelicula: self.
	
	unaCategoria borrarPelicula: self ganadorSpinOff.! !

!League methodsFor: 'private - league' stamp: 'MB 4/2/2019 00:26:20'!
ganadorDelCupoOne
	
	^ cupoOne ganadorCupoOne.
	! !

!League methodsFor: 'private - league' stamp: 'MB 4/2/2019 00:27:18'!
ganadorDelCupoSecond
	
	^ cupoSecond ganadorCupoSecond.
	! !

!League methodsFor: 'private - league' stamp: 'MB 4/2/2019 00:28:50'!
ganadorDelCupoThird
	
	 ^ cupoThird ganadorCupoThird.
	! !

!League methodsFor: 'private - league' stamp: 'MB 4/2/2019 00:29:28'!
ganadorDelLastCupo
	
	^  lastCupo ganadorLastCupo.! !

!League methodsFor: 'accessing' stamp: 'MB 3/30/2019 01:06:47'!
ganadorSpinOff
	^ ganadorSpinOff.! !

!League methodsFor: 'initialization' stamp: 'MB 7/26/2019 18:11:49'!
initialize
	
	categorias _ OrderedCollection new.
	
	categoriaTension _ Tension new.
	categoriaAlternativo _ Alternativo new.
	categoriaEntretenimiento _ Entretenimiento new.
	categoriaHorror _ Horror new.
	
	 self
		agregarCategoria: categoriaTension;
		agregarCategoria: categoriaHorror;
		agregarCategoria: categoriaEntretenimiento;
		agregarCategoria: categoriaAlternativo.
	
	cupoOne _ CupoOne new.
	
	cupoSecond _ CupoSecond new.
	
	cupoThird _ CupoThird new.
	
	lastCupo _ LastCupo new.
	
	spinOff _ SpinOff new.
	
	
	
	! !

!League methodsFor: 'accessing' stamp: 'MB 12/26/2018 17:51:51'!
lastCupo
	^lastCupo! !

!League methodsFor: 'private testing - league' stamp: 'MB 3/24/2019 16:16:52'!
lastRangoTienePeliculas
	| lastRango |
	lastRango _ self buscarCategoria: 'Alternativo'.
	
	^ lastRango tienePeliculas.! !

!League methodsFor: 'private - league' stamp: 'MB 3/24/2019 16:21:11'!
mejorPeliculaDeCupoOne
	| categoriaBuscada ganadorPelicula  |
	
	categoriaBuscada _ self buscarCategoria: 'Tension'.
	
	ganadorPelicula _ cupoOne ganadorCupoDe: categoriaBuscada para: self.
	 
	cupoOne ganadorDelCupo: ganadorPelicula.
	! !

!League methodsFor: 'private - league' stamp: 'MB 3/24/2019 16:22:08'!
mejorPeliculaDeCupoSecond
	| categoriaBuscada ganadorPelicula  |
	
	categoriaBuscada _ self buscarCategoria: 'Entretenimiento'.
	
	ganadorPelicula _ cupoSecond
		ganadorCupoDe: categoriaBuscada
		para: self.
		
	 cupoSecond ganadorDelCupo: ganadorPelicula.! !

!League methodsFor: 'private - league' stamp: 'MB 3/24/2019 16:56:41'!
mejorPeliculaDeCupoThird

	| categoriaBuscada ganadorPelicula  |
	
	categoriaBuscada _ self buscarCategoria: 'Horror'.
	
	ganadorPelicula _ cupoThird
		ganadorCupoDe: categoriaBuscada
		para: self.
		
	cupoThird ganadorDelCupo: ganadorPelicula.! !

!League methodsFor: 'private - league' stamp: 'MB 3/24/2019 16:23:50'!
mejorPeliculaDeLastCupo
	| categoriaBuscada ganadorPelicula |
	
	categoriaBuscada _ self buscarCategoriaConNombre: 'Alternativo'.
	
	ganadorPelicula _ lastCupo
		ganadorCupoDe: categoriaBuscada
		para: self.
		
	lastCupo ganadorDelCupo: ganadorPelicula.! !

!League methodsFor: 'testing - league' stamp: 'MB 7/26/2019 23:43:08'!
noCumpleConLaCantidadMinimaDePeliculasInscriptasNiConLasPeliculasReservadas
	| cantidadDePeliculas |
	cantidadDePeliculas _ categorias sum: [ :unaCategoria |
		unaCategoria peliculas size ].
	^ cantidadDePeliculas < 12.! !

!League methodsFor: 'private testing - league' stamp: 'MB 3/26/2019 21:45:47'!
noExisteGeneroEnCategorias: unGenero 
	
	^ (categorias anySatisfy: [:unaCategoria | unaCategoria tieneGenero: unGenero ]) not! !

!League methodsFor: 'testing - league' stamp: 'MB 11/2/2018 22:23:36'!
noTieneCategorias
	^ categorias isEmpty.! !

!League methodsFor: 'private - league' stamp: 'MB 3/30/2019 01:06:10'!
registrarGanadorEnSpinOff: unaPelicula
	ganadorSpinOff _ unaPelicula.! !

!League methodsFor: 'private - league' stamp: 'MB 3/30/2019 01:06:48'!
registrarMejorPeliculaDeCategoria: unaCategoria
	unaCategoria mejorPelicula: self.
	unaCategoria borrarPelicula: self ganadorSpinOff.! !

!League methodsFor: 'private - league' stamp: 'MB 4/10/2020 01:40:53'!
registrarPeliculasOutsideStageGroupEnTicket: unTicketCineWar
	| peliculasEnCategoriaSuspenso peliculasEnCategoriaAccion peliculasEnCategoriaDrama peliculasEnCategoriaTerror |
	peliculasEnCategoriaSuspenso _ (self buscarCategoria: 'Tension') peliculas.
	peliculasEnCategoriaAccion _ (self buscarCategoriaConNombre: 'Entretenimiento') peliculas.
	peliculasEnCategoriaDrama _ (self buscarCategoriaConNombre: 'Horror') peliculas.
	peliculasEnCategoriaTerror _ (self buscarCategoriaConNombre: 'Alternativo') peliculas.
	unTicketCineWar agregarPeliculasOutsideStageGroup: peliculasEnCategoriaSuspenso.
	unTicketCineWar agregarPeliculasOutsideStageGroup: peliculasEnCategoriaDrama.
	unTicketCineWar agregarPeliculasOutsideStageGroup: peliculasEnCategoriaAccion.
	unTicketCineWar agregarPeliculasOutsideStageGroup: peliculasEnCategoriaTerror.! !

!League methodsFor: 'private - league' stamp: 'MB 12/18/2018 23:50:36'!
retornarCategoria: unaCategoria 
	
	^ categorias detect: [:unaCategoriaDeLaColeccion | unaCategoriaDeLaColeccion = unaCategoria ]! !

!League methodsFor: 'accessing' stamp: 'MB 3/24/2019 18:13:40'!
spinOff
	
	^spinOff! !

!League methodsFor: 'private testing - league' stamp: 'MB 4/1/2019 23:52:18'!
tieneLaCategoriaSinPeliculas: unaCategoria 
	
	| categoriaBuscada |
	
	categoriaBuscada _ categorias detect: [:unaCategoriaDeLaLista | unaCategoriaDeLaLista = unaCategoria ].
	
	^ categoriaBuscada peliculas isEmpty! !

!League methodsFor: 'testing - league' stamp: 'MB 3/24/2019 00:23:49'!
tienePeliculasEnCategoria: unaCategoria 
	
	| categoriaBuscada |
	
	categoriaBuscada _ categorias detect: [:unaCategoriaDeLaLista | unaCategoriaDeLaLista = unaCategoria ].
	
	^ categoriaBuscada peliculas notEmpty! !

!League methodsFor: 'testing - league' stamp: 'MB 3/30/2019 01:06:10'!
tieneUnGanador
	^ ganadorSpinOff notNil.! !

!League methodsFor: 'private testing - league' stamp: 'MB 12/26/2018 17:50:08'!
tieneUnGanadorDeLastRango
	^ lastCupo ganadorLastCupo notNil.! !

!League methodsFor: 'private testing - league' stamp: 'MB 12/26/2018 17:28:39'!
tieneUnGanadorDeRangoOne
	^ cupoOne ganadorCupoOne notNil .! !

!League methodsFor: 'private testing - league' stamp: 'MB 12/26/2018 17:36:49'!
tieneUnGanadorDeRangoSecond
	
	^ cupoSecond ganadorCupoSecond notNil.! !

!League methodsFor: 'private testing - league' stamp: 'MB 12/26/2018 22:55:24'!
tieneUnGanadorRangoThird
	^ cupoThird ganadorCupoThird notNil.! !

!League methodsFor: 'private testing - league' stamp: 'MB 3/24/2019 16:16:13'!
ultimoRangoDeCategoriaSinPeliculas
	| ultimoRango ultimoRangoSinPeliculas rangosSuperioresConAlMenosUnaPelicula |
	
	ultimoRango _ self buscarCategoria: 'Alternativo'.
	
	rangosSuperioresConAlMenosUnaPelicula _ self cupoSuperiores anySatisfy: [ :unaCategoria |
		unaCategoria tienePeliculas ].
	
	ultimoRangoSinPeliculas _ ultimoRango noTienePeliculasRegistradas.
	
	^ ultimoRangoSinPeliculas & rangosSuperioresConAlMenosUnaPelicula.! !

!MvM methodsFor: 'private - mvm' stamp: 'MB 8/12/2019 19:09:01'!
asignarDataVersusMvM: unSubTicketPlayOff
	self subclassResponsibility.! !

!MvM methodsFor: 'private associating - mvm' stamp: 'MB 8/12/2019 19:09:37'!
coronarGanadorMvM: unaPelicula
	self subclassResponsibility.! !

!MvM methodsFor: 'private associating - mvm' stamp: 'MB 8/12/2019 19:10:00'!
coronarPerdedorMvM: unaPelicula
	self subclassResponsibility.! !

!MvM methodsFor: 'private - mvm' stamp: 'MB 8/12/2019 19:10:29'!
definirCasoEmpateMvM: peliculaA vs: peliculaB
	self subclassResponsibility.! !

!MvM methodsFor: 'private - mvm' stamp: 'MB 8/12/2019 23:47:52'!
definirGanadorMvMEntre: peliculaA vs: peliculaB
	(self
		estadoActualDeMvM: peliculaA
		vs: peliculaB)
		definirGanadorIntroMvM: peliculaA
		vs: peliculaB
		en: self.! !

!MvM methodsFor: 'private testing - mvm' stamp: 'MB 8/12/2019 19:12:00'!
empateMvM: peliculaA vs: peliculaB
	| ppA ppB |
	ppA _ global puntajeDe: peliculaA.
	ppB _ global puntajeDe: peliculaB.
	^ ppA = ppB.! !

!MvM methodsFor: 'private - mvm' stamp: 'MB 8/13/2019 00:16:08'!
estadoActualDeMvM: peliculaA vs: peliculaB
	^ DetectorGanadorMvM
		unEstadoDeMvM: peliculaA
		vs: peliculaB
		en: self.! !

!MvM methodsFor: 'private testing - mvm' stamp: 'MB 8/12/2019 19:12:38'!
ganoElMvMLaPeliculaA: peliculaA vs: peliculaB
	| ppA ppB |
	ppA _ global puntajeDe: peliculaA.
	ppB _ global puntajeDe: peliculaB.
	^ ppA > ppB.! !

!MvM methodsFor: 'private testing - mvm' stamp: 'MB 8/12/2019 19:12:57'!
ganoElMvMLaPeliculaB: peliculaA vs: peliculaB
	| ppA ppB |
	ppA _ global puntajeDe: peliculaA.
	ppB _ global puntajeDe: peliculaB.
	^ ppB > ppA.! !

!MvM methodsFor: 'accessing' stamp: 'MB 12/13/2018 14:53:46'!
global
	^global! !

!MvM methodsFor: 'accessing' stamp: 'MB 8/12/2019 19:16:26'!
idMvM
	^ idMvM.! !

!MvM methodsFor: 'associating' stamp: 'MB 8/12/2019 21:43:52'!
idMvM: unIdMvM
	idMvM _ unIdMvM.! !

!MvM methodsFor: 'initialization' stamp: 'MB 8/12/2019 22:46:09'!
initialize
	global _ Registro new.
	point _ PointExpress new.
	playOff _ PlayOff new.
	ticket _ PreTicketMvM new.
	preTicketPreFinalMvM _ PreTicketPlayOff new.
	preTicketFinalMvM _ PreTicketPlayOff new.
	procesador _ Procesador new.! !

!MvM methodsFor: 'mvm' stamp: 'MB 8/12/2019 19:16:00'!
mvmEntre: peliculaA vs: peliculaB enTicket: unTicketColiseum
	self
		realizarPrimeraRondaMvM: peliculaA
		vs: peliculaB
		enTicket: unTicketColiseum.
	self
		realizarRevanchaMvM: peliculaA
		vs: peliculaB
		enTicket: unTicketColiseum.
	self
		definirGanadorMvMEntre: peliculaA
		vs: peliculaB.
	self transcribirTicketMvM: unTicketColiseum.! !

!MvM methodsFor: 'private - mvm' stamp: 'MB 3/21/2019 21:19:45'!
puntajeFinal: unaPelicula 
	
	^ global  baseDeDatos at: unaPelicula nombre! !

!MvM methodsFor: 'private - mvm' stamp: 'MB 8/12/2019 19:15:09'!
realizarPrimeraRondaMvM: peliculaA vs: peliculaB enTicket: unTicketColiseum
	self subclassResponsibility.! !

!MvM methodsFor: 'private - mvm' stamp: 'MB 8/12/2019 19:15:37'!
realizarRevanchaMvM: peliculaA vs: peliculaB enTicket: unTicketColiseum
	self subclassResponsibility.! !

!MvM methodsFor: 'accessing' stamp: 'MB 1/12/2019 23:25:08'!
ticket
	^ticket! !

!MvM methodsFor: 'private - mvm' stamp: 'MB 8/12/2019 19:15:59'!
transcribirTicketMvM: unTicketColiseum
	self subclassResponsibility.! !

!MvM class methodsFor: 'instance creation' stamp: 'MB 12/28/2018 00:34:48'!
crearInstancia
	
	^ self new! !

!MvM class methodsFor: 'instance creation' stamp: 'MB 8/12/2019 21:42:21'!
idMvM: unIdMvM
	^ self crearInstancia idMvM: unIdMvM.! !

!EndMvM methodsFor: 'private - MvM' stamp: 'MB 8/12/2019 19:16:56'!
asignarDataVersusMvM: unSubTicketPlayOff
	preTicketFinalMvM agregarSubTicket: unSubTicketPlayOff.! !

!EndMvM methodsFor: 'associating' stamp: 'MB 8/17/2019 14:27:28'!
asignarFinalistaA: unaPelicula
	endMvmFinalistaA _ unaPelicula.! !

!EndMvM methodsFor: 'associating' stamp: 'MB 8/17/2019 14:27:49'!
asignarFinalistaB: unaPelicula
	endMvmFinalistaB _ unaPelicula.! !

!EndMvM methodsFor: 'private associating - end MvM' stamp: 'MB 8/17/2019 14:25:43'!
coronarGanadorMvM: unaPelicula
	ganadorEndMvM _ unaPelicula.! !

!EndMvM methodsFor: 'private associating - end MvM' stamp: 'MB 8/17/2019 14:28:04'!
coronarPerdedorMvM: unaPelicula
	perdedorEndMvM _ unaPelicula.! !

!EndMvM methodsFor: 'definition - endMvM' stamp: 'MB 8/17/2019 14:16:37'!
definirCasoEmpateEndMvM: peliculaA vs: peliculaB
	playOff
		versusFinalMvM: peliculaA
		vs: peliculaB.
	playOff emitirDataFinalMvMPara: self.
	self coronarGanadorMvM: playOff ganadorPlayOff.
	self coronarPerdedorMvM: playOff perdedorPlayOff.! !

!EndMvM methodsFor: 'private - endMvM' stamp: 'MB 8/12/2019 19:10:28'!
definirCasoEmpateMvM: peliculaA vs: peliculaB
	playOff
		versus: peliculaA
		vs: peliculaB.
	self coronarGanadorMvM: playOff ganadorPlayOff.
	self coronarPerdedorMvM: playOff perdedorPlayOff.! !

!EndMvM methodsFor: 'definition - endMvM' stamp: 'MB 8/17/2019 15:18:02'!
definirGanadorEndMvMEntre: peliculaA vs: peliculaB
	(self
		estadoActualDeMvM: peliculaA
		vs: peliculaB)
		definirGanadorEndMvM: peliculaA
		vs: peliculaB
		en: self.! !

!EndMvM methodsFor: 'accessing' stamp: 'MB 8/17/2019 14:27:49'!
endMvMFinalistaB
	^ endMvmFinalistaB.! !

!EndMvM methodsFor: 'endMvM' stamp: 'MB 8/17/2019 14:19:06'!
endMvmEntre: peliculaA vs: peliculaB enTicket: unTicketColiseum
	self
		realizarPrimeraRondaMvM: peliculaA
		vs: peliculaB
		enTicket: unTicketColiseum.
	self
		realizarRevanchaMvM: peliculaA
		vs: peliculaB
		enTicket: unTicketColiseum.
	self
		definirGanadorEndMvMEntre: peliculaA
		vs: peliculaB.
	self transcribirTicketMvM: unTicketColiseum.! !

!EndMvM methodsFor: 'accessing' stamp: 'MB 8/17/2019 14:27:28'!
endMvmFinalistaA
	^ endMvmFinalistaA.! !

!EndMvM methodsFor: 'accessing' stamp: 'MB 8/17/2019 14:25:43'!
ganadorEndMvM
	^ ganadorEndMvM.! !

!EndMvM methodsFor: 'testing - endMvM' stamp: 'MB 8/17/2019 14:25:43'!
ganoElEndMvM: unaPelicula
	^ ganadorEndMvM = unaPelicula.! !

!EndMvM methodsFor: 'accessing' stamp: 'MB 8/17/2019 14:28:04'!
perdedorEndMvM
	^ perdedorEndMvM.! !

!EndMvM methodsFor: 'accessing' stamp: 'MB 8/17/2019 14:22:05'!
preTicketEndMvM
	^ preTicketFinalMvM.! !

!EndMvM methodsFor: 'private - MvM' stamp: 'MB 8/17/2019 15:32:08'!
realizarPrimeraRondaMvM: peliculaA vs: peliculaB enTicket: unTicketColiseum
	point
		definirPrimeraRondaDeEndMvMPara: peliculaA
		enRegistro: global
		enTicket: unTicketColiseum.
	point
		definirPrimeraRondaIIDeEndMvMPara: peliculaB
		enRegistro: global
		enTicket: unTicketColiseum.! !

!EndMvM methodsFor: 'private - endMvM' stamp: 'MB 8/17/2019 15:33:45'!
realizarRevanchaMvM: peliculaA vs: peliculaB enTicket: unTicketColiseum
	point
		definirRondaRevanchaDeEndMvMPara: peliculaA
		enRegistro: global
		enTicket: unTicketColiseum.
	point
		definirRondaRevanchaIIDeEndMvMPara: peliculaB
		enRegistro: global
		enTicket: unTicketColiseum.! !

!EndMvM methodsFor: 'testing - endMvM' stamp: 'MB 8/17/2019 14:27:49'!
tienePeliculasFinalistas
	^ endMvmFinalistaA notNil & endMvmFinalistaB notNil.! !

!EndMvM methodsFor: 'testing - endMvM' stamp: 'MB 8/17/2019 14:25:43'!
tieneUnGanadorEndMvM
	^ ganadorEndMvM notNil.! !

!EndMvM methodsFor: 'private - MvM' stamp: 'MB 4/7/2020 22:22:33'!
transcribirTicketMvM: unTicketColiseum
	| finalTicketPvP |
	finalTicketPvP _ FinalTicketCineWarMvM new.
	finalTicketPvP asociarPrimeraPelicula: endMvmFinalistaA.
	finalTicketPvP asociarSegundaPelicula: endMvmFinalistaB.
	finalTicketPvP asociarTituloEndMvM: idMvM.
	procesador
		asociarPrimeraRondaPointExpressEnEndMvM: finalTicketPvP
		deTicket: unTicketColiseum.
	procesador
		asociarRondaRevanchaPointExpresEnEndMvM: finalTicketPvP
		deTicket: unTicketColiseum.
	procesador
		asociarPuntajesFinales: global
		en: finalTicketPvP.
	procesador mandarAImprimirTicket: finalTicketPvP.! !

!IntroMvM methodsFor: 'associating' stamp: 'MB 12/12/2018 21:41:44'!
asignarGanadorDeUnComodin: unaPelicula 
	
	ganadorComodin _ unaPelicula ! !

!IntroMvM methodsFor: 'associating' stamp: 'MB 12/12/2018 23:33:49'!
asignarGanadorDeUnPromocion: unaPelicula 
	
	ganadorPromocion _ unaPelicula ! !

!IntroMvM methodsFor: 'private associating - introMvM' stamp: 'MB 8/12/2019 19:21:08'!
coronarGanadorMvM: unaPelicula
	ganadorIntroMvM _ unaPelicula.! !

!IntroMvM methodsFor: 'private associating - introMvM' stamp: 'MB 8/12/2019 19:21:28'!
coronarPerdedorMvM: unaPelicula
	perdedorIntroMvM _ unaPelicula.! !

!IntroMvM methodsFor: 'private - introMvM' stamp: 'MB 8/12/2019 19:10:28'!
definirCasoEmpateMvM: peliculaA vs: peliculaB
	self coronarGanadorMvM: self ganadorComodin.
	self coronarPerdedorMvM: self ganadorPromocion.! !

!IntroMvM methodsFor: 'accessing' stamp: 'MB 12/12/2018 23:43:01'!
ganadorComodin
	^ganadorComodin! !

!IntroMvM methodsFor: 'accessing' stamp: 'MB 8/12/2019 19:21:08'!
ganadorIntroMvM
	^ ganadorIntroMvM.! !

!IntroMvM methodsFor: 'accessing' stamp: 'MB 12/12/2018 23:44:28'!
ganadorPromocion
	^ganadorPromocion! !

!IntroMvM methodsFor: 'testing - IntroMvM' stamp: 'MB 8/12/2019 19:21:08'!
ganoIntroMvM: unaPelicula
	^ ganadorIntroMvM = unaPelicula.! !

!IntroMvM methodsFor: 'introMvM' stamp: 'MB 8/13/2019 00:09:43'!
realizarPrimeraRondaMvM: peliculaA vs: peliculaB enTicket: unTicketColiseum
	point
		definirPrimeraRondaDeIntroMvMPara: peliculaA
		enRegistro: global
		enTicket: unTicketColiseum.
	point
		definirPrimeraRondaIIDeIntroMvMPara: peliculaB
		enRegistro: global
		enTicket: unTicketColiseum.! !

!IntroMvM methodsFor: 'introMvM' stamp: 'MB 8/13/2019 00:12:00'!
realizarRevanchaMvM: peliculaA vs: peliculaB enTicket: unTicketColiseum
	point
		definirRondaRevanchaDeIntroMvMPara: peliculaA
		enRegistro: global
		enTicket: unTicketColiseum.
	point
		definirRondaRevanchaIIDeIntroMvMPara: peliculaB
		enRegistro: global
		enTicket: unTicketColiseum.! !

!IntroMvM methodsFor: 'testing - IntroMvM' stamp: 'MB 12/12/2018 21:42:54'!
tieneUnGanadorDeComodin
	
	^ ganadorComodin notNil! !

!IntroMvM methodsFor: 'testing - IntroMvM' stamp: 'MB 12/12/2018 23:34:37'!
tieneUnGanadorDePromocion
	
	^ ganadorPromocion notNil! !

!IntroMvM methodsFor: 'private - introMvM' stamp: 'MB 4/7/2020 22:22:34'!
transcribirTicketMvM: unTicketColiseum
	| finalTicketPvP |
	finalTicketPvP _ FinalTicketCineWarMvM new.
	finalTicketPvP asociarPrimeraPelicula: ganadorComodin.
	finalTicketPvP asociarSegundaPelicula: ganadorPromocion.
	finalTicketPvP asociarTituloIntroMvM: idMvM.
	procesador
		asociarPrimeraRondaPointExpressEnIntroMvM: finalTicketPvP
		deTicket: unTicketColiseum.
	procesador
		asociarRondaRevanchaPointExpresEnIntroMvM: finalTicketPvP
		deTicket: unTicketColiseum.
	procesador
		asociarPuntajesFinales: global
		en: finalTicketPvP.
	procesador mandarAImprimirTicket: finalTicketPvP.! !

!PreEndMvM methodsFor: 'private - preEndMvM' stamp: 'MB 8/12/2019 19:17:14'!
asignarDataVersusMvM: unSubTicketPlayOff
	preTicketPreFinalMvM agregarSubTicket: unSubTicketPlayOff.! !

!PreEndMvM methodsFor: 'associating' stamp: 'MB 8/12/2019 19:27:18'!
asignarGanadorIntroMvMA: unaPelicula
	ganadorIntroMvMA _ unaPelicula.! !

!PreEndMvM methodsFor: 'associating' stamp: 'MB 8/12/2019 20:27:25'!
asignarGanadorIntroMvMB: unaPelicula
	ganadorIntroMvMB _ unaPelicula.! !

!PreEndMvM methodsFor: 'private associating - preEndMvM' stamp: 'MB 8/18/2019 00:28:25'!
coronarGanadorMvM: unaPelicula
	ganadorPreEndMvM _ unaPelicula.! !

!PreEndMvM methodsFor: 'private associating - preEndMvM' stamp: 'MB 8/18/2019 00:28:40'!
coronarPerdedorMvM: unaPelicula
	perdedorPreEndMvM _ unaPelicula.! !

!PreEndMvM methodsFor: 'private - preEndMvM' stamp: 'MB 8/12/2019 19:10:29'!
definirCasoEmpateMvM: peliculaA vs: peliculaB
	playOff
		versus: peliculaA
		vs: peliculaB.
	self coronarGanadorMvM: playOff ganadorPlayOff.
	self coronarPerdedorMvM: playOff perdedorPlayOff.! !

!PreEndMvM methodsFor: 'definition - preEndMvM' stamp: 'MB 8/12/2019 21:58:50'!
definirCasoEmpatePreFinalMvM: peliculaA vs: peliculaB
	playOff
		versusPreFinalMvM: peliculaA
		vs: peliculaB.
	playOff emitirDataPreFinalMvMPara: self.
	self coronarGanadorMvM: playOff ganadorPlayOff.
	self coronarPerdedorMvM: playOff perdedorPlayOff.! !

!PreEndMvM methodsFor: 'definition - preEndMvM' stamp: 'MB 8/17/2019 15:18:19'!
definirGanadorPreFinalMvM: peliculaA vs: peliculaB
	(self
		estadoActualDeMvM: peliculaA
		vs: peliculaB)
		definirGanadorPreEndMvM: peliculaA
		vs: peliculaB
		en: self.! !

!PreEndMvM methodsFor: 'accessing' stamp: 'MB 8/12/2019 19:27:18'!
ganadorIntroMvMA
	^ ganadorIntroMvMA.! !

!PreEndMvM methodsFor: 'accessing' stamp: 'MB 8/12/2019 19:27:32'!
ganadorIntroMvMB
	^ ganadorIntroMvMB.! !

!PreEndMvM methodsFor: 'accessing' stamp: 'MB 8/18/2019 00:28:25'!
ganadorPreEndMvM
	^ ganadorPreEndMvM.! !

!PreEndMvM methodsFor: 'testing - preEndMvM' stamp: 'MB 8/18/2019 00:28:25'!
ganoPreEndMvM: unaPelicula
	^ ganadorPreEndMvM = unaPelicula.! !

!PreEndMvM methodsFor: 'preEndMvM' stamp: 'MB 8/18/2019 00:12:03'!
preEndMvMEntre: peliculaA vs: peliculaB enTicket: unTicketColiseum
	self
		realizarPrimeraRondaMvM: peliculaA
		vs: peliculaB
		enTicket: unTicketColiseum.
	self
		realizarRevanchaMvM: peliculaA
		vs: peliculaB
		enTicket: unTicketColiseum.
	self
		definirGanadorPreFinalMvM: peliculaA
		vs: peliculaB.
	self transcribirTicketMvM: unTicketColiseum.! !

!PreEndMvM methodsFor: 'accessing' stamp: 'MB 8/17/2019 15:40:18'!
preTicketPreEndMvM
	^ preTicketPreFinalMvM.! !

!PreEndMvM methodsFor: 'private - preEndMvM' stamp: 'MB 8/17/2019 15:32:33'!
realizarPrimeraRondaMvM: peliculaA vs: peliculaB enTicket: unTicketColiseum
	point
		definirPrimeraRondaDePreEndMvMPara: peliculaA
		enRegistro: global
		enTicket: unTicketColiseum.
	point
		definirPrimeraRondaIIDePreEndMvMPara: peliculaB
		enRegistro: global
		enTicket: unTicketColiseum.! !

!PreEndMvM methodsFor: 'private - preEndMvM' stamp: 'MB 8/17/2019 15:35:47'!
realizarRevanchaMvM: peliculaA vs: peliculaB enTicket: unTicketColiseum
	point
		definirRondaRevanchaDePreEndMvMPara: peliculaA
		enRegistro: global
		enTicket: unTicketColiseum.
	point
		definirRondaRevanchaIIDePreEndMvMPara: peliculaB
		enRegistro: global
		enTicket: unTicketColiseum.! !

!PreEndMvM methodsFor: 'testing - preEndMvM' stamp: 'MB 8/12/2019 19:27:18'!
tieneUnGanadorIntroMvMA
	^ ganadorIntroMvMA notNil.! !

!PreEndMvM methodsFor: 'testing - preEndMvM' stamp: 'MB 8/12/2019 19:27:32'!
tieneUnGanadorIntroMvMB
	^ ganadorIntroMvMB notNil.! !

!PreEndMvM methodsFor: 'private - preEndMvM' stamp: 'MB 4/7/2020 22:22:34'!
transcribirTicketMvM: unTicketColiseum
	| finalTicketPvP |
	finalTicketPvP _ FinalTicketCineWarMvM new.
	finalTicketPvP asociarPrimeraPelicula: ganadorIntroMvMA.
	finalTicketPvP asociarSegundaPelicula: ganadorIntroMvMB.
	finalTicketPvP asociarTituloPreEndMvM: idMvM.
	procesador
		asociarPrimeraRondaPointExpressEnPreEndMvM: finalTicketPvP
		deTicket: unTicketColiseum.
	procesador
		asociarRondaRevanchaPointExpresEnPreEndMvM: finalTicketPvP
		deTicket: unTicketColiseum.
	procesador
		asociarPuntajesFinales: global
		en: finalTicketPvP.
	procesador mandarAImprimirTicket: finalTicketPvP.! !

!OnFire methodsFor: 'onfire' stamp: 'MB 4/13/2020 21:54:57'!
definirOnFire: unaListaDePeliculasEnZonaRoja en: unaListaDePeliculasEnZonaSegura
	
	| nuevaZona peliculaEliminada unFiltro unaCondicion |
	
	nuevaZona _ unaListaDePeliculasEnZonaRoja.
	
	peliculaEliminada _ unaListaDePeliculasEnZonaRoja atRandom.
	
	nuevaZona remove: peliculaEliminada.
	
	unaCondicion _ [ :unaPeliculaDeLaColeccion | self noEsPeliculaRepetida: unaPeliculaDeLaColeccion en: unaListaDePeliculasEnZonaSegura ].
	
	unFiltro _ Filter filteredCondition: unaCondicion.
	
	nuevaZona do: [ :unaPelicula | unFiltro toAdd: unaPelicula at: unaListaDePeliculasEnZonaSegura ].
	
	nuevaZona removeAll.! !

!OnFire methodsFor: 'onfire' stamp: 'MB 12/19/2018 17:09:11'!
noEsPeliculaRepetida: unaPelicula en: unaListaDePeliculas 
	
	^ (unaListaDePeliculas anySatisfy: [:unaPeliculaDeLaColeccion | unaPeliculaDeLaColeccion estaRepetida: unaPelicula]) not! !

!OnFire class methodsFor: 'instance creation' stamp: 'MB 11/13/2018 22:38:47'!
crearinstancia
	
	^ self new! !

!OnFire class methodsFor: 'onfire' stamp: 'MB 3/22/2019 23:19:02'!
definirOnFire: unaListaDePeliculasEnZonaRoja en: unaListaDePeliculasEnZonaSegura
	^ self crearinstancia
		definirOnFire: unaListaDePeliculasEnZonaRoja
		en: unaListaDePeliculasEnZonaSegura.! !

!Pelicula methodsFor: 'private - pelicula' stamp: 'MB 11/13/2018 21:07:12'!
estaRepetida: unaPelicula 
	
	^ self = unaPelicula ! !

!Pelicula methodsFor: 'accessing' stamp: 'MB 3/23/2019 21:09:15'!
genero
	^ genero.! !

!Pelicula methodsFor: 'accessing' stamp: 'MB 10/6/2018 20:33:49'!
nombre
	^nombre! !

!Pelicula methodsFor: 'associating' stamp: 'MB 3/23/2019 21:08:51'!
nombre: unNombre genero: unaCategoria
	nombre _ unNombre.
	genero _ unaCategoria.! !

!Pelicula methodsFor: 'printing' stamp: 'MB 10/24/2018 19:36:05'!
printOn: aStream

	aStream nextPutAll: self nombre! !

!Pelicula class methodsFor: 'instance creation' stamp: 'MB 10/6/2018 20:32:12'!
crearInstancia
	
	^ self new! !

!Pelicula class methodsFor: 'pelicula' stamp: 'MB 11/14/2018 21:32:42'!
nombre
	
	^ self crearInstancia nombre! !

!Pelicula class methodsFor: 'instance creation' stamp: 'MB 3/23/2019 21:08:52'!
nombre: unNombre genero: unaCategoria
	^ self crearInstancia
		nombre: unNombre
		genero: unaCategoria.! !

!PlayOff methodsFor: 'accessing' stamp: 'MB 12/7/2018 19:44:50'!
blackPlayOff
	^ unBlackPlayOff.! !

!PlayOff methodsFor: 'accessing' stamp: 'MB 10/21/2018 20:33:54'!
cuartoPunto
	^cuartoPunto! !

!PlayOff methodsFor: 'definition - playoff' stamp: 'MB 12/7/2018 19:44:25'!
definirBlackPlayOff: peliculaA vs: peliculaB
	^ unBlackPlayOff
		definirBlackPlayOff: peliculaA
		vs: peliculaB
		en: self.! !

!PlayOff methodsFor: 'definition - playoff' stamp: 'MB 8/17/2019 14:37:57'!
definirBlackPlayOffDeFinalMvM: peliculaA vs: peliculaB
	^ unBlackPlayOff
		definirBlackPlayOffEndMvM: peliculaA
		vs: peliculaB
		en: self.! !

!PlayOff methodsFor: 'definition - playoff' stamp: 'MB 1/31/2019 00:20:50'!
definirBlackPlayOffDePrimerVersusDeCuatripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB 
	
	^ unBlackPlayOff definirBlackPlayOffPrimerVersusDeCuatripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: self.! !

!PlayOff methodsFor: 'definition - playoff' stamp: 'MB 1/30/2019 23:35:07'!
definirBlackPlayOffDePrimerVersusDeTripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB 
	
	^ unBlackPlayOff definirBlackPlayOffPrimerVersusDeTripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: self.! !

!PlayOff methodsFor: 'definition - playoff' stamp: 'MB 2/3/2019 00:10:10'!
definirBlackPlayOffDePrimerVersusDeTripleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB 
	
	^ unBlackPlayOff definirBlackPlayOffPrimerVersusDeTripleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB en: self.! !

!PlayOff methodsFor: 'definition - playoff' stamp: 'MB 1/31/2019 00:42:33'!
definirBlackPlayOffDeSegundoVersusDeCuatripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB 
	
	^ unBlackPlayOff definirBlackPlayOffSegundoVersusDeCuatripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: self.! !

!PlayOff methodsFor: 'definition - playoff' stamp: 'MB 2/3/2019 15:04:55'!
definirBlackPlayOffDeSegundoVersusDeTripleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB 

	^ unBlackPlayOff definirBlackPlayOffSegundoVersusDeTripleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB en: self.! !

!PlayOff methodsFor: 'definition - playoff' stamp: 'MB 1/31/2019 00:55:14'!
definirBlackPlayOffDeTercerVersusDeCuatripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB 
	
	^ unBlackPlayOff definirBlackPlayOffTercerVersusDeCuatripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: self.! !

!PlayOff methodsFor: 'definition - playoff' stamp: 'MB 8/17/2019 14:38:50'!
definirBlackPlayOffPreFinalMvMA: peliculaA vs: peliculaB
	^ unBlackPlayOff
		definirBlackPlayOffPreEndMvMA: peliculaA
		vs: peliculaB
		en: self.! !

!PlayOff methodsFor: 'definition - playoff' stamp: 'MB 1/30/2019 23:55:03'!
definirBlackPlayOffSegundoVersusDeTripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB 
	
	^ unBlackPlayOff definirBlackPlayOffSegundoVersusDeTripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: self.! !

!PlayOff methodsFor: 'definition - playoff' stamp: 'MB 1/29/2019 22:54:16'!
definirBlackPlayOffUnicoStageGroupBonusComodin: peliculaA vs: peliculaB 
	
	 ^ unBlackPlayOff definirUnicoBlackPlayOffStageGroupBonusComodin: peliculaA vs: peliculaB en: self.! !

!PlayOff methodsFor: 'definition - playoff' stamp: 'MB 3/2/2019 22:58:42'!
definirBlackPlayOffVersusUnicoStageGroupBonusInvitacion: peliculaA vs: peliculaB 
	
	^ unBlackPlayOff definirBlackPlayOffUnicoVersusDeStageGroupBonusInvitacion: peliculaA vs: peliculaB en: self.! !

!PlayOff methodsFor: 'definition - playoff' stamp: 'MB 8/12/2019 21:51:25'!
definirDueloPlayOffFinalMvM: peliculaA vs: peliculaB
	self
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: primerPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: segundoPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: tercerPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: cuartoPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: quintoPunto.
	self
		registrarDueloDePlayOffFinalAEnSubTicket: peliculaA
		vs: peliculaB.
	self
		registrarPuntajeTotal: peliculaA;
		registrarPuntajeTotal: peliculaB.! !

!PlayOff methodsFor: 'definition - playoff' stamp: 'MB 8/12/2019 21:51:55'!
definirDueloPlayOffPreFinalMvM: peliculaA vs: peliculaB
	self
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: primerPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: segundoPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: tercerPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: cuartoPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: quintoPunto.
	self
		registrarDueloDePlayOffPreFinalEnSubTicket: peliculaA
		vs: peliculaB.
	self
		registrarPuntajeTotal: peliculaA;
		registrarPuntajeTotal: peliculaB.! !

!PlayOff methodsFor: 'definition - playoff' stamp: 'MB 12/11/2018 21:03:39'!
definirGanadorPlayOff: peliculaA vs: peliculaB
	
	^ DetectorGanadorPlayOff ganadorEntre: peliculaA vs: peliculaB en: self.! !

!PlayOff methodsFor: 'definition - playoff' stamp: 'MB 1/23/2019 23:45:23'!
definirPrimerDueloDeCuatripleEmpatePlayOffStageGroupBonusComodin: peliculaA vs: peliculaB 
	
	self
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: primerPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: segundoPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: tercerPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: cuartoPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: quintoPunto.
	self
		registrarPrimerDueloDeCuatripleEmpatePlayOffParaStageGroupBonusComodinEnSubTicket: peliculaA
		vs: peliculaB.
		
	self
		registrarPuntajeTotal: peliculaA;
		registrarPuntajeTotal: peliculaB.! !

!PlayOff methodsFor: 'definition - playoff' stamp: 'MB 1/23/2019 16:30:47'!
definirPrimerDueloDeTripleEmpatePlayOffStageGroupBonusComodin: peliculaA vs: peliculaB
	self
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: primerPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: segundoPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: tercerPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: cuartoPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: quintoPunto.
	self
		registrarPrimerDueloDeTripleEmpatePlayOffParaStageGroupBonusComodinEnSubTicket: peliculaA
		vs: peliculaB.
	self
		registrarPuntajeTotal: peliculaA;
		registrarPuntajeTotal: peliculaB.! !

!PlayOff methodsFor: 'definition - playoff' stamp: 'MB 1/24/2019 15:54:18'!
definirPrimerDueloDeTripleEmpatePlayOffStageGroupBonusPromocion: peliculaA vs: peliculaB 
	
	self
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: primerPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: segundoPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: tercerPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: cuartoPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: quintoPunto.
	self
		registrarPrimerDueloDeTripleEmpatePlayOffParaStageGroupBonusPromocionEnSubTicket: peliculaA
		vs: peliculaB.
		
	self
		registrarPuntajeTotal: peliculaA;
		registrarPuntajeTotal: peliculaB.! !

!PlayOff methodsFor: 'definition - playoff' stamp: 'MB 1/12/2019 22:37:55'!
definirPuntoNegativoPlayOff: unaPelicula enRonda: unaRonda 
	
	| puntajeNegativo |
	
	puntajeNegativo _ X conIdSimbolo: 'X'.
	
	unaRonda at: unaPelicula nombre put: puntajeNegativo.! !

!PlayOff methodsFor: 'definition - playoff' stamp: 'MB 1/17/2019 23:27:28'!
definirPuntoPlayOff: peliculaA vs: peliculaB paraPunto: unaInstanciaPunto
	
	DefinidorDePuntosPlayOff
		
			unPuntajeParaPlayOff: peliculaA
			enPunto: unaInstanciaPunto;
		
			unPuntajeParaPlayOff: peliculaB
			enPunto: unaInstanciaPunto.! !

!PlayOff methodsFor: 'definition - playoff' stamp: 'MB 1/12/2019 22:37:27'!
definirPuntoPositivoPlayOff: unaPelicula enRonda: unaRonda
	| puntajePositivo |
	puntajePositivo _ O conIdSimbolo: 'O'.
	
	unaRonda
		at: unaPelicula nombre
		put: puntajePositivo.! !

!PlayOff methodsFor: 'definition - playoff' stamp: 'MB 1/18/2019 22:24:51'!
definirRondaPlayOff: peliculaA vs: peliculaB
	
	self
		    definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: primerPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: segundoPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: tercerPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: cuartoPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: quintoPunto.
	
	self guardarEnResutadosEnSubTicket: peliculaA vs: peliculaB.
			
	self
		registrarPuntajeTotal: peliculaA;
		registrarPuntajeTotal: peliculaB.! !

!PlayOff methodsFor: 'definition - playoff' stamp: 'MB 8/12/2019 21:52:48'!
definirRondaPlayOffPreFinalMvM: peliculaA vs: peliculaB
	self
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: primerPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: segundoPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: tercerPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: cuartoPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: quintoPunto.
	self
		registrarUnicoDueloDePlayOffPreFinalAEnSubTicket: peliculaA
		vs: peliculaB.
	self
		registrarPuntajeTotal: peliculaA;
		registrarPuntajeTotal: peliculaB.! !

!PlayOff methodsFor: 'definition - playoff' stamp: 'MB 1/23/2019 23:57:21'!
definirSegundoDueloDeCuatripleEmpatePlayOffStageGroupBonusComodin: peliculaA vs: peliculaB 
	
	self
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: primerPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: segundoPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: tercerPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: cuartoPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: quintoPunto.
	self
		registrarSegundoDueloDeCuatripleEmpatePlayOffParaStageGroupBonusComodinEnSubTicket: peliculaA
		vs: peliculaB.
		
	self
		registrarPuntajeTotal: peliculaA;
		registrarPuntajeTotal: peliculaB.! !

!PlayOff methodsFor: 'definition - playoff' stamp: 'MB 1/23/2019 16:29:35'!
definirSegundoDueloDeTripleEmpatePlayOffStageGroupBonusComodin: peliculaA vs: peliculaB 
	
	self
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: primerPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: segundoPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: tercerPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: cuartoPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: quintoPunto.
	self
		registrarSegundoDueloDeTripleEmpatePlayOffParaStageGroupBonusComodinEnSubTicket: peliculaA
		vs: peliculaB.
		
	self
		registrarPuntajeTotal: peliculaA;
		registrarPuntajeTotal: peliculaB.! !

!PlayOff methodsFor: 'definition - playoff' stamp: 'MB 1/24/2019 16:01:37'!
definirSegundoDueloDeTripleEmpatePlayOffStageGroupBonusPromocion: peliculaA vs: peliculaB 
	
	self
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: primerPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: segundoPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: tercerPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: cuartoPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: quintoPunto.
	self
		registrarSegundoDueloDeTripleEmpatePlayOffParaStageGroupBonusPromocionEnSubTicket: peliculaA
		vs: peliculaB.
		
	self
		registrarPuntajeTotal: peliculaA;
		registrarPuntajeTotal: peliculaB.! !

!PlayOff methodsFor: 'definition - playoff' stamp: 'MB 1/24/2019 00:07:13'!
definirTercerDueloDeCuatripleEmpatePlayOffStageGroupBonusComodin: peliculaA vs: peliculaB 
	
	self
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: primerPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: segundoPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: tercerPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: cuartoPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: quintoPunto.
	self
		registrarTercerDueloDeCuatripleEmpatePlayOffParaStageGroupBonusComodinEnSubTicket: peliculaA
		vs: peliculaB.
		
	self
		registrarPuntajeTotal: peliculaA;
		registrarPuntajeTotal: peliculaB.! !

!PlayOff methodsFor: 'definition - playoff' stamp: 'MB 2/2/2019 23:34:05'!
definirUnicoBlackPlayOffStageGroupBonusPromocion: peliculaA vs: peliculaB 
	
	^ unBlackPlayOff definirUnicoBlackPlayOffParaStageGroupBonusPromocion: peliculaA vs: peliculaB en: self.! !

!PlayOff methodsFor: 'definition - playoff' stamp: 'MB 1/24/2019 00:25:47'!
definirUnicoDueloPlayOffStageGroupBonusComodin: peliculaA vs: peliculaB
	self
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: primerPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: segundoPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: tercerPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: cuartoPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: quintoPunto.
	self
		registrarUnicoDueloDePlayOffParaStageGroupBonusComodinEnSubTicket: peliculaA
		vs: peliculaB.
	self
		registrarPuntajeTotal: peliculaA;
		registrarPuntajeTotal: peliculaB.! !

!PlayOff methodsFor: 'definition - playoff' stamp: 'MB 1/24/2019 16:17:26'!
definirUnicoDueloPlayOffStageGroupBonusInvitacion: peliculaA vs: peliculaB 
	
	self
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: primerPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: segundoPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: tercerPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: cuartoPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: quintoPunto.
	self
		registrarUnicoDueloDePlayOffParaStageGroupBonusInvitacionEnSubTicket: peliculaA
		vs: peliculaB.
		
	self
		registrarPuntajeTotal: peliculaA;
		registrarPuntajeTotal: peliculaB.! !

!PlayOff methodsFor: 'definition - playoff' stamp: 'MB 1/24/2019 15:42:26'!
definirUnicoDueloPlayOffStageGroupBonusPromocion: peliculaA vs: peliculaB 
	
	self
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: primerPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: segundoPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: tercerPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: cuartoPunto;
		
			definirPuntoPlayOff: peliculaA
			vs: peliculaB
			paraPunto: quintoPunto.
	self
		registrarUnicoDueloDePlayOffParaStageGroupBonusPromocionEnSubTicket: peliculaA
		vs: peliculaB.
		
	self
		registrarPuntajeTotal: peliculaA;
		registrarPuntajeTotal: peliculaB.! !

!PlayOff methodsFor: 'emit - playoff' stamp: 'MB 8/12/2019 21:59:18'!
emitirDataFinalMvMPara: unFinalMvM
	unFinalMvM asignarDataVersusMvM: subTicketFinalMvM.! !

!PlayOff methodsFor: 'emit - playoff' stamp: 'MB 8/12/2019 22:00:30'!
emitirDataPreFinalMvMPara: unPreFinalMvM
	unPreFinalMvM asignarDataVersusMvM: subTicketPreFinalMvMA.! !

!PlayOff methodsFor: 'emit - playoff' stamp: 'MB 2/7/2019 23:27:09'!
emitirDataPrimerVersusDelCuatripleEmpateDeStageGroupBonusComodinPara: unStageGroup 
	
	unStageGroup asignarDataVersusStageBonusComodin: subTicketPrimerDueloDeCuatripleEmpateDeBonusComodin .! !

!PlayOff methodsFor: 'emit - playoff' stamp: 'MB 2/7/2019 23:21:13'!
emitirDataPrimerVersusDelTripleEmpateDeStageGroupBonusComodinPara: unStageGroup
	unStageGroup asignarDataVersusStageBonusComodin: subTicketPrimerDueloDeTripleEmpateBonusComodin.! !

!PlayOff methodsFor: 'emit - playoff' stamp: 'MB 2/7/2019 23:51:42'!
emitirDataPrimerVersusDelTripleEmpateDeStageGroupBonusPromocionPara: unStageGroup 
	
	unStageGroup asignarDataVersusStageBonusPromocion: subTicketPrimerDueloDeTripleEmpateBonusPromocion .! !

!PlayOff methodsFor: 'emit - playoff' stamp: 'MB 2/7/2019 23:28:13'!
emitirDataSegundoVersusDelCuatripleEmpateDeStageGroupBonusComodinPara: unStageGroup 
	
	unStageGroup asignarDataVersusStageBonusComodin: subTicketSegundoDueloDeCuatripleEmpateDeBonusComodin .! !

!PlayOff methodsFor: 'emit - playoff' stamp: 'MB 2/7/2019 23:21:43'!
emitirDataSegundoVersusDelTripleEmpateDeStageGroupBonusComodinPara: unStageGroup
	unStageGroup asignarDataVersusStageBonusComodin: subTicketSegundoDueloDeTripleEmpateDeBonusComodin.! !

!PlayOff methodsFor: 'emit - playoff' stamp: 'MB 2/7/2019 23:53:22'!
emitirDataSegundoVersusDelTripleEmpateDeStageGroupBonusPromocionPara: unStageGroup 
	
	unStageGroup asignarDataVersusStageBonusPromocion: subTicketSegundoDueloDeTripleEmpateDeBonusPromocion ! !

!PlayOff methodsFor: 'emit - playoff' stamp: 'MB 2/7/2019 23:29:13'!
emitirDataTercerVersusDelTripleEmpateDeStageGroupBonusComodinPara: unStageGroup 
	
	unStageGroup asignarDataVersusStageBonusComodin: subTicketTercerDueloDeCuatripleEmpateDeBonusComodin ! !

!PlayOff methodsFor: 'emit - playoff' stamp: 'MB 2/7/2019 23:17:12'!
emitirDataUnicoVersusStageGroupBonusComodinPara: unStageGroup
	
	unStageGroup asignarDataVersusStageBonusComodin: subTicketDueloUnicoDeBonusComodin.! !

!PlayOff methodsFor: 'emit - playoff' stamp: 'MB 2/7/2019 23:59:47'!
emitirDataUnicoVersusStageGroupBonusInvitacionPara: unStageGroup 
	
	unStageGroup asignarDataVersusStageBonusInvitacion: subTicketDueloUnicoDeBonusInvitacion ! !

!PlayOff methodsFor: 'emit - playoff' stamp: 'MB 2/7/2019 23:40:29'!
emitirDataUnicoVersusStageGroupBonusPromocionPara: unStageGroup 
	
	unStageGroup asignarDataVersusStageBonusPromocion: subTicketDueloUnicoDeBonusPromocion.! !

!PlayOff methodsFor: 'private testing - playoff' stamp: 'MB 12/7/2018 19:45:30'!
estadoEmpatadoBlackPlayOff: peliculaA vs: peliculaB
	| puntosPA puntosPB |
	puntosPA _ registroBlackPlayOff puntajeDe: peliculaA.
	puntosPB _ registroBlackPlayOff puntajeDe: peliculaB.
	^ puntosPA = puntosPB.! !

!PlayOff methodsFor: 'private testing - playoff' stamp: 'MB 12/7/2018 19:45:59'!
estadoGanadorBlackPlayOffPeliculaA: peliculaA vs: peliculaB
	| puntosPA puntosPB |
	puntosPA _ registroBlackPlayOff puntajeDe: peliculaA.
	puntosPB _ registroBlackPlayOff puntajeDe: peliculaB.
	^ puntosPA > puntosPB.! !

!PlayOff methodsFor: 'private testing - playoff' stamp: 'MB 12/7/2018 19:46:18'!
estadoGanadorBlackPlayOffPeliculaB: peliculaA vs: peliculaB
	| puntosPA puntosPB |
	puntosPA _ registroBlackPlayOff puntajeDe: peliculaA.
	puntosPB _ registroBlackPlayOff puntajeDe: peliculaB.
	^ puntosPB > puntosPA.! !

!PlayOff methodsFor: 'accessing' stamp: 'MB 12/7/2018 20:36:27'!
ganadorPlayOff
	^ ganadorPlayOff.! !

!PlayOff methodsFor: 'private testing - playoff' stamp: 'MB 12/7/2018 20:52:50'!
ganoElPlayOff: unaPelicula
	^ ganadorPlayOff = unaPelicula.! !

!PlayOff methodsFor: 'private testing - playoff' stamp: 'MB 12/7/2018 19:47:19'!
ganoPlayOffLaPeliculaA: peliculaA vs: peliculaB
	| puntajeTotalA puntajeTotalB |
	puntajeTotalA _ self puntajeTotalDe: peliculaA.
	puntajeTotalB _ self puntajeTotalDe: peliculaB.
	^ puntajeTotalA > puntajeTotalB.! !

!PlayOff methodsFor: 'private testing - playoff' stamp: 'MB 12/7/2018 19:47:44'!
ganoPlayOffLaPeliculaB: peliculaA vs: peliculaB
	| puntajeTotalA puntajeTotalB |
	puntajeTotalA _ self puntajeTotalDe: peliculaA.
	puntajeTotalB _ self puntajeTotalDe: peliculaB.
	^ puntajeTotalB > puntajeTotalA.! !

!PlayOff methodsFor: 'private - playoff' stamp: 'MB 1/23/2019 16:56:36'!
guardarEnResutadosEnSubTicket: peliculaA vs: peliculaB
	| cuartoPuntoPA cuartoPuntoPB primerPuntoPA primerPuntoPB quintoPuntoPA quintoPuntoPB segundoPuntoPA segundoPuntoPB tercerPuntoPA tercerPuntoPB nombreDePeliculaA nombreDePeliculaB |
	nombreDePeliculaA _ peliculaA nombre.
	nombreDePeliculaB _ peliculaB nombre.
	primerPuntoPA _ primerPunto at: nombreDePeliculaA.
	segundoPuntoPA _ segundoPunto at: nombreDePeliculaA.
	tercerPuntoPA _ tercerPunto at: nombreDePeliculaA.
	cuartoPuntoPA _ cuartoPunto at: nombreDePeliculaA.
	quintoPuntoPA _ quintoPunto at: nombreDePeliculaA.
	primerPuntoPB _ primerPunto at: nombreDePeliculaB.
	segundoPuntoPB _ segundoPunto at: nombreDePeliculaB.
	tercerPuntoPB _ tercerPunto at: nombreDePeliculaB.
	cuartoPuntoPB _ cuartoPunto at: nombreDePeliculaB.
	quintoPuntoPB _ quintoPunto at: nombreDePeliculaB.
	subTicketDueloUnicoDeBonusComodin
		registrarPrimerPuntoDePlayOffEnSubTicket: primerPuntoPA
		de: peliculaA.
	subTicketDueloUnicoDeBonusComodin
		registrarSegundoPuntoDePlayOffEnSubTicket: segundoPuntoPA
		de: peliculaA.
	subTicketDueloUnicoDeBonusComodin
		registrarTercerPuntoDePlayOffEnSubTicket: tercerPuntoPA
		de: peliculaA.
	subTicketDueloUnicoDeBonusComodin
		registrarCuartoPuntoDePlayOffEnSubTicket: cuartoPuntoPA
		de: peliculaA.
	subTicketDueloUnicoDeBonusComodin
		registrarQuintoPuntoDePlayOffEnSubTicket: quintoPuntoPA
		de: peliculaA.
	subTicketPrimerDueloDeTripleEmpateBonusComodin
		registrarPrimerPuntoDePlayOffEnSubTicket: primerPuntoPB
		de: peliculaB.
	subTicketPrimerDueloDeTripleEmpateBonusComodin
		registrarSegundoPuntoDePlayOffEnSubTicket: segundoPuntoPB
		de: peliculaB.
	subTicketPrimerDueloDeTripleEmpateBonusComodin
		registrarTercerPuntoDePlayOffEnSubTicket: tercerPuntoPB
		de: peliculaB.
	subTicketPrimerDueloDeTripleEmpateBonusComodin
		registrarCuartoPuntoDePlayOffEnSubTicket: cuartoPuntoPB
		de: peliculaB.
	subTicketPrimerDueloDeTripleEmpateBonusComodin
		registrarQuintoPuntoDePlayOffEnSubTicket: quintoPuntoPB
		de: peliculaB.! !

!PlayOff methodsFor: 'private - playoff' stamp: 'MB 2/28/2019 22:08:58'!
guardarPuntajeDeBlackPlayOff: unPunto de: unaPelicula
	
	(self tipoDePuntoAlctual: unPunto) registrarPuntajeDeBlackPlayOffde: unaPelicula en: self.! !

!PlayOff methodsFor: 'private - playoff' stamp: 'MB 3/26/2019 20:14:19'!
guardarPuntoParticipanteAEnListaBlackPlalOff: unPuntaje
	listaPuntosBlackPlayOffParticipanteA add: unPuntaje.! !

!PlayOff methodsFor: 'private - playoff' stamp: 'MB 3/26/2019 20:13:53'!
guardarPuntoParticipanteBEnListaBlackPlayOff: unPuntaje
	listaPuntosBlackPlayOffParticipanteB add: unPuntaje.! !

!PlayOff methodsFor: 'testing - playoff' stamp: 'MB 12/11/2018 23:00:00'!
hayPlayOffEmpatadoEntre: peliculaA vs: peliculaB 
	
	| ppA ppB |
	
	ppA _ self puntajeTotalDe: peliculaA .
	
	ppB _ self puntajeTotalDe: peliculaB.
	
	^ (ppA = ppB)! !

!PlayOff methodsFor: 'initialization' stamp: 'MB 8/12/2019 22:46:09'!
initialize
	primerPunto _ Dictionary new.
	segundoPunto _ Dictionary new.
	tercerPunto _ Dictionary new.
	cuartoPunto _ Dictionary new.
	quintoPunto _ Dictionary new.
	total _ Dictionary new.
	registroBlackPlayOff _ Registro new.
	listaPuntosBlackPlayOffParticipanteA _ OrderedCollection new.
	listaPuntosBlackPlayOffParticipanteB _ OrderedCollection new.
	unBlackPlayOff _ BlackPlayOff new.
	ticket _ PreTicketMvM new.
	subTicketDueloUnicoDeBonusComodin _ SubTicketPlayOff dataIntancePlayOff: 'Unico playOff de bonus comodin'.
	subTicketPrimerDueloDeTripleEmpateBonusComodin _ SubTicketPlayOff dataIntancePlayOff: '1er playOff triple empate de bonus comodin'.
	subTicketSegundoDueloDeTripleEmpateDeBonusComodin _ SubTicketPlayOff dataIntancePlayOff: '2do playOff triple empate de bonus comodin'.
	subTicketPrimerDueloDeCuatripleEmpateDeBonusComodin _ SubTicketPlayOff dataIntancePlayOff: '1er playOff cuatriple empate de bonus comodin'.
	subTicketSegundoDueloDeCuatripleEmpateDeBonusComodin _ SubTicketPlayOff dataIntancePlayOff: '2do playOff cuatriple empate de bonus comodin'.
	subTicketTercerDueloDeCuatripleEmpateDeBonusComodin _ SubTicketPlayOff dataIntancePlayOff: '3er playOff cuatriple bonus comodin'.
	subTicketDueloUnicoDeBonusPromocion _ SubTicketPlayOff dataIntancePlayOff: 'Unico playOff de bonus promocion'.
	subTicketPrimerDueloDeTripleEmpateBonusPromocion _ SubTicketPlayOff dataIntancePlayOff: '1er playOff triple empate de bonus promocion'.
	subTicketSegundoDueloDeTripleEmpateDeBonusPromocion _ SubTicketPlayOff dataIntancePlayOff: '2do playOff triple empate de bonus promocion'.
	subTicketDueloUnicoDeBonusInvitacion _ SubTicketPlayOff dataIntancePlayOff: 'Unico playOff de bonus invitacion'.
	subTicketPreFinalMvMA _ SubTicketPlayOff dataIntancePlayOff: 'PlayOff'.
	subTicketPreFinalMvMB _ SubTicketPlayOff dataIntancePlayOff: 'PlayOff'.
	subTicketFinalMvM _ SubTicketPlayOff dataIntancePlayOff: 'PlayOff'.! !

!PlayOff methodsFor: 'accessing' stamp: 'MB 3/1/2019 00:06:27'!
listaDePuntosBlackPlaOffParticipanteB
	
	^ listaPuntosBlackPlayOffParticipanteB ! !

!PlayOff methodsFor: 'accessing' stamp: 'MB 3/1/2019 00:06:09'!
listaDePuntosBlackPlayOffParticipanteA
	
	^ listaPuntosBlackPlayOffParticipanteA ! !

!PlayOff methodsFor: 'accessing' stamp: 'MB 12/13/2018 16:51:45'!
perdedorPlayOff
	^perdedorPlayOff! !

!PlayOff methodsFor: 'accessing' stamp: 'MB 10/21/2018 20:28:10'!
primerPunto
	^primerPunto! !

!PlayOff methodsFor: 'playoff' stamp: 'MB 1/31/2019 00:14:26'!
primerVersusDeCuatripleEmpateDeStageGroupBonusComodin: peliculaA vs: peliculaB 
	
	self definirPrimerDueloDeCuatripleEmpatePlayOffStageGroupBonusComodin: peliculaA vs: peliculaB.
	
	(self definirGanadorPlayOff: peliculaA vs: peliculaB) definirGanadorPrimerVersusCuatripleEmpateDeStageGroupBonusComodin: peliculaA vs: peliculaB en: self! !

!PlayOff methodsFor: 'playoff' stamp: 'MB 1/30/2019 23:27:10'!
primerVersusDeTripleEmpateDeStageGroupBonusComodin: peliculaA vs: peliculaB
	
	self definirPrimerDueloDeTripleEmpatePlayOffStageGroupBonusComodin: peliculaA vs: peliculaB.
	
	(self definirGanadorPlayOff: peliculaA vs: peliculaB) definirGanadorPrimerVersusTripleEmpateDeStageGroupBonusComodin: peliculaA vs: peliculaB en: self.! !

!PlayOff methodsFor: 'playoff' stamp: 'MB 2/2/2019 23:56:06'!
primerVersusDeTripleEmpateDeStageGroupBonusPromocion: peliculaA vs: peliculaB 
	
	self definirPrimerDueloDeTripleEmpatePlayOffStageGroupBonusPromocion: peliculaA vs: peliculaB.
	
	(self definirGanadorPlayOff: peliculaA vs: peliculaB) definirGanadorPrimerVersusTripleEmpateDeStageGroupBonusPromocion: peliculaA vs: peliculaB en: self! !

!PlayOff methodsFor: 'private - playoff' stamp: 'MB 10/21/2018 22:47:50'!
puntajeDeLaPelicula: unNombreDeLaPelicula 
	
	^ total at: unNombreDeLaPelicula ! !

!PlayOff methodsFor: 'private - playoff' stamp: 'MB 10/22/2018 22:37:22'!
puntajeTotalDe: unaPelicula 
	
	| nombreDeLaPelicula |
	
	nombreDeLaPelicula _ unaPelicula nombre.
	
	^ total at: nombreDeLaPelicula ! !

!PlayOff methodsFor: 'private testing - playoff' stamp: 'MB 12/7/2018 19:49:23'!
puntosDePlayOffEmpatado: peliculaA vs: peliculaB
	| puntajeTotalA puntajeTotalB |
	puntajeTotalA _ self puntajeTotalDe: peliculaA.
	puntajeTotalB _ self puntajeTotalDe: peliculaB.
	^ puntajeTotalA = puntajeTotalB.! !

!PlayOff methodsFor: 'accessing' stamp: 'MB 10/21/2018 20:34:45'!
quintoPunto
	^quintoPunto! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 8/12/2019 21:59:18'!
registrarDueloDePlayOffFinalAEnSubTicket: peliculaA vs: peliculaB
	| cuartoPuntoPA cuartoPuntoPB primerPuntoPA primerPuntoPB quintoPuntoPA quintoPuntoPB segundoPuntoPA segundoPuntoPB tercerPuntoPA tercerPuntoPB nombreDePeliculaA nombreDePeliculaB |
	subTicketFinalMvM
		asignarDataPeliculasEnVersus: peliculaA
		vs: peliculaB.
	nombreDePeliculaA _ peliculaA nombre.
	nombreDePeliculaB _ peliculaB nombre.
	primerPuntoPA _ primerPunto at: nombreDePeliculaA.
	segundoPuntoPA _ segundoPunto at: nombreDePeliculaA.
	tercerPuntoPA _ tercerPunto at: nombreDePeliculaA.
	cuartoPuntoPA _ cuartoPunto at: nombreDePeliculaA.
	quintoPuntoPA _ quintoPunto at: nombreDePeliculaA.
	primerPuntoPB _ primerPunto at: nombreDePeliculaB.
	segundoPuntoPB _ segundoPunto at: nombreDePeliculaB.
	tercerPuntoPB _ tercerPunto at: nombreDePeliculaB.
	cuartoPuntoPB _ cuartoPunto at: nombreDePeliculaB.
	quintoPuntoPB _ quintoPunto at: nombreDePeliculaB.
	subTicketFinalMvM
		registrarPrimerPuntoDePlayOffEnSubTicket: primerPuntoPA
		de: peliculaA.
	subTicketFinalMvM
		registrarSegundoPuntoDePlayOffEnSubTicket: segundoPuntoPA
		de: peliculaA.
	subTicketFinalMvM
		registrarTercerPuntoDePlayOffEnSubTicket: tercerPuntoPA
		de: peliculaA.
	subTicketFinalMvM
		registrarCuartoPuntoDePlayOffEnSubTicket: cuartoPuntoPA
		de: peliculaA.
	subTicketFinalMvM
		registrarQuintoPuntoDePlayOffEnSubTicket: quintoPuntoPA
		de: peliculaA.
	subTicketFinalMvM
		registrarPrimerPuntoDePlayOffEnSubTicket: primerPuntoPB
		de: peliculaB.
	subTicketFinalMvM
		registrarSegundoPuntoDePlayOffEnSubTicket: segundoPuntoPB
		de: peliculaB.
	subTicketFinalMvM
		registrarTercerPuntoDePlayOffEnSubTicket: tercerPuntoPB
		de: peliculaB.
	subTicketFinalMvM
		registrarCuartoPuntoDePlayOffEnSubTicket: cuartoPuntoPB
		de: peliculaB.
	subTicketFinalMvM
		registrarQuintoPuntoDePlayOffEnSubTicket: quintoPuntoPB
		de: peliculaB.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 8/12/2019 22:00:30'!
registrarDueloDePlayOffPreFinalEnSubTicket: peliculaA vs: peliculaB
	| cuartoPuntoPA cuartoPuntoPB primerPuntoPA primerPuntoPB quintoPuntoPA quintoPuntoPB segundoPuntoPA segundoPuntoPB tercerPuntoPA tercerPuntoPB nombreDePeliculaA nombreDePeliculaB |
	subTicketPreFinalMvMA
		asignarDataPeliculasEnVersus: peliculaA
		vs: peliculaB.
	nombreDePeliculaA _ peliculaA nombre.
	nombreDePeliculaB _ peliculaB nombre.
	primerPuntoPA _ primerPunto at: nombreDePeliculaA.
	segundoPuntoPA _ segundoPunto at: nombreDePeliculaA.
	tercerPuntoPA _ tercerPunto at: nombreDePeliculaA.
	cuartoPuntoPA _ cuartoPunto at: nombreDePeliculaA.
	quintoPuntoPA _ quintoPunto at: nombreDePeliculaA.
	primerPuntoPB _ primerPunto at: nombreDePeliculaB.
	segundoPuntoPB _ segundoPunto at: nombreDePeliculaB.
	tercerPuntoPB _ tercerPunto at: nombreDePeliculaB.
	cuartoPuntoPB _ cuartoPunto at: nombreDePeliculaB.
	quintoPuntoPB _ quintoPunto at: nombreDePeliculaB.
	subTicketPreFinalMvMA
		registrarPrimerPuntoDePlayOffEnSubTicket: primerPuntoPA
		de: peliculaA.
	subTicketPreFinalMvMA
		registrarSegundoPuntoDePlayOffEnSubTicket: segundoPuntoPA
		de: peliculaA.
	subTicketPreFinalMvMA
		registrarTercerPuntoDePlayOffEnSubTicket: tercerPuntoPA
		de: peliculaA.
	subTicketPreFinalMvMA
		registrarCuartoPuntoDePlayOffEnSubTicket: cuartoPuntoPA
		de: peliculaA.
	subTicketPreFinalMvMA
		registrarQuintoPuntoDePlayOffEnSubTicket: quintoPuntoPA
		de: peliculaA.
	subTicketPreFinalMvMA
		registrarPrimerPuntoDePlayOffEnSubTicket: primerPuntoPB
		de: peliculaB.
	subTicketPreFinalMvMA
		registrarSegundoPuntoDePlayOffEnSubTicket: segundoPuntoPB
		de: peliculaB.
	subTicketPreFinalMvMA
		registrarTercerPuntoDePlayOffEnSubTicket: tercerPuntoPB
		de: peliculaB.
	subTicketPreFinalMvMA
		registrarCuartoPuntoDePlayOffEnSubTicket: cuartoPuntoPB
		de: peliculaB.
	subTicketPreFinalMvMA
		registrarQuintoPuntoDePlayOffEnSubTicket: quintoPuntoPB
		de: peliculaB.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 8/12/2019 21:59:18'!
registrarEnSubTicketPuntoBlackPlayOffDeFinalMvMPeliculaA: unaListaDePuntos de: unaPelicula
	| punto |
	punto _ unaListaDePuntos last.
	subTicketFinalMvM registrarPuntoDeBlackPlayOffPeliculaA: punto.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 8/12/2019 21:59:18'!
registrarEnSubTicketPuntoBlackPlayOffDeFinalMvMPeliculaB: unaListaDePuntos de: unaPelicula
	| punto |
	punto _ unaListaDePuntos last.
	subTicketFinalMvM registrarPuntoDeBlackPlayOffPeliculaB: punto.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 8/12/2019 22:00:30'!
registrarEnSubTicketPuntoBlackPlayOffDePreFinalMvM: unaListaDePuntos de: unaPelicula
	| punto |
	punto _ unaListaDePuntos last.
	subTicketPreFinalMvMA registrarPuntoDeBlackPlayOffPeliculaA: punto.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 1/31/2019 00:25:37'!
registrarEnSubTicketPuntoBlackPlayOffDePrimerVersusDeCuatripleEmpateStageGroupBonusComodinPeliculaA: unaListaDePuntos de: unaPelicula 
	
	| punto |
	
	punto _ unaListaDePuntos last.
	
	subTicketPrimerDueloDeCuatripleEmpateDeBonusComodin registrarPuntoDeBlackPlayOffPeliculaA: punto.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 1/31/2019 00:26:28'!
registrarEnSubTicketPuntoBlackPlayOffDePrimerVersusDeCuatripleEmpateStageGroupBonusComodinPeliculaB: unaListaDePuntos de: unaPelicula 
	
	| punto |
	
	punto _ unaListaDePuntos last.
	
	subTicketPrimerDueloDeCuatripleEmpateDeBonusComodin registrarPuntoDeBlackPlayOffPeliculaB: punto.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 1/30/2019 23:40:22'!
registrarEnSubTicketPuntoBlackPlayOffDePrimerVersusDeTripleEmpateStageGroupBonusComodinPeliculaA: unaListaDePuntos de: unaPelicula 
	
	| punto |
	
	punto _ unaListaDePuntos last.
	
	subTicketPrimerDueloDeTripleEmpateBonusComodin registrarPuntoDeBlackPlayOffPeliculaA: punto.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 1/30/2019 23:41:18'!
registrarEnSubTicketPuntoBlackPlayOffDePrimerVersusDeTripleEmpateStageGroupBonusComodinPeliculaB: unaListaDePuntos de: unaPelicula 
	
	| punto |
	
	punto _ unaListaDePuntos last.
	
	subTicketPrimerDueloDeTripleEmpateBonusComodin registrarPuntoDeBlackPlayOffPeliculaB: punto.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 2/3/2019 00:14:52'!
registrarEnSubTicketPuntoBlackPlayOffDePrimerVersusDeTripleEmpateStageGroupBonusPromocionPeliculaA: unaListaDePuntos de: unaPelicula 

	| punto |
	
	punto _ unaListaDePuntos last.
	
	subTicketPrimerDueloDeTripleEmpateBonusPromocion registrarPuntoDeBlackPlayOffPeliculaA: punto.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 2/3/2019 00:17:36'!
registrarEnSubTicketPuntoBlackPlayOffDePrimerVersusDeTripleEmpateStageGroupBonusPromocionPeliculaB: unaListaDePuntos de: unaPelicula 
	
	| punto |
	
	punto _ unaListaDePuntos last.
	
	subTicketPrimerDueloDeTripleEmpateBonusPromocion registrarPuntoDeBlackPlayOffPeliculaA: punto.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 1/31/2019 00:46:59'!
registrarEnSubTicketPuntoBlackPlayOffDeSegundoVersusDeCuatripleEmpateStageGroupBonusComodinPeliculaA: unaListaDePuntos de: unaPelicula 
	
	| punto |
	
	punto _ unaListaDePuntos last.
	
	subTicketSegundoDueloDeCuatripleEmpateDeBonusComodin registrarPuntoDeBlackPlayOffPeliculaA: punto.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 1/31/2019 00:47:41'!
registrarEnSubTicketPuntoBlackPlayOffDeSegundoVersusDeCuatripleEmpateStageGroupBonusComodinPeliculaB: unaListaDePuntos de: unaPelicula 
	
	| punto |
	
	punto _ unaListaDePuntos last.
	
	subTicketSegundoDueloDeCuatripleEmpateDeBonusComodin registrarPuntoDeBlackPlayOffPeliculaB: punto.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 2/3/2019 15:12:46'!
registrarEnSubTicketPuntoBlackPlayOffDeSegundoVersusDeTripleEmpateStageGroupBonusPromocionPeliculaA: unaListaDePuntos de: unaPelicula 
	
	| punto |
	
	punto _ unaListaDePuntos last.
	
	subTicketSegundoDueloDeTripleEmpateDeBonusPromocion registrarPuntoDeBlackPlayOffPeliculaA: punto.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 2/3/2019 15:15:43'!
registrarEnSubTicketPuntoBlackPlayOffDeSegundoVersusDeTripleEmpateStageGroupBonusPromocionPeliculaB: unaListaDePuntos de: unaPelicula 
	
	| punto |
	
	punto _ unaListaDePuntos last.
	
	subTicketSegundoDueloDeTripleEmpateDeBonusPromocion registrarPuntoDeBlackPlayOffPeliculaB: punto.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 1/31/2019 00:59:01'!
registrarEnSubTicketPuntoBlackPlayOffDeTercerVersusDeCuatripleEmpateStageGroupBonusComodinPeliculaA: unaListaDePuntos de: unaPelicula 
	
	| punto |
	
	punto _ unaListaDePuntos last.
	
	subTicketTercerDueloDeCuatripleEmpateDeBonusComodin registrarPuntoDeBlackPlayOffPeliculaA: punto.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 1/31/2019 01:00:09'!
registrarEnSubTicketPuntoBlackPlayOffDeTercerVersusDeCuatripleEmpateStageGroupBonusComodinPeliculaB: unaListaDePuntos de: unaPelicula 
	
	| punto |
	
	punto _ unaListaDePuntos last.
	
	subTicketTercerDueloDeCuatripleEmpateDeBonusComodin registrarPuntoDeBlackPlayOffPeliculaB: punto.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 2/4/2019 21:51:06'!
registrarEnSubTicketPuntoBlackPlayOffDeUnicoVersusStageGroupBonusComodinPeliculaA: unaListaDePuntos de: unaPelicula
	| punto |
	punto _ unaListaDePuntos last.
	subTicketDueloUnicoDeBonusComodin registrarPuntoDeBlackPlayOffPeliculaA: punto.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 2/4/2019 21:52:43'!
registrarEnSubTicketPuntoBlackPlayOffDeUnicoVersusStageGroupBonusComodinPeliculaB: unaListaDePuntos de: unaPelicula
	| punto |
	punto _ unaListaDePuntos last.
	subTicketDueloUnicoDeBonusComodin registrarPuntoDeBlackPlayOffPeliculaB: punto.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 2/4/2019 22:07:09'!
registrarEnSubTicketPuntoBlackPlayOffDeUnicoVersusStageGroupBonusInvitacionPeliculaA: unaListaDePuntos de: unaPelicula
	| punto |
	punto _ unaListaDePuntos last.
	subTicketDueloUnicoDeBonusInvitacion registrarPuntoDeBlackPlayOffPeliculaA: punto.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 2/4/2019 22:06:40'!
registrarEnSubTicketPuntoBlackPlayOffDeUnicoVersusStageGroupBonusInvitacionPeliculaB: unaListaDePuntos de: unaPelicula
	| punto |
	punto _ unaListaDePuntos last.
	subTicketDueloUnicoDeBonusInvitacion registrarPuntoDeBlackPlayOffPeliculaB: punto.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 2/4/2019 21:54:18'!
registrarEnSubTicketPuntoBlackPlayOffDeUnicoVersusStageGroupBonusPromocionPeliculaA: unaListaDePuntos de: unaPelicula
	| punto |
	punto _ unaListaDePuntos last.
	subTicketDueloUnicoDeBonusPromocion registrarPuntoDeBlackPlayOffPeliculaA: punto.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 2/4/2019 21:55:07'!
registrarEnSubTicketPuntoBlackPlayOffDeUnicoVersusStageGroupBonusPromocionPeliculaB: unaListaDePuntos de: unaPelicula
	| punto |
	punto _ unaListaDePuntos last.
	subTicketPrimerDueloDeTripleEmpateBonusComodin registrarPuntoDeBlackPlayOffPeliculaB: punto.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 1/30/2019 23:58:54'!
registrarEnSubTicketPuntoBlackPlayOffSegundoVersusDeTripleEmpateDeStageGroupBonusComodinPeliculaA: unaListaDePuntos de: unaPelicula 
	
	| punto |
	
	punto _ unaListaDePuntos last.
	
	subTicketSegundoDueloDeTripleEmpateDeBonusComodin registrarPuntoDeBlackPlayOffPeliculaA: punto.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 1/30/2019 23:59:45'!
registrarEnSubTicketPuntoBlackPlayOffSegundoVersusDeTripleEmpateDeStageGroupBonusComodinPeliculaB: unaListaDePuntos de: unaPelicula 
	
	| punto |
	
	punto _ unaListaDePuntos last.
	
	subTicketSegundoDueloDeTripleEmpateDeBonusComodin registrarPuntoDeBlackPlayOffPeliculaB: punto.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 12/7/2018 20:37:04'!
registrarGanadorPlayOff: unaPelicula
	ganadorPlayOff _ unaPelicula.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 3/1/2019 00:08:13'!
registrarListaDePuntosBlackPlayOffDeParticipanteAEnSubticketDeUnicoPlayOffDeStageGroupEnBonusComodin: unaListaDePuntos 
	
	^ subTicketDueloUnicoDeBonusComodin agregarListaDePuntajeBlackPlayOffDePeliculaA: unaListaDePuntos ! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 3/2/2019 17:08:35'!
registrarListaDePuntosBlackPlayOffDeParticipanteAEnSubticketDeUnicoPlayOffDeStageGroupEnBonusPromocion: unaListaDePuntos 
	
	subTicketDueloUnicoDeBonusPromocion agregarListaDePuntajeBlackPlayOffDePeliculaA: unaListaDePuntos ! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 3/1/2019 00:09:38'!
registrarListaDePuntosBlackPlayOffDeParticipanteBEnSubticketDeUnicoPlayOffDeStageGroupEnBonusComodin: unaListaDePuntos 
	
	^ subTicketDueloUnicoDeBonusComodin  agregarListaDePuntajeBlackPlayOffDePeliculaB: unaListaDePuntos ! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 3/2/2019 22:33:27'!
registrarListaDePuntosBlackPlayOffDeParticipanteBEnSubticketDeUnicoPlayOffDeStageGroupEnBonusPromocion: unaListaDePuntos 
	
	subTicketDueloUnicoDeBonusPromocion agregarListaDePuntajeBlackPlayOffDePeliculaB: unaListaDePuntos ! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 8/12/2019 21:59:18'!
registrarListaDePuntosBlackPlayOffDePeliculaAEnSubticketDeFinalPvP: unaListaDePuntos
	subTicketFinalMvM agregarListaDePuntajeBlackPlayOffDePeliculaA: unaListaDePuntos.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 8/12/2019 22:00:30'!
registrarListaDePuntosBlackPlayOffDePeliculaAEnSubticketDePreFinalPvPA: unaListaDePuntos
	subTicketPreFinalMvMA agregarListaDePuntajeBlackPlayOffDePeliculaA: unaListaDePuntos.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 8/12/2019 22:00:07'!
registrarListaDePuntosBlackPlayOffDePeliculaAEnSubticketDePreFinalPvPB: unaListaDePuntos
	subTicketPreFinalMvMB agregarListaDePuntajeBlackPlayOffDePeliculaA: unaListaDePuntos.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 3/1/2019 23:36:21'!
registrarListaDePuntosBlackPlayOffDePeliculaAEnSubticketDePrimerVersusDeCuatripleEmpateDeStageGroupEnBonusComodin: unaListaDePuntos 
	
	subTicketPrimerDueloDeCuatripleEmpateDeBonusComodin agregarListaDePuntajeBlackPlayOffDePeliculaA: unaListaDePuntos ! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 3/1/2019 17:21:27'!
registrarListaDePuntosBlackPlayOffDePeliculaAEnSubticketDePrimerVersusDeTripleEmpateDeStageGroupEnBonusComodin: unaListaDePuntos 
	
	subTicketPrimerDueloDeTripleEmpateBonusComodin agregarListaDePuntajeBlackPlayOffDePeliculaA: unaListaDePuntos ! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 3/2/2019 22:12:59'!
registrarListaDePuntosBlackPlayOffDePeliculaAEnSubticketDePrimerVersusDeTripleEmpateDeStageGroupEnBonusPromocion: unaListaDePuntos 
	
	subTicketPrimerDueloDeTripleEmpateBonusPromocion agregarListaDePuntajeBlackPlayOffDePeliculaA: unaListaDePuntos ! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 3/2/2019 00:17:01'!
registrarListaDePuntosBlackPlayOffDePeliculaAEnSubticketDeSegundoVersusDeCuatripleEmpateDeStageGroupEnBonusComodin: unaListaDePuntos 
	
	subTicketSegundoDueloDeCuatripleEmpateDeBonusComodin agregarListaDePuntajeBlackPlayOffDePeliculaA: unaListaDePuntos ! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 3/1/2019 17:42:22'!
registrarListaDePuntosBlackPlayOffDePeliculaAEnSubticketDeSegundoVersusDeTripleEmpateDeStageGroupEnBonusComodin: unaListaDePuntos 
	
	subTicketSegundoDueloDeTripleEmpateDeBonusComodin agregarListaDePuntajeBlackPlayOffDePeliculaA: unaListaDePuntos ! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 3/2/2019 22:32:06'!
registrarListaDePuntosBlackPlayOffDePeliculaAEnSubticketDeSegundoVersusDeTripleEmpateDeStageGroupEnBonusPromocion: unaListaDePuntos 
	
	subTicketSegundoDueloDeTripleEmpateDeBonusPromocion agregarListaDePuntajeBlackPlayOffDePeliculaA: unaListaDePuntos ! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 3/2/2019 00:50:18'!
registrarListaDePuntosBlackPlayOffDePeliculaAEnSubticketDeTercerVersusDeCuatripleEmpateDeStageGroupEnBonusComodin: unaListaDePuntos 
	
	subTicketTercerDueloDeCuatripleEmpateDeBonusComodin agregarListaDePuntajeBlackPlayOffDePeliculaA: unaListaDePuntos ! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 3/2/2019 23:13:21'!
registrarListaDePuntosBlackPlayOffDePeliculaAEnSubticketDeUnicoVersusDeDobleEmpateDeStageGroupEnBonusInvitacion: unaListaDePuntos 
	
	subTicketDueloUnicoDeBonusInvitacion agregarListaDePuntajeBlackPlayOffDePeliculaA: unaListaDePuntos ! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 8/12/2019 21:59:18'!
registrarListaDePuntosBlackPlayOffDePeliculaBEnSubticketDeFinalPvP: unaListaDePuntos
	subTicketFinalMvM agregarListaDePuntajeBlackPlayOffDePeliculaB: unaListaDePuntos.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 8/12/2019 22:00:30'!
registrarListaDePuntosBlackPlayOffDePeliculaBEnSubticketDePreFinalPvPA: unaListaDePuntos
	subTicketPreFinalMvMA agregarListaDePuntajeBlackPlayOffDePeliculaB: unaListaDePuntos.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 8/12/2019 22:00:07'!
registrarListaDePuntosBlackPlayOffDePeliculaBEnSubticketDePreFinalPvPB: unaListaDePuntos
	subTicketPreFinalMvMB agregarListaDePuntajeBlackPlayOffDePeliculaB: unaListaDePuntos.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 3/1/2019 23:37:32'!
registrarListaDePuntosBlackPlayOffDePeliculaBEnSubticketDePrimerVersusDeCuatripleEmpateDeStageGroupEnBonusComodin: unaListaDePuntos 
	
	subTicketPrimerDueloDeCuatripleEmpateDeBonusComodin agregarListaDePuntajeBlackPlayOffDePeliculaB: unaListaDePuntos ! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 3/1/2019 17:26:04'!
registrarListaDePuntosBlackPlayOffDePeliculaBEnSubticketDePrimerVersusDeTripleEmpateDeStageGroupEnBonusComodin: unaListaDePuntos 
	
	subTicketPrimerDueloDeTripleEmpateBonusComodin agregarListaDePuntajeBlackPlayOffDePeliculaB: unaListaDePuntos ! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 3/2/2019 22:13:32'!
registrarListaDePuntosBlackPlayOffDePeliculaBEnSubticketDePrimerVersusDeTripleEmpateDeStageGroupEnBonusPromocion: unaListaDePuntos 
	
	subTicketPrimerDueloDeTripleEmpateBonusPromocion agregarListaDePuntajeBlackPlayOffDePeliculaB: unaListaDePuntos ! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 3/2/2019 00:18:11'!
registrarListaDePuntosBlackPlayOffDePeliculaBEnSubticketDeSegundoVersusDeCuatripleEmpateDeStageGroupEnBonusComodin: unaListaDePuntos 
	
	subTicketSegundoDueloDeCuatripleEmpateDeBonusComodin agregarListaDePuntajeBlackPlayOffDePeliculaB: unaListaDePuntos ! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 3/1/2019 17:43:29'!
registrarListaDePuntosBlackPlayOffDePeliculaBEnSubticketDeSegundoVersusDeTripleEmpateDeStageGroupEnBonusComodin: unaListaDePuntos 
	
	subTicketSegundoDueloDeTripleEmpateDeBonusComodin agregarListaDePuntajeBlackPlayOffDePeliculaB: unaListaDePuntos ! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 3/2/2019 22:32:47'!
registrarListaDePuntosBlackPlayOffDePeliculaBEnSubticketDeSegundoVersusDeTripleEmpateDeStageGroupEnBonusPromocion: unaListaDePuntos 
	
	subTicketSegundoDueloDeTripleEmpateDeBonusPromocion agregarListaDePuntajeBlackPlayOffDePeliculaB: unaListaDePuntos ! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 3/2/2019 00:50:52'!
registrarListaDePuntosBlackPlayOffDePeliculaBEnSubticketDeTercerVersusDeCuatripleEmpateDeStageGroupEnBonusComodin: unaListaDePuntos 
	
	subTicketTercerDueloDeCuatripleEmpateDeBonusComodin agregarListaDePuntajeBlackPlayOffDePeliculaB: unaListaDePuntos ! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 3/2/2019 23:13:56'!
registrarListaDePuntosBlackPlayOffDePeliculaBEnSubticketDeUnicoVersusDeDobleEmpateDeStageGroupEnBonusInvitacion: unaListaDePuntos 
	
	subTicketDueloUnicoDeBonusInvitacion agregarListaDePuntajeBlackPlayOffDePeliculaB: unaListaDePuntos ! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 12/7/2018 21:27:01'!
registrarPerdedorPlayOff: unaPelicula
	perdedorPlayOff _ unaPelicula.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 8/12/2019 22:00:07'!
registrarPlayOffPreFinalBEnSubTicket: peliculaA vs: peliculaB
	| cuartoPuntoPA cuartoPuntoPB primerPuntoPA primerPuntoPB quintoPuntoPA quintoPuntoPB segundoPuntoPA segundoPuntoPB tercerPuntoPA tercerPuntoPB nombreDePeliculaA nombreDePeliculaB |
	subTicketPreFinalMvMB
		asignarDataPeliculasEnVersus: peliculaA
		vs: peliculaB.
	nombreDePeliculaA _ peliculaA nombre.
	nombreDePeliculaB _ peliculaB nombre.
	primerPuntoPA _ primerPunto at: nombreDePeliculaA.
	segundoPuntoPA _ segundoPunto at: nombreDePeliculaA.
	tercerPuntoPA _ tercerPunto at: nombreDePeliculaA.
	cuartoPuntoPA _ cuartoPunto at: nombreDePeliculaA.
	quintoPuntoPA _ quintoPunto at: nombreDePeliculaA.
	primerPuntoPB _ primerPunto at: nombreDePeliculaB.
	segundoPuntoPB _ segundoPunto at: nombreDePeliculaB.
	tercerPuntoPB _ tercerPunto at: nombreDePeliculaB.
	cuartoPuntoPB _ cuartoPunto at: nombreDePeliculaB.
	quintoPuntoPB _ quintoPunto at: nombreDePeliculaB.
	subTicketPreFinalMvMB
		registrarPrimerPuntoDePlayOffEnSubTicket: primerPuntoPA
		de: peliculaA.
	subTicketPreFinalMvMB
		registrarSegundoPuntoDePlayOffEnSubTicket: segundoPuntoPA
		de: peliculaA.
	subTicketPreFinalMvMB
		registrarTercerPuntoDePlayOffEnSubTicket: tercerPuntoPA
		de: peliculaA.
	subTicketPreFinalMvMB
		registrarCuartoPuntoDePlayOffEnSubTicket: cuartoPuntoPA
		de: peliculaA.
	subTicketPreFinalMvMB
		registrarQuintoPuntoDePlayOffEnSubTicket: quintoPuntoPA
		de: peliculaA.
	subTicketPreFinalMvMB
		registrarPrimerPuntoDePlayOffEnSubTicket: primerPuntoPB
		de: peliculaB.
	subTicketPreFinalMvMB
		registrarSegundoPuntoDePlayOffEnSubTicket: segundoPuntoPB
		de: peliculaB.
	subTicketPreFinalMvMB
		registrarTercerPuntoDePlayOffEnSubTicket: tercerPuntoPB
		de: peliculaB.
	subTicketPreFinalMvMB
		registrarCuartoPuntoDePlayOffEnSubTicket: cuartoPuntoPB
		de: peliculaB.
	subTicketPreFinalMvMB
		registrarQuintoPuntoDePlayOffEnSubTicket: quintoPuntoPB
		de: peliculaB.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 2/13/2019 23:09:16'!
registrarPrimerDueloDeCuatripleEmpatePlayOffParaStageGroupBonusComodinEnSubTicket: peliculaA vs: peliculaB
	| cuartoPuntoPA cuartoPuntoPB primerPuntoPA primerPuntoPB quintoPuntoPA quintoPuntoPB segundoPuntoPA segundoPuntoPB tercerPuntoPA tercerPuntoPB nombreDePeliculaA nombreDePeliculaB |
	
	subTicketPrimerDueloDeCuatripleEmpateDeBonusComodin
		asignarDataPeliculasEnVersus: peliculaA
		vs: peliculaB.
	nombreDePeliculaA _ peliculaA nombre.
	nombreDePeliculaB _ peliculaB nombre.
	primerPuntoPA _ primerPunto at: nombreDePeliculaA.
	segundoPuntoPA _ segundoPunto at: nombreDePeliculaA.
	tercerPuntoPA _ tercerPunto at: nombreDePeliculaA.
	cuartoPuntoPA _ cuartoPunto at: nombreDePeliculaA.
	quintoPuntoPA _ quintoPunto at: nombreDePeliculaA.
	primerPuntoPB _ primerPunto at: nombreDePeliculaB.
	segundoPuntoPB _ segundoPunto at: nombreDePeliculaB.
	tercerPuntoPB _ tercerPunto at: nombreDePeliculaB.
	cuartoPuntoPB _ cuartoPunto at: nombreDePeliculaB.
	quintoPuntoPB _ quintoPunto at: nombreDePeliculaB.
	subTicketPrimerDueloDeCuatripleEmpateDeBonusComodin
		registrarPrimerPuntoDePlayOffEnSubTicket: primerPuntoPA
		de: peliculaA.
	subTicketPrimerDueloDeCuatripleEmpateDeBonusComodin
		registrarSegundoPuntoDePlayOffEnSubTicket: segundoPuntoPA
		de: peliculaA.
	subTicketPrimerDueloDeCuatripleEmpateDeBonusComodin
		registrarTercerPuntoDePlayOffEnSubTicket: tercerPuntoPA
		de: peliculaA.
	subTicketPrimerDueloDeCuatripleEmpateDeBonusComodin
		registrarCuartoPuntoDePlayOffEnSubTicket: cuartoPuntoPA
		de: peliculaA.
	subTicketPrimerDueloDeCuatripleEmpateDeBonusComodin
		registrarQuintoPuntoDePlayOffEnSubTicket: quintoPuntoPA
		de: peliculaA.
	subTicketPrimerDueloDeCuatripleEmpateDeBonusComodin
		registrarPrimerPuntoDePlayOffEnSubTicket: primerPuntoPB
		de: peliculaB.
	subTicketPrimerDueloDeCuatripleEmpateDeBonusComodin
		registrarSegundoPuntoDePlayOffEnSubTicket: segundoPuntoPB
		de: peliculaB.
	subTicketPrimerDueloDeCuatripleEmpateDeBonusComodin
		registrarTercerPuntoDePlayOffEnSubTicket: tercerPuntoPB
		de: peliculaB.
	subTicketPrimerDueloDeCuatripleEmpateDeBonusComodin
		registrarCuartoPuntoDePlayOffEnSubTicket: cuartoPuntoPB
		de: peliculaB.
	subTicketPrimerDueloDeCuatripleEmpateDeBonusComodin
		registrarQuintoPuntoDePlayOffEnSubTicket: quintoPuntoPB
		de: peliculaB.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 2/13/2019 23:09:35'!
registrarPrimerDueloDeTripleEmpatePlayOffParaStageGroupBonusComodinEnSubTicket: peliculaA vs: peliculaB
	| cuartoPuntoPA cuartoPuntoPB primerPuntoPA primerPuntoPB quintoPuntoPA quintoPuntoPB segundoPuntoPA segundoPuntoPB tercerPuntoPA tercerPuntoPB nombreDePeliculaA nombreDePeliculaB |

	subTicketPrimerDueloDeTripleEmpateBonusComodin
		asignarDataPeliculasEnVersus: peliculaA
		vs: peliculaB.
	nombreDePeliculaA _ peliculaA nombre.
	nombreDePeliculaB _ peliculaB nombre.
	primerPuntoPA _ primerPunto at: nombreDePeliculaA.
	segundoPuntoPA _ segundoPunto at: nombreDePeliculaA.
	tercerPuntoPA _ tercerPunto at: nombreDePeliculaA.
	cuartoPuntoPA _ cuartoPunto at: nombreDePeliculaA.
	quintoPuntoPA _ quintoPunto at: nombreDePeliculaA.
	primerPuntoPB _ primerPunto at: nombreDePeliculaB.
	segundoPuntoPB _ segundoPunto at: nombreDePeliculaB.
	tercerPuntoPB _ tercerPunto at: nombreDePeliculaB.
	cuartoPuntoPB _ cuartoPunto at: nombreDePeliculaB.
	quintoPuntoPB _ quintoPunto at: nombreDePeliculaB.
	subTicketPrimerDueloDeTripleEmpateBonusComodin
		registrarPrimerPuntoDePlayOffEnSubTicket: primerPuntoPA
		de: peliculaA.
	subTicketPrimerDueloDeTripleEmpateBonusComodin
		registrarSegundoPuntoDePlayOffEnSubTicket: segundoPuntoPA
		de: peliculaA.
	subTicketPrimerDueloDeTripleEmpateBonusComodin
		registrarTercerPuntoDePlayOffEnSubTicket: tercerPuntoPA
		de: peliculaA.
	subTicketPrimerDueloDeTripleEmpateBonusComodin
		registrarCuartoPuntoDePlayOffEnSubTicket: cuartoPuntoPA
		de: peliculaA.
	subTicketPrimerDueloDeTripleEmpateBonusComodin
		registrarQuintoPuntoDePlayOffEnSubTicket: quintoPuntoPA
		de: peliculaA.
	subTicketPrimerDueloDeTripleEmpateBonusComodin
		registrarPrimerPuntoDePlayOffEnSubTicket: primerPuntoPB
		de: peliculaB.
	subTicketPrimerDueloDeTripleEmpateBonusComodin
		registrarSegundoPuntoDePlayOffEnSubTicket: segundoPuntoPB
		de: peliculaB.
	subTicketPrimerDueloDeTripleEmpateBonusComodin
		registrarTercerPuntoDePlayOffEnSubTicket: tercerPuntoPB
		de: peliculaB.
	subTicketPrimerDueloDeTripleEmpateBonusComodin
		registrarCuartoPuntoDePlayOffEnSubTicket: cuartoPuntoPB
		de: peliculaB.
	subTicketPrimerDueloDeTripleEmpateBonusComodin
		registrarQuintoPuntoDePlayOffEnSubTicket: quintoPuntoPB
		de: peliculaB.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 2/13/2019 23:09:51'!
registrarPrimerDueloDeTripleEmpatePlayOffParaStageGroupBonusPromocionEnSubTicket: peliculaA vs: peliculaB
	| cuartoPuntoPA cuartoPuntoPB primerPuntoPA primerPuntoPB quintoPuntoPA quintoPuntoPB segundoPuntoPA segundoPuntoPB tercerPuntoPA tercerPuntoPB nombreDePeliculaA nombreDePeliculaB |
	
	subTicketPrimerDueloDeTripleEmpateBonusPromocion
		asignarDataPeliculasEnVersus: peliculaA
		vs: peliculaB.
	nombreDePeliculaA _ peliculaA nombre.
	nombreDePeliculaB _ peliculaB nombre.
	primerPuntoPA _ primerPunto at: nombreDePeliculaA.
	segundoPuntoPA _ segundoPunto at: nombreDePeliculaA.
	tercerPuntoPA _ tercerPunto at: nombreDePeliculaA.
	cuartoPuntoPA _ cuartoPunto at: nombreDePeliculaA.
	quintoPuntoPA _ quintoPunto at: nombreDePeliculaA.
	primerPuntoPB _ primerPunto at: nombreDePeliculaB.
	segundoPuntoPB _ segundoPunto at: nombreDePeliculaB.
	tercerPuntoPB _ tercerPunto at: nombreDePeliculaB.
	cuartoPuntoPB _ cuartoPunto at: nombreDePeliculaB.
	quintoPuntoPB _ quintoPunto at: nombreDePeliculaB.
	subTicketPrimerDueloDeTripleEmpateBonusPromocion
		registrarPrimerPuntoDePlayOffEnSubTicket: primerPuntoPA
		de: peliculaA.
	subTicketPrimerDueloDeTripleEmpateBonusPromocion
		registrarSegundoPuntoDePlayOffEnSubTicket: segundoPuntoPA
		de: peliculaA.
	subTicketPrimerDueloDeTripleEmpateBonusPromocion
		registrarTercerPuntoDePlayOffEnSubTicket: tercerPuntoPA
		de: peliculaA.
	subTicketPrimerDueloDeTripleEmpateBonusPromocion
		registrarCuartoPuntoDePlayOffEnSubTicket: cuartoPuntoPA
		de: peliculaA.
	subTicketPrimerDueloDeTripleEmpateBonusPromocion
		registrarQuintoPuntoDePlayOffEnSubTicket: quintoPuntoPA
		de: peliculaA.
	subTicketPrimerDueloDeTripleEmpateBonusPromocion
		registrarPrimerPuntoDePlayOffEnSubTicket: primerPuntoPB
		de: peliculaB.
	subTicketPrimerDueloDeTripleEmpateBonusPromocion
		registrarSegundoPuntoDePlayOffEnSubTicket: segundoPuntoPB
		de: peliculaB.
	subTicketPrimerDueloDeTripleEmpateBonusPromocion
		registrarTercerPuntoDePlayOffEnSubTicket: tercerPuntoPB
		de: peliculaB.
	subTicketPrimerDueloDeTripleEmpateBonusPromocion
		registrarCuartoPuntoDePlayOffEnSubTicket: cuartoPuntoPB
		de: peliculaB.
	subTicketPrimerDueloDeTripleEmpateBonusPromocion
		registrarQuintoPuntoDePlayOffEnSubTicket: quintoPuntoPB
		de: peliculaB.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 12/7/2018 19:44:10'!
registrarPuntajeNegativoDe: unaPelicula
	registroBlackPlayOff
		guardarPuntaje: 0
		de: unaPelicula.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 12/7/2018 19:28:38'!
registrarPuntajePlayOff: unPuntaje de: unaPelicula
	| nombreDeLaPelicula |
	nombreDeLaPelicula _ unaPelicula nombre.
	^ total
		at: nombreDeLaPelicula
		put: unPuntaje.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 12/7/2018 19:44:10'!
registrarPuntajePositivoDe: unaPelicula
	registroBlackPlayOff
		guardarPuntaje: 1
		de: unaPelicula.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 1/12/2019 16:47:28'!
registrarPuntajeTotal: unaPelicula
	
	| puntajeTotal |
	puntajeTotal _ self unPuntajePlayOffPara: unaPelicula.
	
	self
		registrarPuntajePlayOff: puntajeTotal
		de: unaPelicula.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 10/24/2018 23:27:06'!
registrarPuntoEnPuntaje: unaPelicula 
	
	| nombreDeLaPelicula  puntajeParcial puntajeNuevo|
	
	nombreDeLaPelicula _ unaPelicula nombre.
	
	puntajeParcial _ self puntajeTotalDe: unaPelicula .
	
	puntajeNuevo _ puntajeParcial + 1.
	
	total at: nombreDeLaPelicula put: puntajeNuevo .! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 2/13/2019 23:10:06'!
registrarSegundoDueloDeCuatripleEmpatePlayOffParaStageGroupBonusComodinEnSubTicket: peliculaA vs: peliculaB
	| cuartoPuntoPA cuartoPuntoPB primerPuntoPA primerPuntoPB quintoPuntoPA quintoPuntoPB segundoPuntoPA segundoPuntoPB tercerPuntoPA tercerPuntoPB nombreDePeliculaA nombreDePeliculaB |
	
	subTicketSegundoDueloDeCuatripleEmpateDeBonusComodin
		asignarDataPeliculasEnVersus: peliculaA
		vs: peliculaB.
	nombreDePeliculaA _ peliculaA nombre.
	nombreDePeliculaB _ peliculaB nombre.
	primerPuntoPA _ primerPunto at: nombreDePeliculaA.
	segundoPuntoPA _ segundoPunto at: nombreDePeliculaA.
	tercerPuntoPA _ tercerPunto at: nombreDePeliculaA.
	cuartoPuntoPA _ cuartoPunto at: nombreDePeliculaA.
	quintoPuntoPA _ quintoPunto at: nombreDePeliculaA.
	primerPuntoPB _ primerPunto at: nombreDePeliculaB.
	segundoPuntoPB _ segundoPunto at: nombreDePeliculaB.
	tercerPuntoPB _ tercerPunto at: nombreDePeliculaB.
	cuartoPuntoPB _ cuartoPunto at: nombreDePeliculaB.
	quintoPuntoPB _ quintoPunto at: nombreDePeliculaB.
	subTicketSegundoDueloDeCuatripleEmpateDeBonusComodin
		registrarPrimerPuntoDePlayOffEnSubTicket: primerPuntoPA
		de: peliculaA.
	subTicketSegundoDueloDeCuatripleEmpateDeBonusComodin
		registrarSegundoPuntoDePlayOffEnSubTicket: segundoPuntoPA
		de: peliculaA.
	subTicketSegundoDueloDeCuatripleEmpateDeBonusComodin
		registrarTercerPuntoDePlayOffEnSubTicket: tercerPuntoPA
		de: peliculaA.
	subTicketSegundoDueloDeCuatripleEmpateDeBonusComodin
		registrarCuartoPuntoDePlayOffEnSubTicket: cuartoPuntoPA
		de: peliculaA.
	subTicketSegundoDueloDeCuatripleEmpateDeBonusComodin
		registrarQuintoPuntoDePlayOffEnSubTicket: quintoPuntoPA
		de: peliculaA.
	subTicketSegundoDueloDeCuatripleEmpateDeBonusComodin
		registrarPrimerPuntoDePlayOffEnSubTicket: primerPuntoPB
		de: peliculaB.
	subTicketSegundoDueloDeCuatripleEmpateDeBonusComodin
		registrarSegundoPuntoDePlayOffEnSubTicket: segundoPuntoPB
		de: peliculaB.
	subTicketSegundoDueloDeCuatripleEmpateDeBonusComodin
		registrarTercerPuntoDePlayOffEnSubTicket: tercerPuntoPB
		de: peliculaB.
	subTicketSegundoDueloDeCuatripleEmpateDeBonusComodin
		registrarCuartoPuntoDePlayOffEnSubTicket: cuartoPuntoPB
		de: peliculaB.
	subTicketSegundoDueloDeCuatripleEmpateDeBonusComodin
		registrarQuintoPuntoDePlayOffEnSubTicket: quintoPuntoPB
		de: peliculaB.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 2/13/2019 23:10:23'!
registrarSegundoDueloDeTripleEmpatePlayOffParaStageGroupBonusComodinEnSubTicket: peliculaA vs: peliculaB
	| cuartoPuntoPA cuartoPuntoPB primerPuntoPA primerPuntoPB quintoPuntoPA quintoPuntoPB segundoPuntoPA segundoPuntoPB tercerPuntoPA tercerPuntoPB nombreDePeliculaA nombreDePeliculaB |
	
	subTicketSegundoDueloDeTripleEmpateDeBonusComodin
		asignarDataPeliculasEnVersus: peliculaA
		vs: peliculaB.
	nombreDePeliculaA _ peliculaA nombre.
	nombreDePeliculaB _ peliculaB nombre.
	primerPuntoPA _ primerPunto at: nombreDePeliculaA.
	segundoPuntoPA _ segundoPunto at: nombreDePeliculaA.
	tercerPuntoPA _ tercerPunto at: nombreDePeliculaA.
	cuartoPuntoPA _ cuartoPunto at: nombreDePeliculaA.
	quintoPuntoPA _ quintoPunto at: nombreDePeliculaA.
	primerPuntoPB _ primerPunto at: nombreDePeliculaB.
	segundoPuntoPB _ segundoPunto at: nombreDePeliculaB.
	tercerPuntoPB _ tercerPunto at: nombreDePeliculaB.
	cuartoPuntoPB _ cuartoPunto at: nombreDePeliculaB.
	quintoPuntoPB _ quintoPunto at: nombreDePeliculaB.
	
	subTicketSegundoDueloDeTripleEmpateDeBonusComodin
		registrarPrimerPuntoDePlayOffEnSubTicket: primerPuntoPA
		de: peliculaA.
	subTicketSegundoDueloDeTripleEmpateDeBonusComodin
		registrarSegundoPuntoDePlayOffEnSubTicket: segundoPuntoPA
		de: peliculaA.
	subTicketSegundoDueloDeTripleEmpateDeBonusComodin
		registrarTercerPuntoDePlayOffEnSubTicket: tercerPuntoPA
		de: peliculaA.
	subTicketSegundoDueloDeTripleEmpateDeBonusComodin
		registrarCuartoPuntoDePlayOffEnSubTicket: cuartoPuntoPA
		de: peliculaA.
	subTicketSegundoDueloDeTripleEmpateDeBonusComodin
		registrarQuintoPuntoDePlayOffEnSubTicket: quintoPuntoPA
		de: peliculaA.
	subTicketSegundoDueloDeTripleEmpateDeBonusComodin
		registrarPrimerPuntoDePlayOffEnSubTicket: primerPuntoPB
		de: peliculaB.
	subTicketSegundoDueloDeTripleEmpateDeBonusComodin
		registrarSegundoPuntoDePlayOffEnSubTicket: segundoPuntoPB
		de: peliculaB.
	subTicketSegundoDueloDeTripleEmpateDeBonusComodin
		registrarTercerPuntoDePlayOffEnSubTicket: tercerPuntoPB
		de: peliculaB.
	subTicketSegundoDueloDeTripleEmpateDeBonusComodin
		registrarCuartoPuntoDePlayOffEnSubTicket: cuartoPuntoPB
		de: peliculaB.
	subTicketSegundoDueloDeTripleEmpateDeBonusComodin
		registrarQuintoPuntoDePlayOffEnSubTicket: quintoPuntoPB
		de: peliculaB.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 2/13/2019 23:10:43'!
registrarSegundoDueloDeTripleEmpatePlayOffParaStageGroupBonusPromocionEnSubTicket: peliculaA vs: peliculaB
	| cuartoPuntoPA cuartoPuntoPB primerPuntoPA primerPuntoPB quintoPuntoPA quintoPuntoPB segundoPuntoPA segundoPuntoPB tercerPuntoPA tercerPuntoPB nombreDePeliculaA nombreDePeliculaB |
	
	subTicketSegundoDueloDeTripleEmpateDeBonusPromocion
		asignarDataPeliculasEnVersus: peliculaA
		vs: peliculaB.
	nombreDePeliculaA _ peliculaA nombre.
	nombreDePeliculaB _ peliculaB nombre.
	primerPuntoPA _ primerPunto at: nombreDePeliculaA.
	segundoPuntoPA _ segundoPunto at: nombreDePeliculaA.
	tercerPuntoPA _ tercerPunto at: nombreDePeliculaA.
	cuartoPuntoPA _ cuartoPunto at: nombreDePeliculaA.
	quintoPuntoPA _ quintoPunto at: nombreDePeliculaA.
	primerPuntoPB _ primerPunto at: nombreDePeliculaB.
	segundoPuntoPB _ segundoPunto at: nombreDePeliculaB.
	tercerPuntoPB _ tercerPunto at: nombreDePeliculaB.
	cuartoPuntoPB _ cuartoPunto at: nombreDePeliculaB.
	quintoPuntoPB _ quintoPunto at: nombreDePeliculaB.
	subTicketSegundoDueloDeTripleEmpateDeBonusPromocion
		registrarPrimerPuntoDePlayOffEnSubTicket: primerPuntoPA
		de: peliculaA.
	subTicketSegundoDueloDeTripleEmpateDeBonusPromocion
		registrarSegundoPuntoDePlayOffEnSubTicket: segundoPuntoPA
		de: peliculaA.
	subTicketSegundoDueloDeTripleEmpateDeBonusPromocion
		registrarTercerPuntoDePlayOffEnSubTicket: tercerPuntoPA
		de: peliculaA.
	subTicketSegundoDueloDeTripleEmpateDeBonusPromocion
		registrarCuartoPuntoDePlayOffEnSubTicket: cuartoPuntoPA
		de: peliculaA.
	subTicketSegundoDueloDeTripleEmpateDeBonusPromocion
		registrarQuintoPuntoDePlayOffEnSubTicket: quintoPuntoPA
		de: peliculaA.
	subTicketSegundoDueloDeTripleEmpateDeBonusPromocion
		registrarPrimerPuntoDePlayOffEnSubTicket: primerPuntoPB
		de: peliculaB.
	subTicketSegundoDueloDeTripleEmpateDeBonusPromocion
		registrarSegundoPuntoDePlayOffEnSubTicket: segundoPuntoPB
		de: peliculaB.
	subTicketSegundoDueloDeTripleEmpateDeBonusPromocion
		registrarTercerPuntoDePlayOffEnSubTicket: tercerPuntoPB
		de: peliculaB.
	subTicketSegundoDueloDeTripleEmpateDeBonusPromocion
		registrarCuartoPuntoDePlayOffEnSubTicket: cuartoPuntoPB
		de: peliculaB.
	subTicketSegundoDueloDeTripleEmpateDeBonusPromocion
		registrarQuintoPuntoDePlayOffEnSubTicket: quintoPuntoPB
		de: peliculaB.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 2/13/2019 23:10:59'!
registrarTercerDueloDeCuatripleEmpatePlayOffParaStageGroupBonusComodinEnSubTicket: peliculaA vs: peliculaB
	| cuartoPuntoPA cuartoPuntoPB primerPuntoPA primerPuntoPB quintoPuntoPA quintoPuntoPB segundoPuntoPA segundoPuntoPB tercerPuntoPA tercerPuntoPB nombreDePeliculaA nombreDePeliculaB |
	
	subTicketTercerDueloDeCuatripleEmpateDeBonusComodin
		asignarDataPeliculasEnVersus: peliculaA
		vs: peliculaB.
	nombreDePeliculaA _ peliculaA nombre.
	nombreDePeliculaB _ peliculaB nombre.
	primerPuntoPA _ primerPunto at: nombreDePeliculaA.
	segundoPuntoPA _ segundoPunto at: nombreDePeliculaA.
	tercerPuntoPA _ tercerPunto at: nombreDePeliculaA.
	cuartoPuntoPA _ cuartoPunto at: nombreDePeliculaA.
	quintoPuntoPA _ quintoPunto at: nombreDePeliculaA.
	primerPuntoPB _ primerPunto at: nombreDePeliculaB.
	segundoPuntoPB _ segundoPunto at: nombreDePeliculaB.
	tercerPuntoPB _ tercerPunto at: nombreDePeliculaB.
	cuartoPuntoPB _ cuartoPunto at: nombreDePeliculaB.
	quintoPuntoPB _ quintoPunto at: nombreDePeliculaB.
	subTicketTercerDueloDeCuatripleEmpateDeBonusComodin
		registrarPrimerPuntoDePlayOffEnSubTicket: primerPuntoPA
		de: peliculaA.
	subTicketTercerDueloDeCuatripleEmpateDeBonusComodin
		registrarSegundoPuntoDePlayOffEnSubTicket: segundoPuntoPA
		de: peliculaA.
	subTicketTercerDueloDeCuatripleEmpateDeBonusComodin
		registrarTercerPuntoDePlayOffEnSubTicket: tercerPuntoPA
		de: peliculaA.
	subTicketTercerDueloDeCuatripleEmpateDeBonusComodin
		registrarCuartoPuntoDePlayOffEnSubTicket: cuartoPuntoPA
		de: peliculaA.
	subTicketTercerDueloDeCuatripleEmpateDeBonusComodin
		registrarQuintoPuntoDePlayOffEnSubTicket: quintoPuntoPA
		de: peliculaA.
	subTicketTercerDueloDeCuatripleEmpateDeBonusComodin
		registrarPrimerPuntoDePlayOffEnSubTicket: primerPuntoPB
		de: peliculaB.
	subTicketTercerDueloDeCuatripleEmpateDeBonusComodin
		registrarSegundoPuntoDePlayOffEnSubTicket: segundoPuntoPB
		de: peliculaB.
	subTicketTercerDueloDeCuatripleEmpateDeBonusComodin
		registrarTercerPuntoDePlayOffEnSubTicket: tercerPuntoPB
		de: peliculaB.
	subTicketTercerDueloDeCuatripleEmpateDeBonusComodin
		registrarCuartoPuntoDePlayOffEnSubTicket: cuartoPuntoPB
		de: peliculaB.
	subTicketTercerDueloDeCuatripleEmpateDeBonusComodin
		registrarQuintoPuntoDePlayOffEnSubTicket: quintoPuntoPB
		de: peliculaB.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 2/13/2019 23:07:11'!
registrarUnicoDueloDePlayOffParaStageGroupBonusComodinEnSubTicket: peliculaA vs: peliculaB
	| cuartoPuntoPA cuartoPuntoPB primerPuntoPA primerPuntoPB quintoPuntoPA quintoPuntoPB segundoPuntoPA segundoPuntoPB tercerPuntoPA tercerPuntoPB nombreDePeliculaA nombreDePeliculaB |

	subTicketDueloUnicoDeBonusComodin
		asignarDataPeliculasEnVersus: peliculaA
		vs: peliculaB.
	nombreDePeliculaA _ peliculaA nombre.
	nombreDePeliculaB _ peliculaB nombre.
	primerPuntoPA _ primerPunto at: nombreDePeliculaA.
	segundoPuntoPA _ segundoPunto at: nombreDePeliculaA.
	tercerPuntoPA _ tercerPunto at: nombreDePeliculaA.
	cuartoPuntoPA _ cuartoPunto at: nombreDePeliculaA.
	quintoPuntoPA _ quintoPunto at: nombreDePeliculaA.
	primerPuntoPB _ primerPunto at: nombreDePeliculaB.
	segundoPuntoPB _ segundoPunto at: nombreDePeliculaB.
	tercerPuntoPB _ tercerPunto at: nombreDePeliculaB.
	cuartoPuntoPB _ cuartoPunto at: nombreDePeliculaB.
	quintoPuntoPB _ quintoPunto at: nombreDePeliculaB.
	subTicketDueloUnicoDeBonusComodin
		registrarPrimerPuntoDePlayOffEnSubTicket: primerPuntoPA
		de: peliculaA.
	subTicketDueloUnicoDeBonusComodin
		registrarSegundoPuntoDePlayOffEnSubTicket: segundoPuntoPA
		de: peliculaA.
	subTicketDueloUnicoDeBonusComodin
		registrarTercerPuntoDePlayOffEnSubTicket: tercerPuntoPA
		de: peliculaA.
	subTicketDueloUnicoDeBonusComodin
		registrarCuartoPuntoDePlayOffEnSubTicket: cuartoPuntoPA
		de: peliculaA.
	subTicketDueloUnicoDeBonusComodin
		registrarQuintoPuntoDePlayOffEnSubTicket: quintoPuntoPA
		de: peliculaA.
	subTicketDueloUnicoDeBonusComodin
		registrarPrimerPuntoDePlayOffEnSubTicket: primerPuntoPB
		de: peliculaB.
	subTicketDueloUnicoDeBonusComodin
		registrarSegundoPuntoDePlayOffEnSubTicket: segundoPuntoPB
		de: peliculaB.
	subTicketDueloUnicoDeBonusComodin
		registrarTercerPuntoDePlayOffEnSubTicket: tercerPuntoPB
		de: peliculaB.
	subTicketDueloUnicoDeBonusComodin
		registrarCuartoPuntoDePlayOffEnSubTicket: cuartoPuntoPB
		de: peliculaB.
	subTicketDueloUnicoDeBonusComodin
		registrarQuintoPuntoDePlayOffEnSubTicket: quintoPuntoPB
		de: peliculaB.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 2/13/2019 23:07:23'!
registrarUnicoDueloDePlayOffParaStageGroupBonusInvitacionEnSubTicket: peliculaA vs: peliculaB
	| cuartoPuntoPA cuartoPuntoPB primerPuntoPA primerPuntoPB quintoPuntoPA quintoPuntoPB segundoPuntoPA segundoPuntoPB tercerPuntoPA tercerPuntoPB nombreDePeliculaA nombreDePeliculaB |
	
	subTicketDueloUnicoDeBonusInvitacion
		asignarDataPeliculasEnVersus: peliculaA
		vs: peliculaB.
	nombreDePeliculaA _ peliculaA nombre.
	nombreDePeliculaB _ peliculaB nombre.
	primerPuntoPA _ primerPunto at: nombreDePeliculaA.
	segundoPuntoPA _ segundoPunto at: nombreDePeliculaA.
	tercerPuntoPA _ tercerPunto at: nombreDePeliculaA.
	cuartoPuntoPA _ cuartoPunto at: nombreDePeliculaA.
	quintoPuntoPA _ quintoPunto at: nombreDePeliculaA.
	primerPuntoPB _ primerPunto at: nombreDePeliculaB.
	segundoPuntoPB _ segundoPunto at: nombreDePeliculaB.
	tercerPuntoPB _ tercerPunto at: nombreDePeliculaB.
	cuartoPuntoPB _ cuartoPunto at: nombreDePeliculaB.
	quintoPuntoPB _ quintoPunto at: nombreDePeliculaB.
	subTicketDueloUnicoDeBonusInvitacion
		registrarPrimerPuntoDePlayOffEnSubTicket: primerPuntoPA
		de: peliculaA.
	subTicketDueloUnicoDeBonusInvitacion
		registrarSegundoPuntoDePlayOffEnSubTicket: segundoPuntoPA
		de: peliculaA.
	subTicketDueloUnicoDeBonusInvitacion
		registrarTercerPuntoDePlayOffEnSubTicket: tercerPuntoPA
		de: peliculaA.
	subTicketDueloUnicoDeBonusInvitacion
		registrarCuartoPuntoDePlayOffEnSubTicket: cuartoPuntoPA
		de: peliculaA.
	subTicketDueloUnicoDeBonusInvitacion
		registrarQuintoPuntoDePlayOffEnSubTicket: quintoPuntoPA
		de: peliculaA.
	subTicketDueloUnicoDeBonusInvitacion
		registrarPrimerPuntoDePlayOffEnSubTicket: primerPuntoPB
		de: peliculaB.
	subTicketDueloUnicoDeBonusInvitacion
		registrarSegundoPuntoDePlayOffEnSubTicket: segundoPuntoPB
		de: peliculaB.
	subTicketDueloUnicoDeBonusInvitacion
		registrarTercerPuntoDePlayOffEnSubTicket: tercerPuntoPB
		de: peliculaB.
	subTicketDueloUnicoDeBonusInvitacion
		registrarCuartoPuntoDePlayOffEnSubTicket: cuartoPuntoPB
		de: peliculaB.
	subTicketDueloUnicoDeBonusInvitacion
		registrarQuintoPuntoDePlayOffEnSubTicket: quintoPuntoPB
		de: peliculaB.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 2/13/2019 23:07:44'!
registrarUnicoDueloDePlayOffParaStageGroupBonusPromocionEnSubTicket: peliculaA vs: peliculaB
	| cuartoPuntoPA cuartoPuntoPB primerPuntoPA primerPuntoPB quintoPuntoPA quintoPuntoPB segundoPuntoPA segundoPuntoPB tercerPuntoPA tercerPuntoPB nombreDePeliculaA nombreDePeliculaB |
	
	subTicketDueloUnicoDeBonusPromocion
		asignarDataPeliculasEnVersus: peliculaA
		vs: peliculaB.
	nombreDePeliculaA _ peliculaA nombre.
	nombreDePeliculaB _ peliculaB nombre.
	primerPuntoPA _ primerPunto at: nombreDePeliculaA.
	segundoPuntoPA _ segundoPunto at: nombreDePeliculaA.
	tercerPuntoPA _ tercerPunto at: nombreDePeliculaA.
	cuartoPuntoPA _ cuartoPunto at: nombreDePeliculaA.
	quintoPuntoPA _ quintoPunto at: nombreDePeliculaA.
	primerPuntoPB _ primerPunto at: nombreDePeliculaB.
	segundoPuntoPB _ segundoPunto at: nombreDePeliculaB.
	tercerPuntoPB _ tercerPunto at: nombreDePeliculaB.
	cuartoPuntoPB _ cuartoPunto at: nombreDePeliculaB.
	quintoPuntoPB _ quintoPunto at: nombreDePeliculaB.
	subTicketDueloUnicoDeBonusPromocion
		registrarPrimerPuntoDePlayOffEnSubTicket: primerPuntoPA
		de: peliculaA.
	subTicketDueloUnicoDeBonusPromocion
		registrarSegundoPuntoDePlayOffEnSubTicket: segundoPuntoPA
		de: peliculaA.
	subTicketDueloUnicoDeBonusPromocion
		registrarTercerPuntoDePlayOffEnSubTicket: tercerPuntoPA
		de: peliculaA.
	subTicketDueloUnicoDeBonusPromocion
		registrarCuartoPuntoDePlayOffEnSubTicket: cuartoPuntoPA
		de: peliculaA.
	subTicketDueloUnicoDeBonusPromocion
		registrarQuintoPuntoDePlayOffEnSubTicket: quintoPuntoPA
		de: peliculaA.
	subTicketDueloUnicoDeBonusPromocion
		registrarPrimerPuntoDePlayOffEnSubTicket: primerPuntoPB
		de: peliculaB.
	subTicketDueloUnicoDeBonusPromocion
		registrarSegundoPuntoDePlayOffEnSubTicket: segundoPuntoPB
		de: peliculaB.
	subTicketDueloUnicoDeBonusPromocion
		registrarTercerPuntoDePlayOffEnSubTicket: tercerPuntoPB
		de: peliculaB.
	subTicketDueloUnicoDeBonusPromocion
		registrarCuartoPuntoDePlayOffEnSubTicket: cuartoPuntoPB
		de: peliculaB.
	subTicketDueloUnicoDeBonusPromocion
		registrarQuintoPuntoDePlayOffEnSubTicket: quintoPuntoPB
		de: peliculaB.! !

!PlayOff methodsFor: 'register - playoff' stamp: 'MB 8/12/2019 22:00:30'!
registrarUnicoDueloDePlayOffPreFinalAEnSubTicket: peliculaA vs: peliculaB
	| cuartoPuntoPA cuartoPuntoPB primerPuntoPA primerPuntoPB quintoPuntoPA quintoPuntoPB segundoPuntoPA segundoPuntoPB tercerPuntoPA tercerPuntoPB nombreDePeliculaA nombreDePeliculaB |
	subTicketPreFinalMvMA
		asignarDataPeliculasEnVersus: peliculaA
		vs: peliculaB.
	nombreDePeliculaA _ peliculaA nombre.
	nombreDePeliculaB _ peliculaB nombre.
	primerPuntoPA _ primerPunto at: nombreDePeliculaA.
	segundoPuntoPA _ segundoPunto at: nombreDePeliculaA.
	tercerPuntoPA _ tercerPunto at: nombreDePeliculaA.
	cuartoPuntoPA _ cuartoPunto at: nombreDePeliculaA.
	quintoPuntoPA _ quintoPunto at: nombreDePeliculaA.
	primerPuntoPB _ primerPunto at: nombreDePeliculaB.
	segundoPuntoPB _ segundoPunto at: nombreDePeliculaB.
	tercerPuntoPB _ tercerPunto at: nombreDePeliculaB.
	cuartoPuntoPB _ cuartoPunto at: nombreDePeliculaB.
	quintoPuntoPB _ quintoPunto at: nombreDePeliculaB.
	subTicketPreFinalMvMA
		registrarPrimerPuntoDePlayOffEnSubTicket: primerPuntoPA
		de: peliculaA.
	subTicketPreFinalMvMA
		registrarSegundoPuntoDePlayOffEnSubTicket: segundoPuntoPA
		de: peliculaA.
	subTicketPreFinalMvMA
		registrarTercerPuntoDePlayOffEnSubTicket: tercerPuntoPA
		de: peliculaA.
	subTicketPreFinalMvMA
		registrarCuartoPuntoDePlayOffEnSubTicket: cuartoPuntoPA
		de: peliculaA.
	subTicketPreFinalMvMA
		registrarQuintoPuntoDePlayOffEnSubTicket: quintoPuntoPA
		de: peliculaA.
	subTicketPreFinalMvMA
		registrarPrimerPuntoDePlayOffEnSubTicket: primerPuntoPB
		de: peliculaB.
	subTicketPreFinalMvMA
		registrarSegundoPuntoDePlayOffEnSubTicket: segundoPuntoPB
		de: peliculaB.
	subTicketPreFinalMvMA
		registrarTercerPuntoDePlayOffEnSubTicket: tercerPuntoPB
		de: peliculaB.
	subTicketPreFinalMvMA
		registrarCuartoPuntoDePlayOffEnSubTicket: cuartoPuntoPB
		de: peliculaB.
	subTicketPreFinalMvMA
		registrarQuintoPuntoDePlayOffEnSubTicket: quintoPuntoPB
		de: peliculaB.! !

!PlayOff methodsFor: 'private - playoff' stamp: 'MB 2/22/2019 23:52:00'!
resetear
	
	primerPunto removeAll .
	
	segundoPunto removeAll .
	
	tercerPunto removeAll .
	
	cuartoPunto removeAll .
	
	quintoPunto removeAll .
	
	total removeAll .
	
	"registroBlackPlayOff resetearRegistro.
	
	unBlackPlayOff resetearBlackPlayOff."
	
	ganadorPlayOff _ nil.
	
	perdedorPlayOff _ nil.! !

!PlayOff methodsFor: 'private - playoff' stamp: 'MB 3/3/2019 22:29:50'!
resetearListaBlackPlayOff
	
	listaPuntosBlackPlayOffParticipanteA removeAll.
	
	listaPuntosBlackPlayOffParticipanteB removeAll! !

!PlayOff methodsFor: 'private - playoff' stamp: 'MB 10/21/2018 22:34:32'!
resultadoDePunto: unaInstancePunto de: unNombreDePelicula 
	
	^ unaInstancePunto at: unNombreDePelicula ! !

!PlayOff methodsFor: 'accessing' stamp: 'MB 10/21/2018 20:31:38'!
segundoPunto
	^segundoPunto! !

!PlayOff methodsFor: 'playoff' stamp: 'MB 1/31/2019 00:29:03'!
segundoVersusDeCuatripleEmpateDeStageGroupBonusComodin: peliculaA vs: peliculaB 
	
	self
		definirSegundoDueloDeCuatripleEmpatePlayOffStageGroupBonusComodin: peliculaA vs: peliculaB. 
		
		(self definirGanadorPlayOff: peliculaA vs: peliculaB) definirGanadorSegundoVersusCuatripleEmpateDeStageGroupBonusComodin: peliculaA vs: peliculaB en: self.! !

!PlayOff methodsFor: 'playoff' stamp: 'MB 1/30/2019 23:48:58'!
segundoVersusDeTripleEmpateDeStageGroupBonusComodin: peliculaA vs: peliculaB 
	
	self
		definirSegundoDueloDeTripleEmpatePlayOffStageGroupBonusComodin: peliculaA vs: peliculaB. 
		
	(self definirGanadorPlayOff: peliculaA vs: peliculaB) definirGanadorSegundoVersusDeTripleEmpateStageGroupBonusComodin: peliculaA vs: peliculaB en: self.! !

!PlayOff methodsFor: 'playoff' stamp: 'MB 2/3/2019 15:00:07'!
segundoVersusDeTripleEmpateDeStageGroupBonusPromocion: peliculaA vs: peliculaB 
	
	self
		definirSegundoDueloDeTripleEmpatePlayOffStageGroupBonusPromocion: peliculaA vs: peliculaB. 
		
		(self definirGanadorPlayOff: peliculaA vs: peliculaB) definirGanadorSegundoVersusTripleEmpateStageGroupBonusPromocion: peliculaA vs: peliculaB en: self.! !

!PlayOff methodsFor: 'accessing' stamp: 'MB 10/21/2018 20:33:01'!
tercerPunto
	^tercerPunto! !

!PlayOff methodsFor: 'playoff' stamp: 'MB 1/31/2019 00:50:24'!
tercerVersusDeCuatripleEmpateDeStageGroupBonusComodin: peliculaA vs: peliculaB 
	
	self
		definirTercerDueloDeCuatripleEmpatePlayOffStageGroupBonusComodin: peliculaA vs: peliculaB. 
		
		(self definirGanadorPlayOff: peliculaA vs: peliculaB) definirGanadorTercerVersusDeCuatripleEmpateDeStageGroupBonusComodin: peliculaA vs: peliculaB en: self! !

!PlayOff methodsFor: 'testing - playoff' stamp: 'MB 1/4/2019 23:52:28'!
tienePuntoNegativoDeLaLiguilla: unaInstancePunto de: unaPelicula 
	
	| nombreDeLaPelicula puntoDeLaPelicula |
	
	nombreDeLaPelicula _ unaPelicula nombre.
	
	puntoDeLaPelicula _ unaInstancePunto at: nombreDeLaPelicula .
	
	^ puntoDeLaPelicula class = X! !

!PlayOff methodsFor: 'testing - playoff' stamp: 'MB 1/4/2019 23:52:17'!
tienePuntoPositivoDeLaLiguilla: unaInstancePunto de: unaPelicula 
	
	| nombreDeLaPelicula puntoDeLaPelicula |
	
	nombreDeLaPelicula _ unaPelicula nombre.
	
	puntoDeLaPelicula _ unaInstancePunto at: nombreDeLaPelicula .
	
	^ puntoDeLaPelicula class= O! !

!PlayOff methodsFor: 'private testing - playoff' stamp: 'MB 10/21/2018 22:46:16'!
tieneRegistradoUnPuntaje: unaPelicula 
	
	| puntaje nombreDeLaPelicula |
	
	nombreDeLaPelicula _ unaPelicula nombre.
	
	puntaje _ self puntajeDeLaPelicula: nombreDeLaPelicula .
	
	^ puntaje >= 0! !

!PlayOff methodsFor: 'testing - playoff' stamp: 'MB 12/12/2018 13:52:43'!
tieneUnGanador
	
	^ ganadorPlayOff notNil! !

!PlayOff methodsFor: 'testing - playoff' stamp: 'MB 12/11/2018 22:51:29'!
tieneUnGanadorEntre: peliculaA vs: peliculaB

	| ppA ppB |
	
	ppA _ self puntajeTotalDe: peliculaA .
	
	ppB _ self puntajeTotalDe: peliculaB.
	
	^ (ppA > ppB) | (ppB > ppA)
	! !

!PlayOff methodsFor: 'private - playoff' stamp: 'MB 12/6/2018 21:42:14'!
tipoDePuntoAlctual: unTipoDePunto 
	
	^ AnalizadorDePuntaje unTipoDePuntajeDe: unTipoDePunto ! !

!PlayOff methodsFor: 'private - playoff' stamp: 'MB 1/12/2019 16:47:44'!
unPuntajePlayOffPara: unaPelicula
	
	^ SumadorDePuntosPlayOff unPuntajePara: unaPelicula en: self.! !

!PlayOff methodsFor: 'playoff' stamp: 'MB 12/11/2018 21:04:06'!
versus: unaPelicula vs: otraPelicula
	self
		definirRondaPlayOff: unaPelicula vs: otraPelicula. (self definirGanadorPlayOff: unaPelicula vs: otraPelicula) definirGanadorVersus: unaPelicula vs: otraPelicula en: self.! !

!PlayOff methodsFor: 'private - playoff' stamp: 'MB 8/17/2019 15:25:53'!
versusFinalMvM: peliculaA vs: peliculaB
	self
		definirDueloPlayOffFinalMvM: peliculaA
		vs: peliculaB.
	(self
		definirGanadorPlayOff: peliculaA
		vs: peliculaB)
		definirGanadorEndVersus: peliculaA
		vs: peliculaB
		en: self.! !

!PlayOff methodsFor: 'private - playoff' stamp: 'MB 8/17/2019 15:20:58'!
versusPreFinalMvM: peliculaA vs: peliculaB
	self
		definirRondaPlayOffPreFinalMvM: peliculaA
		vs: peliculaB.
	(self
		definirGanadorPlayOff: peliculaA
		vs: peliculaB)
		definirGanadorVersusPreEnd: peliculaA
		vs: peliculaB
		en: self.! !

!PlayOff methodsFor: 'playoff' stamp: 'MB 1/29/2019 22:04:12'!
versusUnicoDueloParaStageGroupBonusComodin: peliculaA vs: peliculaB
	
	self
		definirUnicoDueloPlayOffStageGroupBonusComodin: peliculaA vs: peliculaB.
		
	(self definirGanadorPlayOff: peliculaA vs: peliculaB) definirGanadorVersusUnicoStageGroupBonusComodin: peliculaA vs: peliculaB en: self.! !

!PlayOff methodsFor: 'playoff' stamp: 'MB 2/3/2019 15:19:11'!
versusUnicoDueloParaStageGroupBonusInvitacion: peliculaA vs: peliculaB 
	
	self
		definirUnicoDueloPlayOffStageGroupBonusInvitacion: peliculaA vs: peliculaB.
	
	(self definirGanadorPlayOff: peliculaA vs: peliculaB) definirGanadorUnicoVersusDeStageGroupBonusInvitacion: peliculaA vs: peliculaB en: self.! !

!PlayOff methodsFor: 'playoff' stamp: 'MB 2/2/2019 23:02:14'!
versusUnicoDueloParaStageGroupBonusPromocion: peliculaA vs: peliculaB 
	
	self
		definirUnicoDueloPlayOffStageGroupBonusPromocion: peliculaA vs: peliculaB.
	
	(self definirGanadorPlayOff: peliculaA vs: peliculaB) definirGanadorUnicoVersusStageGroupBonusPromocion: peliculaA vs: peliculaB en: self! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 10/7/2018 21:38:29'!
agregarPunto: unPunto enRonda: unaRonda 
	
	unaRonda add: unPunto ! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 4/10/2020 00:59:59'!
definirPrimeraRondaDeEndMvMPara: unaPelicula enRegistro: unRegistro enTicket: unTicketCineWar
	self
		definirTanda: self primeraTanda;
		definirTanda: self segundaTanda;
		definirTandaRepechaje.
	unTicketCineWar
		guardarDataPrimeraRondaPointExpressDeEndMvM: self primeraTanda
		de: unaPelicula.
	unTicketCineWar
		guardarDataSegundaRondaPointExpressEndMvM: self segundaTanda
		de: unaPelicula.
	unTicketCineWar
		guardarDataRondaRepechajePointExpressEndMvM: self tandaRepechaje
		de: unaPelicula.
	self
		guardarPuntaje: unaPelicula
		enRegistro: unRegistro.! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 4/10/2020 01:01:27'!
definirPrimeraRondaDeIntroMvMPara: unaPelicula enRegistro: unRegistro enTicket: unTicketCineWar
	self
		definirTanda: self primeraTanda;
		definirTanda: self segundaTanda;
		definirTandaRepechaje.
	unTicketCineWar
		guardarDataPrimeraRondaPointExpressDeIntroMvM: self primeraTanda
		de: unaPelicula.
	unTicketCineWar
		guardarDataSegundaRondaPointExpressIntroMvM: self segundaTanda
		de: unaPelicula.
	unTicketCineWar
		guardarDataRondaRepechajePointExpressIntroMvM: self tandaRepechaje
		de: unaPelicula.
	self
		guardarPuntaje: unaPelicula
		enRegistro: unRegistro.! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 4/10/2020 01:02:02'!
definirPrimeraRondaDePreEndMvMPara: unaPelicula enRegistro: unRegistro enTicket: unTicketCineWar
	self
		definirTanda: self primeraTanda;
		definirTanda: self segundaTanda;
		definirTandaRepechaje.
	unTicketCineWar
		guardarDataPrimeraRondaPointExpressDePreEndMvM: self primeraTanda
		de: unaPelicula.
	unTicketCineWar
		guardarDataSegundaRondaPointExpressPreEndMvM: self segundaTanda
		de: unaPelicula.
	unTicketCineWar
		guardarDataRondaRepechajePointExpressPreEndMvM: self tandaRepechaje
		de: unaPelicula.
	self
		guardarPuntaje: unaPelicula
		enRegistro: unRegistro.! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 4/10/2020 01:02:25'!
definirPrimeraRondaDeStageGroupPara: unaPelicula enRegistro: unRegistro enTicket: unTicketCineWar
	self
		definirTanda: self primeraTanda;
		definirTanda: self segundaTanda;
		definirTandaRepechaje.
	unTicketCineWar guardarDataPrimeraRondaDePointExpressStageGroup: self primeraTanda.
	unTicketCineWar guardarDataSegundaRondaPointExpressDeStageGroup: self segundaTanda.
	unTicketCineWar guardarDataRondaRepechajePointExpressDeStageGroup: self tandaRepechaje.
	self
		guardarPuntaje: unaPelicula
		enRegistro: unRegistro.! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 4/10/2020 01:04:28'!
definirPrimeraRondaIIDeEndMvMPara: unaPelicula enRegistro: unRegistro enTicket: unTicketCineWar
	self
		definirTanda: self primeraTandaII;
		definirTanda: self segundaTandaII;
		definirTandaRepechajeII.
	unTicketCineWar
		guardarDataPrimeraRondaPointExpressDeEndMvM: self primeraTandaII
		de: unaPelicula.
	unTicketCineWar
		guardarDataSegundaRondaPointExpressEndMvM: self segundaTandaII
		de: unaPelicula.
	unTicketCineWar
		guardarDataRondaRepechajePointExpressEndMvM: self tandaRepechajeII
		de: unaPelicula.
	self
		guardarPuntajeII: unaPelicula
		enRegistro: unRegistro.! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 4/10/2020 01:04:49'!
definirPrimeraRondaIIDeIntroMvMPara: unaPelicula enRegistro: unRegistro enTicket: unTicketCineWar
	self
		definirTanda: self primeraTandaII;
		definirTanda: self segundaTandaII;
		definirTandaRepechajeII.
	unTicketCineWar
		guardarDataPrimeraRondaPointExpressDeIntroMvM: self primeraTandaII
		de: unaPelicula.
	unTicketCineWar
		guardarDataSegundaRondaPointExpressIntroMvM: self segundaTandaII
		de: unaPelicula.
	unTicketCineWar
		guardarDataRondaRepechajePointExpressIntroMvM: self tandaRepechajeII
		de: unaPelicula.
	self
		guardarPuntajeII: unaPelicula
		enRegistro: unRegistro.! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 4/10/2020 01:05:14'!
definirPrimeraRondaIIDePreEndMvMPara: unaPelicula enRegistro: unRegistro enTicket: unTicketCineWar
	self
		definirTanda: self primeraTandaII;
		definirTanda: self segundaTandaII;
		definirTandaRepechajeII.
	unTicketCineWar
		guardarDataPrimeraRondaPointExpressDePreEndMvM: self primeraTandaII
		de: unaPelicula.
	unTicketCineWar
		guardarDataSegundaRondaPointExpressPreEndMvM: self segundaTandaII
		de: unaPelicula.
	unTicketCineWar
		guardarDataRondaRepechajePointExpressPreEndMvM: self tandaRepechajeII
		de: unaPelicula.
	self
		guardarPuntajeII: unaPelicula
		enRegistro: unRegistro.! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 4/10/2020 01:06:42'!
definirPrimeraRondaIIDeStageGroupPara: unaPelicula enRegistro: unRegistro enTicket: unTicketCineWar
	self
		definirTanda: self primeraTandaII;
		definirTanda: self segundaTandaII;
		definirTandaRepechajeII.
	unTicketCineWar guardarDataPrimeraRondaDePointExpressStageGroupII: self primeraTandaII.
	unTicketCineWar guardarDataSegundaRondaPointExpressDeStageGroupII: self segundaTandaII.
	unTicketCineWar guardarDataRondaRepechajePointExpressDeStageGroupII: self tandaRepechajeII.
	self
		guardarPuntajeII: unaPelicula
		enRegistro: unRegistro.! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 4/10/2020 01:06:59'!
definirPrimeraRondaIIIDeStageGroupPara: unaPelicula enRegistro: unRegistro enTicket: unTicketCineWar
	self
		definirTanda: self primeraTandaIII;
		definirTanda: self segundaTandaIII;
		definirTandaRepechajeIII.
	unTicketCineWar guardarDataPrimeraRondaDePointExpressStageGroupIII: self primeraTandaIII.
	unTicketCineWar guardarDataSegundaRondaPointExpressDeStageGroupIII: self segundaTandaIII.
	unTicketCineWar guardarDataRondaRepechajePointExpressDeStageGroupIII: self tandaRepechajeIII.
	self
		guardarPuntajeIII: unaPelicula
		enRegistro: unRegistro.! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 4/10/2020 01:07:51'!
definirPrimeraRondaIIIRevanchaDeStageGroupPara: unaPelicula enRegistro: unRegistro enTicket: unTicketCineWar
	self
		definirTanda: self primeraTandaIII;
		definirTanda: self segundaTandaIII;
		definirTandaRepechajeIII.
	unTicketCineWar guardarDataPrimeraRondaRevanchaDePointExpressStageGroupIII: self primeraTandaIII.
	unTicketCineWar guardarDataSegundaRondaRevanchaPointExpressDeStageGroupIII: self segundaTandaIII.
	unTicketCineWar guardarDataRondaRepechajeRevanchaPointExpressDeStageGroupIII: self tandaRepechajeIII.
	self
		guardarPuntajeIII: unaPelicula
		enRegistro: unRegistro.! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 4/10/2020 01:10:21'!
definirPrimeraRondaIIRevanchaDeStageGroupPara: unaPelicula enRegistro: unRegistro enTicket: unTicketCineWar
	self
		definirTanda: self primeraTandaII;
		definirTanda: self segundaTandaII;
		definirTandaRepechajeII.
	unTicketCineWar guardarDataPrimeraRondaRevanchaDePointExpressStageGroupII: self primeraTandaII.
	unTicketCineWar guardarDataSegundaRondaRevanchaPointExpressDeStageGroupII: self segundaTandaII.
	unTicketCineWar guardarDataRondaRepechajeRevanchaPointExpressDeStageGroupII: self tandaRepechajeII.
	self
		guardarPuntajeII: unaPelicula
		enRegistro: unRegistro.! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 4/10/2020 01:10:41'!
definirPrimeraRondaIVDeStageGroupPara: unaPelicula enRegistro: unRegistro enTicket: unTicketCineWar
	self
		definirTanda: self primeraTandaIV;
		definirTanda: self segundaTandaIV;
		definirTandaRepechajeIV.
	unTicketCineWar guardarDataPrimeraRondaDePointExpressStageGroupIV: self primeraTandaIV.
	unTicketCineWar guardarDataSegundaRondaPointExpressDeStageGroupIV: self segundaTandaIV.
	unTicketCineWar guardarDataRondaRepechajePointExpressDeStageGroupIV: self tandaRepechajeIV.
	self
		guardarPuntajeIV: unaPelicula
		enRegistro: unRegistro.! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 4/10/2020 01:11:04'!
definirPrimeraRondaIVRevanchaDeStageGroupPara: unaPelicula enRegistro: unRegistro enTicket: unTicketCineWar
	self
		definirTanda: self primeraTandaIV;
		definirTanda: self segundaTandaIV;
		definirTandaRepechajeIV.
	unTicketCineWar guardarDataPrimeraRondaRevanchaDePointExpressStageGroupIV: self primeraTandaIV.
	unTicketCineWar guardarDataSegundaRondaRevanchaPointExpressDeStageGroupIV: self segundaTandaIV.
	unTicketCineWar guardarDataRondaRepechajeRevanchaPointExpressDeStageGroupIV: self tandaRepechajeIV.
	self
		guardarPuntajeIV: unaPelicula
		enRegistro: unRegistro.! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 4/10/2020 01:13:11'!
definirPrimeraRondaRevanchaDeStageGroupPara: unaPelicula enRegistro: unRegistro enTicket: unTicketCineWar
	self
		definirTanda: self primeraTanda;
		definirTanda: self segundaTanda;
		definirTandaRepechaje.
	unTicketCineWar guardarDataPrimeraRondaRevanchaDePointExpressStageGroup: self primeraTanda.
	unTicketCineWar guardarDataSegundaRondaRevanchaPointExpressDeStageGroup: self segundaTanda.
	unTicketCineWar guardarDataRondaRepechajeRevanchaPointExpressDeStageGroup: self tandaRepechaje.
	self
		guardarPuntaje: unaPelicula
		enRegistro: unRegistro.! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 4/10/2020 01:22:58'!
definirRondaRevanchaDeEndMvMPara: unaPelicula enRegistro: unRegistro enTicket: unTicketCineWar
	self
		definirTanda: self primeraTandaIII;
		definirTanda: self segundaTandaIII;
		definirTandaRepechajeIII.
	unTicketCineWar
		guardarDataPrimeraRondaRevanchaPointExpressDeEndMvM: self primeraTandaIII
		de: unaPelicula.
	unTicketCineWar
		guardarDataSegundaRondaRevanchaPointExpressEndMvM: self segundaTandaIII
		de: unaPelicula.
	unTicketCineWar
		guardarDataRondaRepechajeRevanchaPointExpressEndMvM: self tandaRepechajeIII
		de: unaPelicula.
	self
		guardarPuntajeIII: unaPelicula
		enRegistro: unRegistro.! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 4/10/2020 01:23:15'!
definirRondaRevanchaDeIntroMvMPara: unaPelicula enRegistro: unRegistro enTicket: unTicketCineWar
	self
		definirTanda: self primeraTandaIII;
		definirTanda: self segundaTandaIII;
		definirTandaRepechajeIII.
	unTicketCineWar
		guardarDataPrimeraRondaRevanchaPointExpressDeIntroMvM: self primeraTandaIII
		de: unaPelicula.
	unTicketCineWar
		guardarDataSegundaRondaRevanchaPointExpressIntroMvM: self segundaTandaIII
		de: unaPelicula.
	unTicketCineWar
		guardarDataRondaRepechajeRevanchaPointExpressIntroMvM: self tandaRepechajeIII
		de: unaPelicula.
	self
		guardarPuntajeIII: unaPelicula
		enRegistro: unRegistro.! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 4/10/2020 01:24:12'!
definirRondaRevanchaDePreEndMvMPara: unaPelicula enRegistro: unRegistro enTicket: unTicketCineWar
	self
		definirTanda: self primeraTandaIII;
		definirTanda: self segundaTandaIII;
		definirTandaRepechajeIII.
	unTicketCineWar
		guardarDataPrimeraRondaRevanchaPointExpressDePreEndMvM: self primeraTandaIII
		de: unaPelicula.
	unTicketCineWar
		guardarDataSegundaRondaRevanchaPointExpressPreEndMvM: self segundaTandaIII
		de: unaPelicula.
	unTicketCineWar
		guardarDataRondaRepechajeRevanchaPointExpressPreEndMvM: self tandaRepechajeIII
		de: unaPelicula.
	self
		guardarPuntajeIII: unaPelicula
		enRegistro: unRegistro.! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 4/10/2020 01:24:30'!
definirRondaRevanchaIIDeEndMvMPara: unaPelicula enRegistro: unRegistro enTicket: unTicketCineWar
	self
		definirTanda: self primeraTandaIV;
		definirTanda: self segundaTandaIV;
		definirTandaRepechajeIV.
	unTicketCineWar
		guardarDataPrimeraRondaRevanchaPointExpressDeEndMvM: self primeraTandaIV
		de: unaPelicula.
	unTicketCineWar
		guardarDataSegundaRondaRevanchaPointExpressEndMvM: self segundaTandaIV
		de: unaPelicula.
	unTicketCineWar
		guardarDataRondaRepechajeRevanchaPointExpressEndMvM: self tandaRepechajeIV
		de: unaPelicula.
	self
		guardarPuntajeIV: unaPelicula
		enRegistro: unRegistro.! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 4/10/2020 01:25:18'!
definirRondaRevanchaIIDeIntroMvMPara: unaPelicula enRegistro: unRegistro enTicket: unTicketCineWar
	self
		definirTanda: self primeraTandaIV;
		definirTanda: self segundaTandaIV;
		definirTandaRepechajeIV.
	unTicketCineWar
		guardarDataPrimeraRondaRevanchaPointExpressDeIntroMvM: self primeraTandaIV
		de: unaPelicula.
	unTicketCineWar
		guardarDataSegundaRondaRevanchaPointExpressIntroMvM: self segundaTandaIV
		de: unaPelicula.
	unTicketCineWar
		guardarDataRondaRepechajeRevanchaPointExpressIntroMvM: self tandaRepechajeIV
		de: unaPelicula.
	self
		guardarPuntajeIV: unaPelicula
		enRegistro: unRegistro.! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 4/10/2020 01:25:37'!
definirRondaRevanchaIIDePreEndMvMPara: unaPelicula enRegistro: unRegistro enTicket: unTicketCineWar
	self
		definirTanda: self primeraTandaIV;
		definirTanda: self segundaTandaIV;
		definirTandaRepechajeIV.
	unTicketCineWar
		guardarDataPrimeraRondaRevanchaPointExpressDePreEndMvM: self primeraTandaIV
		de: unaPelicula.
	unTicketCineWar
		guardarDataSegundaRondaRevanchaPointExpressPreEndMvM: self segundaTandaIV
		de: unaPelicula.
	unTicketCineWar
		guardarDataRondaRepechajeRevanchaPointExpressPreEndMvM: self tandaRepechajeIV
		de: unaPelicula.
	self
		guardarPuntajeIV: unaPelicula
		enRegistro: unRegistro.! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 3/31/2019 01:02:38'!
definirTanda: unaRonda
	self definirTandaActual: unaRonda.
	self seguirJugandoRondaActual: unaRonda.! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 3/31/2019 01:02:37'!
definirTandaActual: unaRonda
	^ DefinidorDePuntos
		unPuntajePara: self
		paraRonda: unaRonda.! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 3/31/2019 01:04:48'!
definirTandaRepechaje
	self estadoDeTandas jugarRepechajePara: self.! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 4/12/2019 23:43:11'!
definirTandaRepechajeII
	self estadoDeTandasII jugarRepechajeIIPara: self.! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 4/12/2019 23:53:20'!
definirTandaRepechajeIII
	self estadoDeTandasIII jugarRepechajeIIIPara: self.! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 4/13/2019 00:01:42'!
definirTandaRepechajeIV
	self estadoDeTandasIV jugarRepechajeIVPara: self.! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 3/31/2019 01:05:31'!
estadoDeTandas
	^ AutorizadorDeEstadoDeTanda unEstadoPara: self.! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 4/12/2019 23:43:53'!
estadoDeTandasII
	
	^ AutorizadorDeEstadoDeTanda unEstadoIIPara: self.! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 4/12/2019 23:54:08'!
estadoDeTandasIII
	
	^ AutorizadorDeEstadoDeTanda unEstadoIIIPara: self.! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 4/13/2019 00:02:31'!
estadoDeTandasIV
	^ AutorizadorDeEstadoDeTanda unEstadoIVPara: self.! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 3/31/2019 01:13:16'!
guardarPuntaje: unaPelicula enRegistro: unRegistro
	| puntajePrimeraRonda puntajeSegundaRonda puntajeRepechaje puntajeTotal |
	puntajePrimeraRonda _ self puntajeDeRonda: self primeraTanda.
	puntajeSegundaRonda _ self puntajeDeRonda: self segundaTanda.
	puntajeRepechaje _ self puntajeDeRonda: self tandaRepechaje.
	puntajeTotal _ puntajePrimeraRonda + puntajeSegundaRonda + puntajeRepechaje.
	unRegistro
		guardarPuntaje: puntajeTotal
		de: unaPelicula.! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 3/31/2019 01:13:37'!
guardarPuntajeII: unaPelicula enRegistro: unRegistro
	| puntajePrimeraRonda puntajeSegundaRonda puntajeRepechaje puntajeTotal |
	puntajePrimeraRonda _ self puntajeDeRonda: self primeraTandaII.
	puntajeSegundaRonda _ self puntajeDeRonda: self segundaTandaII.
	puntajeRepechaje _ self puntajeDeRonda: self tandaRepechajeII.
	puntajeTotal _ puntajePrimeraRonda + puntajeSegundaRonda + puntajeRepechaje.
	unRegistro
		guardarPuntaje: puntajeTotal
		de: unaPelicula.! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 3/31/2019 01:13:53'!
guardarPuntajeIII: unaPelicula enRegistro: unRegistro
	| puntajePrimeraRonda puntajeSegundaRonda puntajeRepechaje puntajeTotal |
	puntajePrimeraRonda _ self puntajeDeRonda: self primeraTandaIII.
	puntajeSegundaRonda _ self puntajeDeRonda: self segundaTandaIII.
	puntajeRepechaje _ self puntajeDeRonda: self tandaRepechajeIII.
	puntajeTotal _ puntajePrimeraRonda + puntajeSegundaRonda + puntajeRepechaje.
	unRegistro
		guardarPuntaje: puntajeTotal
		de: unaPelicula.! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 3/31/2019 01:14:40'!
guardarPuntajeIV: unaPelicula enRegistro: unRegistro
	| puntajePrimeraRonda puntajeSegundaRonda puntajeRepechaje puntajeTotal |
	puntajePrimeraRonda _ self puntajeDeRonda: self primeraTandaIV.
	puntajeSegundaRonda _ self puntajeDeRonda: self segundaTandaIV.
	puntajeRepechaje _ self puntajeDeRonda: self tandaRepechajeIV.
	puntajeTotal _ puntajePrimeraRonda + puntajeSegundaRonda + puntajeRepechaje.
	unRegistro
		guardarPuntaje: puntajeTotal
		de: unaPelicula.! !

!PointExpress methodsFor: 'initialization' stamp: 'MB 3/31/2019 01:09:42'!
initialize
	primeraTanda _ OrderedCollection new.
	primeraTandaII _ OrderedCollection new.
	primeraTandaIII _ OrderedCollection new.
	primeraTandaIV _ OrderedCollection new.
	segundaTanda _ OrderedCollection new.
	segundaTandaII _ OrderedCollection new.
	segundaTandaIII _ OrderedCollection new.
	segundaTandaIV _ OrderedCollection new.
	tandaRepechaje _ OrderedCollection new.
	tandaRepechajeII _ OrderedCollection new.
	tandaRepechajeIII _ OrderedCollection new.
	tandaRepechajeIV _ OrderedCollection new.
	registro _ Registro new.
	ticket _ PreTicketStageGroup new.! !

!PointExpress methodsFor: 'testing - point' stamp: 'MB 3/31/2019 01:08:49'!
noJugoNingunPunto
	^ primeraTanda isEmpty & segundaTanda isEmpty & tandaRepechaje isEmpty.! !

!PointExpress methodsFor: 'accessing' stamp: 'MB 3/31/2019 01:10:36'!
primeraTanda
	^ primeraTanda.! !

!PointExpress methodsFor: 'accessing' stamp: 'MB 3/31/2019 01:10:57'!
primeraTandaII
	^ primeraTandaII.! !

!PointExpress methodsFor: 'accessing' stamp: 'MB 3/31/2019 01:11:14'!
primeraTandaIII
	^ primeraTandaIII.! !

!PointExpress methodsFor: 'accessing' stamp: 'MB 3/31/2019 01:11:30'!
primeraTandaIV
	^ primeraTandaIV.! !

!PointExpress methodsFor: 'point' stamp: 'MB 11/14/2018 21:48:03'!
puntaje: unaPelicula 
	
	^ registro puntajeDe: unaPelicula ! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 10/9/2018 19:01:24'!
puntajeDeRonda: unaRonda 
	
	^ SumadorDePuntos unPuntajeDeRonda: unaRonda ! !

!PointExpress methodsFor: 'point' stamp: 'MB 11/14/2018 21:42:27'!
registrarPelicula: unaPelicula 
	
	registro guardarPuntaje: 0 de: unaPelicula ! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 1/4/2019 23:46:43'!
registrarPunto: unPunto paraRonda: unaRonda 
	
	self agregarPunto: unPunto enRonda: unaRonda ! !

!PointExpress methodsFor: 'accessing' stamp: 'MB 11/17/2018 22:34:59'!
registro
	^registro! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 12/11/2018 20:57:07'!
seguirJugandoRondaActual: unaRonda
	^ (self unEstadoDeRondaActual: unaRonda) registrarSiguienteJugada: self paraRonda: unaRonda.! !

!PointExpress methodsFor: 'accessing' stamp: 'MB 3/31/2019 01:13:16'!
segundaTanda
	^ segundaTanda.! !

!PointExpress methodsFor: 'accessing' stamp: 'MB 3/31/2019 01:13:37'!
segundaTandaII
	^ segundaTandaII.! !

!PointExpress methodsFor: 'accessing' stamp: 'MB 3/31/2019 01:13:52'!
segundaTandaIII
	^ segundaTandaIII.! !

!PointExpress methodsFor: 'accessing' stamp: 'MB 3/31/2019 01:14:08'!
segundaTandaIV
	^ segundaTandaIV.! !

!PointExpress methodsFor: 'accessing' stamp: 'MB 3/31/2019 01:12:00'!
tandaRepechaje
	^ tandaRepechaje.! !

!PointExpress methodsFor: 'accessing' stamp: 'MB 3/31/2019 01:12:26'!
tandaRepechajeII
	^ tandaRepechajeII.! !

!PointExpress methodsFor: 'accessing' stamp: 'MB 3/31/2019 01:12:41'!
tandaRepechajeIII
	^ tandaRepechajeIII.! !

!PointExpress methodsFor: 'accessing' stamp: 'MB 3/31/2019 01:14:39'!
tandaRepechajeIV
	^ tandaRepechajeIV.! !

!PointExpress methodsFor: 'accessing' stamp: 'MB 1/6/2019 17:15:08'!
ticket
	^ticket! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 10/7/2018 21:55:07'!
tieneElUltimoPuntoNegativoDeLaRonda: unaRonda 
	
	| ultimoPuntoActual |
	
	ultimoPuntoActual _ unaRonda last.
	
	^ ultimoPuntoActual = X! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 10/7/2018 21:51:49'!
tieneElUltimoPuntoPositivoDeLaRonda: unaRonda 
	
	| ultimoPuntoActual |
	
	ultimoPuntoActual _ unaRonda last.
	
	
	^ unaRonda isEmpty | ultimoPuntoActual = O! !

!PointExpress methodsFor: 'testing - point' stamp: 'MB 4/12/2019 23:57:46'!
tienePrimerPuntoIIINegativo
	
	| primerPuntoDeLaPrimeraRonda primerPuntoDeLaSegundaRonda |
	primerPuntoDeLaPrimeraRonda _ self primeraTandaIII first.
	primerPuntoDeLaSegundaRonda _ self segundaTandaIII first.
	^ primerPuntoDeLaPrimeraRonda = X | (primerPuntoDeLaSegundaRonda = X).! !

!PointExpress methodsFor: 'testing - point' stamp: 'MB 4/13/2019 00:00:47'!
tienePrimerPuntoIIIPositivo
	
	| primerPuntoDeLaPrimeraRonda primerPuntoDeLaSegundaRonda |
	primerPuntoDeLaPrimeraRonda _ self primeraTandaIII first.
	primerPuntoDeLaSegundaRonda _ self segundaTandaIII first.
	^ primerPuntoDeLaPrimeraRonda = O | (primerPuntoDeLaSegundaRonda = O).! !

!PointExpress methodsFor: 'testing - point' stamp: 'MB 4/12/2019 23:47:08'!
tienePrimerPuntoIINegativo
	
	| primerPuntoDeLaPrimeraRonda primerPuntoDeLaSegundaRonda |
	primerPuntoDeLaPrimeraRonda _ self primeraTandaII first.
	primerPuntoDeLaSegundaRonda _ self segundaTandaII first.
	^ primerPuntoDeLaPrimeraRonda = X | (primerPuntoDeLaSegundaRonda = X).! !

!PointExpress methodsFor: 'testing - point' stamp: 'MB 4/12/2019 23:52:35'!
tienePrimerPuntoIIPositivo
	
	| primerPuntoDeLaPrimeraRonda primerPuntoDeLaSegundaRonda |
	primerPuntoDeLaPrimeraRonda _ self primeraTandaII first.
	primerPuntoDeLaSegundaRonda _ self segundaTandaII first.
	^ primerPuntoDeLaPrimeraRonda = O | (primerPuntoDeLaSegundaRonda = O).! !

!PointExpress methodsFor: 'testing - point' stamp: 'MB 4/13/2019 00:08:36'!
tienePrimerPuntoIVNegativo
	
	| primerPuntoDeLaPrimeraRonda primerPuntoDeLaSegundaRonda |
	primerPuntoDeLaPrimeraRonda _ self primeraTandaIV first.
	primerPuntoDeLaSegundaRonda _ self segundaTandaIV first.
	^ primerPuntoDeLaPrimeraRonda = X | (primerPuntoDeLaSegundaRonda = X).! !

!PointExpress methodsFor: 'testing - point' stamp: 'MB 4/13/2019 00:10:38'!
tienePrimerPuntoIVPositivo
	
	| primerPuntoDeLaPrimeraRonda primerPuntoDeLaSegundaRonda |
	primerPuntoDeLaPrimeraRonda _ self primeraTandaIV first.
	primerPuntoDeLaSegundaRonda _ self segundaTandaIV first.
	^ primerPuntoDeLaPrimeraRonda = O | (primerPuntoDeLaSegundaRonda = O).! !

!PointExpress methodsFor: 'private testing - point' stamp: 'MB 3/31/2019 01:13:16'!
tienePrimerPuntoNegativo
	| primerPuntoDeLaPrimeraRonda primerPuntoDeLaSegundaRonda |
	primerPuntoDeLaPrimeraRonda _ self primeraTanda first.
	primerPuntoDeLaSegundaRonda _ self segundaTanda first.
	^ primerPuntoDeLaPrimeraRonda = X | (primerPuntoDeLaSegundaRonda = X).! !

!PointExpress methodsFor: 'private testing - point' stamp: 'MB 3/31/2019 01:13:16'!
tienePrimerPuntoPositivo
	| primerPuntoDeLaPrimeraRonda primerPuntoDeLaSegundaRonda |
	primerPuntoDeLaPrimeraRonda _ self primeraTanda first.
	primerPuntoDeLaSegundaRonda _ self segundaTanda first.
	^ primerPuntoDeLaPrimeraRonda = O | (primerPuntoDeLaSegundaRonda = O).! !

!PointExpress methodsFor: 'testing - point' stamp: 'MB 1/6/2019 17:04:21'!
tieneSimbolo: unSimbolo en: unaListaDePuntos 
	
	^ unaListaDePuntos anySatisfy: [:unSimboloDeLaLista | unSimboloDeLaLista class = unSimbolo class ]! !

!PointExpress methodsFor: 'private testing - point' stamp: 'MB 3/31/2019 01:05:56'!
ultimoPuntoDeLaPrimeraRondaNegativo
	| ultimoPuntoActual |
	ultimoPuntoActual _ primeraTanda last.
	^ ultimoPuntoActual = X.! !

!PointExpress methodsFor: 'private testing - point' stamp: 'MB 3/31/2019 01:05:56'!
ultimoPuntoDeLaPrimeraRondaPositivo
	| ultimoPuntoActual |
	ultimoPuntoActual _ primeraTanda last.
	^ primeraTanda isEmpty | ultimoPuntoActual = O.! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 10/7/2018 21:47:41'!
unEstadoDeRondaActual: unaRonda 
	
	^ AutorizadorDeRonda unEstadoDeRondaPara: self deRonda: unaRonda 	! !

!PointExpress methodsFor: 'private - point' stamp: 'MB 3/31/2019 01:09:42'!
vaciarRondas
	primeraTanda removeAll.
	segundaTanda removeAll.
	tandaRepechaje removeAll.
	primeraTandaII removeAll.
	segundaTandaII removeAll.
	tandaRepechajeII removeAll.
	primeraTandaIII removeAll.
	segundaTandaIII removeAll.
	tandaRepechajeIII removeAll.
	primeraTandaIV removeAll.
	segundaTandaIV removeAll.
	tandaRepechajeIV removeAll.! !

!PreTicketMvM methodsFor: 'ticket - stagegroup' stamp: 'MB 1/10/2019 23:48:39'!
agregarPeliculasOutsideStageGroup: unaListaDePeliculas
	dataOutsideStageGroupColiseum addAll: unaListaDePeliculas.! !

!PreTicketMvM methodsFor: 'accessing' stamp: 'MB 3/8/2019 23:03:55'!
cuartaPeliculaStageGroup: unaInstanciaStageGroup 
	
	| nombreData |
	
	nombreData _ 'CuartaPeliculaDe' append: unaInstanciaStageGroup.
	
	
	^ dataInsideStageGroupColiseum at: nombreData ! !

!PreTicketMvM methodsFor: 'accessing' stamp: 'MB 8/18/2019 22:53:37'!
dataPrimeraTandaDePointExpressEnPrimeraRondaEndMvM
	^ dataPrimeraTandaPointExpressEnPrimeraRondaDeEndMvM.! !

!PreTicketMvM methodsFor: 'accessing' stamp: 'MB 8/12/2019 23:09:40'!
dataPrimeraTandaDePointExpressEnPrimeraRondaIntroMvM
	^ dataPrimeraTandaPointExpressEnPrimeraRondaDeIntroMvM.! !

!PreTicketMvM methodsFor: 'accessing' stamp: 'MB 8/18/2019 22:53:59'!
dataPrimeraTandaDePointExpressEnPrimeraRondaPreEndMvM
	^ dataPrimeraTandaPointExpressEnPrimeraRondaDePreEndMvM.! !

!PreTicketMvM methodsFor: 'accessing' stamp: 'MB 8/18/2019 22:54:21'!
dataPrimeraTandaDePointExpressEnRondaRevanchaEndMvM
	^ dataPrimeraTandaPointExpressEnRondaRevanchaDeEndMvM.! !

!PreTicketMvM methodsFor: 'accessing' stamp: 'MB 8/12/2019 23:10:24'!
dataPrimeraTandaDePointExpressEnRondaRevanchaIntroMvM
	^ dataPrimeraTandaPointExpressEnRondaRevanchaDeIntroMvM.! !

!PreTicketMvM methodsFor: 'accessing' stamp: 'MB 8/18/2019 22:54:37'!
dataPrimeraTandaDePointExpressEnRondaRevanchaPreEndMvM
	^ dataPrimeraTandaPointExpressEnRondaRevanchaDePreEndMvM.! !

!PreTicketMvM methodsFor: 'accessing' stamp: 'MB 3/13/2019 15:50:50'!
dataRanking
	
	^dataRanking! !

!PreTicketMvM methodsFor: 'accessing' stamp: 'MB 8/18/2019 22:56:18'!
dataRepechajeTandaDePointExpressEnPrimeraRondaEndMvM
	^ dataTandaRepechajePointExpressEnPrimeraRondaDeEndMvM.! !

!PreTicketMvM methodsFor: 'accessing' stamp: 'MB 8/12/2019 23:13:03'!
dataRepechajeTandaDePointExpressEnPrimeraRondaIntroMvM
	^ dataTandaRepechajePointExpressEnPrimeraRondaDeIntroMvM.! !

!PreTicketMvM methodsFor: 'accessing' stamp: 'MB 8/18/2019 22:56:35'!
dataRepechajeTandaDePointExpressEnPrimeraRondaPreEndMvM
	^ dataTandaRepechajePointExpressEnPrimeraRondaDePreEndMvM.! !

!PreTicketMvM methodsFor: 'accessing' stamp: 'MB 8/18/2019 22:56:52'!
dataRepechajeTandaDePointExpressEnRondaRevanchaEndMvM
	^ dataTandaRepechajePointExpressEnRondaRevanchaDeEndMvM.! !

!PreTicketMvM methodsFor: 'accessing' stamp: 'MB 8/12/2019 23:13:52'!
dataRepechajeTandaDePointExpressEnRondaRevanchaIntroMvM
	^ dataTandaRepechajePointExpressEnRondaRevanchaDeIntroMvM.! !

!PreTicketMvM methodsFor: 'accessing' stamp: 'MB 8/18/2019 22:57:10'!
dataRepechajeTandaDePointExpressEnRondaRevanchaPreEndMvM
	^ dataTandaRepechajePointExpressEnRondaRevanchaDePreEndMvM.! !

!PreTicketMvM methodsFor: 'accessing' stamp: 'MB 8/18/2019 22:55:38'!
dataSegundaTandaDePointExpressEnRondaRevanchaEndMvM
	^ dataSegundaTandaPointExpressEnRondaRevanchaDeEndMvM.! !

!PreTicketMvM methodsFor: 'accessing' stamp: 'MB 8/12/2019 23:12:17'!
dataSegundaTandaDePointExpressEnRondaRevanchaIntroMvM
	^ dataSegundaTandaPointExpressEnRondaRevanchaDeIntroMvM.! !

!PreTicketMvM methodsFor: 'accessing' stamp: 'MB 8/18/2019 22:55:58'!
dataSegundaTandaDePointExpressEnRondaRevanchaPreEndMvM
	^ dataSegundaTandaPointExpressEnRondaRevanchaDePreEndMvM.! !

!PreTicketMvM methodsFor: 'accessing' stamp: 'MB 8/18/2019 22:54:55'!
dataSegundaTandaPointExpressDeEndMvM
	^ dataSegundaTandaPointExpressEnPrimeraRondaDeEndMvM.! !

!PreTicketMvM methodsFor: 'accessing' stamp: 'MB 8/12/2019 23:11:13'!
dataSegundaTandaPointExpressDeIntroMvM
	^ dataSegundaTandaPointExpressEnPrimeraRondaDeIntroMvM.! !

!PreTicketMvM methodsFor: 'accessing' stamp: 'MB 8/18/2019 22:55:15'!
dataSegundaTandaPointExpressDePreEndMvM
	^ dataSegundaTandaPointExpressEnPrimeraRondaDePreEndMvM.! !

!PreTicketMvM methodsFor: 'ticket - endMvM' stamp: 'MB 8/18/2019 22:53:37'!
guardarDataPrimeraRondaPointExpressDeEndMvM: unaListaDePuntos de: unaPelicula
	dataPrimeraTandaPointExpressEnPrimeraRondaDeEndMvM
		at: unaPelicula nombre
		put: unaListaDePuntos.! !

!PreTicketMvM methodsFor: 'ticket - introMvM' stamp: 'MB 8/12/2019 23:09:40'!
guardarDataPrimeraRondaPointExpressDeIntroMvM: unaListaDePuntos de: unaPelicula
	dataPrimeraTandaPointExpressEnPrimeraRondaDeIntroMvM
		at: unaPelicula nombre
		put: unaListaDePuntos.! !

!PreTicketMvM methodsFor: 'ticket - preEndMvM' stamp: 'MB 8/18/2019 22:53:59'!
guardarDataPrimeraRondaPointExpressDePreEndMvM: unaListaDePuntos de: unaPelicula
	dataPrimeraTandaPointExpressEnPrimeraRondaDePreEndMvM
		at: unaPelicula nombre
		put: unaListaDePuntos.! !

!PreTicketMvM methodsFor: 'ticket - endMvM' stamp: 'MB 8/18/2019 22:54:21'!
guardarDataPrimeraRondaRevanchaPointExpressDeEndMvM: unaListaDePuntos de: unaPelicula
	dataPrimeraTandaPointExpressEnRondaRevanchaDeEndMvM
		at: unaPelicula nombre
		put: unaListaDePuntos.! !

!PreTicketMvM methodsFor: 'ticket - introMvM' stamp: 'MB 8/12/2019 23:10:24'!
guardarDataPrimeraRondaRevanchaPointExpressDeIntroMvM: unaListaDePuntos de: unaPelicula
	dataPrimeraTandaPointExpressEnRondaRevanchaDeIntroMvM
		at: unaPelicula nombre
		put: unaListaDePuntos.! !

!PreTicketMvM methodsFor: 'ticket - preEndMvM' stamp: 'MB 8/18/2019 22:54:37'!
guardarDataPrimeraRondaRevanchaPointExpressDePreEndMvM: unaListaDePuntos de: unaPelicula
	dataPrimeraTandaPointExpressEnRondaRevanchaDePreEndMvM
		at: unaPelicula nombre
		put: unaListaDePuntos.! !

!PreTicketMvM methodsFor: 'ticket - endMvM' stamp: 'MB 8/18/2019 22:56:18'!
guardarDataRondaRepechajePointExpressEndMvM: unaListaDePuntos de: unaPelicula
	dataTandaRepechajePointExpressEnPrimeraRondaDeEndMvM
		at: unaPelicula nombre
		put: unaListaDePuntos.! !

!PreTicketMvM methodsFor: 'ticket - introMvM' stamp: 'MB 8/12/2019 23:13:03'!
guardarDataRondaRepechajePointExpressIntroMvM: unaListaDePuntos de: unaPelicula
	dataTandaRepechajePointExpressEnPrimeraRondaDeIntroMvM
		at: unaPelicula nombre
		put: unaListaDePuntos.! !

!PreTicketMvM methodsFor: 'ticket - preEndMvM' stamp: 'MB 8/18/2019 22:56:35'!
guardarDataRondaRepechajePointExpressPreEndMvM: unaListaDePuntos de: unaPelicula
	dataTandaRepechajePointExpressEnPrimeraRondaDePreEndMvM
		at: unaPelicula nombre
		put: unaListaDePuntos.! !

!PreTicketMvM methodsFor: 'ticket - endMvM' stamp: 'MB 8/18/2019 22:56:52'!
guardarDataRondaRepechajeRevanchaPointExpressEndMvM: unaListaDePuntos de: unaPelicula
	dataTandaRepechajePointExpressEnRondaRevanchaDeEndMvM
		at: unaPelicula nombre
		put: unaListaDePuntos.! !

!PreTicketMvM methodsFor: 'ticket - introMvM' stamp: 'MB 8/12/2019 23:13:52'!
guardarDataRondaRepechajeRevanchaPointExpressIntroMvM: unaListaDePuntos de: unaPelicula
	dataTandaRepechajePointExpressEnRondaRevanchaDeIntroMvM
		at: unaPelicula nombre
		put: unaListaDePuntos.! !

!PreTicketMvM methodsFor: 'ticket - preEndMvM' stamp: 'MB 8/18/2019 22:57:10'!
guardarDataRondaRepechajeRevanchaPointExpressPreEndMvM: unaListaDePuntos de: unaPelicula
	dataTandaRepechajePointExpressEnRondaRevanchaDePreEndMvM
		at: unaPelicula nombre
		put: unaListaDePuntos.! !

!PreTicketMvM methodsFor: 'ticket - endMvM' stamp: 'MB 8/18/2019 22:54:55'!
guardarDataSegundaRondaPointExpressEndMvM: unaListaDePuntos de: unaPelicula
	dataSegundaTandaPointExpressEnPrimeraRondaDeEndMvM
		at: unaPelicula nombre
		put: unaListaDePuntos.! !

!PreTicketMvM methodsFor: 'ticket - introMvM' stamp: 'MB 8/12/2019 23:11:13'!
guardarDataSegundaRondaPointExpressIntroMvM: unaListaDePuntos de: unaPelicula
	dataSegundaTandaPointExpressEnPrimeraRondaDeIntroMvM
		at: unaPelicula nombre
		put: unaListaDePuntos.! !

!PreTicketMvM methodsFor: 'ticket - preEndMvM' stamp: 'MB 8/18/2019 22:55:15'!
guardarDataSegundaRondaPointExpressPreEndMvM: unaListaDePuntos de: unaPelicula
	dataSegundaTandaPointExpressEnPrimeraRondaDePreEndMvM
		at: unaPelicula nombre
		put: unaListaDePuntos.! !

!PreTicketMvM methodsFor: 'ticket - endMvM' stamp: 'MB 8/18/2019 22:55:38'!
guardarDataSegundaRondaRevanchaPointExpressEndMvM: unaListaDePuntos de: unaPelicula
	dataSegundaTandaPointExpressEnRondaRevanchaDeEndMvM
		at: unaPelicula nombre
		put: unaListaDePuntos.! !

!PreTicketMvM methodsFor: 'ticket - introMvM' stamp: 'MB 8/12/2019 23:12:17'!
guardarDataSegundaRondaRevanchaPointExpressIntroMvM: unaListaDePuntos de: unaPelicula
	dataSegundaTandaPointExpressEnRondaRevanchaDeIntroMvM
		at: unaPelicula nombre
		put: unaListaDePuntos.! !

!PreTicketMvM methodsFor: 'ticket - preEndMvM' stamp: 'MB 8/18/2019 22:55:58'!
guardarDataSegundaRondaRevanchaPointExpressPreEndMvM: unaListaDePuntos de: unaPelicula
	dataSegundaTandaPointExpressEnRondaRevanchaDePreEndMvM
		at: unaPelicula nombre
		put: unaListaDePuntos.! !

!PreTicketMvM methodsFor: 'initialization' stamp: 'MB 8/18/2019 22:57:10'!
initialize
	dataOutsideStageGroupColiseum _ OrderedCollection new.
	dataInsideStageGroupColiseum _ Dictionary new.
	dataRanking _ Dictionary new.
	dataPrimeraTandaPointExpressEnPrimeraRondaDeIntroMvM _ Dictionary new.
	dataSegundaTandaPointExpressEnPrimeraRondaDeIntroMvM _ Dictionary new.
	dataTandaRepechajePointExpressEnPrimeraRondaDeIntroMvM _ Dictionary new.
	dataPrimeraTandaPointExpressEnRondaRevanchaDeIntroMvM _ Dictionary new.
	dataSegundaTandaPointExpressEnRondaRevanchaDeIntroMvM _ Dictionary new.
	dataTandaRepechajePointExpressEnRondaRevanchaDeIntroMvM _ Dictionary new.
	dataPrimeraTandaPointExpressEnPrimeraRondaDePreEndMvM _ Dictionary new.
	dataSegundaTandaPointExpressEnPrimeraRondaDePreEndMvM _ Dictionary new.
	dataTandaRepechajePointExpressEnPrimeraRondaDePreEndMvM _ Dictionary new.
	dataPrimeraTandaPointExpressEnRondaRevanchaDePreEndMvM _ Dictionary new.
	dataSegundaTandaPointExpressEnRondaRevanchaDePreEndMvM _ Dictionary new.
	dataTandaRepechajePointExpressEnRondaRevanchaDePreEndMvM _ Dictionary new.
	dataPrimeraTandaPointExpressEnPrimeraRondaDeEndMvM _ Dictionary new.
	dataSegundaTandaPointExpressEnPrimeraRondaDeEndMvM _ Dictionary new.
	dataTandaRepechajePointExpressEnPrimeraRondaDeEndMvM _ Dictionary new.
	dataPrimeraTandaPointExpressEnRondaRevanchaDeEndMvM _ Dictionary new.
	dataSegundaTandaPointExpressEnRondaRevanchaDeEndMvM _ Dictionary new.
	dataTandaRepechajePointExpressEnRondaRevanchaDeEndMvM _ Dictionary new.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 1/10/2019 23:49:49'!
noTieneRegistroDeUnaFinalColiseum
	^ dataInsideStageGroupColiseum isEmpty.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/18/2019 22:56:52'!
noTieneTicketEndMvMVacio
	^ dataPrimeraTandaPointExpressEnPrimeraRondaDeEndMvM notEmpty & dataSegundaTandaPointExpressEnPrimeraRondaDeEndMvM notEmpty & dataTandaRepechajePointExpressEnPrimeraRondaDeEndMvM notEmpty & dataPrimeraTandaPointExpressEnRondaRevanchaDeEndMvM notEmpty & dataSegundaTandaPointExpressEnRondaRevanchaDeEndMvM notEmpty & dataTandaRepechajePointExpressEnRondaRevanchaDeEndMvM notEmpty.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/12/2019 23:13:52'!
noTieneTicketIntroMvMVacio
	^ dataPrimeraTandaPointExpressEnPrimeraRondaDeIntroMvM notEmpty & dataSegundaTandaPointExpressEnPrimeraRondaDeIntroMvM notEmpty & dataTandaRepechajePointExpressEnPrimeraRondaDeIntroMvM notEmpty & dataPrimeraTandaPointExpressEnRondaRevanchaDeIntroMvM notEmpty & dataSegundaTandaPointExpressEnRondaRevanchaDeIntroMvM notEmpty & dataTandaRepechajePointExpressEnRondaRevanchaDeIntroMvM notEmpty.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/18/2019 22:57:10'!
noTieneTicketPreEndMvMVacio
	^ dataPrimeraTandaPointExpressEnPrimeraRondaDePreEndMvM notEmpty & dataSegundaTandaPointExpressEnPrimeraRondaDePreEndMvM notEmpty & dataTandaRepechajePointExpressEnPrimeraRondaDePreEndMvM notEmpty & dataPrimeraTandaPointExpressEnRondaRevanchaDePreEndMvM notEmpty & dataSegundaTandaPointExpressEnRondaRevanchaDePreEndMvM notEmpty & dataTandaRepechajePointExpressEnRondaRevanchaDePreEndMvM notEmpty.! !

!PreTicketMvM methodsFor: 'accessing' stamp: 'MB 3/8/2019 22:53:48'!
primeraPeliculaStageGroup: unaInstanciaStageGroup 
	
	| nombreData |
	
	nombreData _ 'PrimeraPeliculaDe' append: unaInstanciaStageGroup.
	
	
	^ dataInsideStageGroupColiseum at: nombreData ! !

!PreTicketMvM methodsFor: 'register - preticketMvM' stamp: 'MB 3/13/2019 15:52:28'!
registroRanking: unRegistro de: unBonus deStage: unIdStage 
	
	| stage |
	
	stage  _ 'StageGroup' append: unIdStage .
	
	dataRanking at: ('Registro puntajes ' append: stage ) put: unRegistro .
	
	dataRanking at: ('Ranking ' append: stage ) put: unBonus .! !

!PreTicketMvM methodsFor: 'accessing' stamp: 'MB 3/8/2019 23:01:55'!
segundaPeliculaStageGroup: unaInstanciaStageGroup 
	
	| nombreData |
	
	nombreData _ 'SegundaPeliculaDe' append: unaInstanciaStageGroup.
	
	
	^ dataInsideStageGroupColiseum at: nombreData ! !

!PreTicketMvM methodsFor: 'accessing' stamp: 'MB 3/8/2019 23:03:11'!
terceraPeliculaStageGroup:unaInstanciaStageGroup 
	
	| nombreData |
	
	nombreData _ 'TerceraPeliculaDe' append: unaInstanciaStageGroup.
	
	
	^ dataInsideStageGroupColiseum at: nombreData ! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 7/23/2019 16:25:34'!
tienePeliculaEnOutSideStageGroup: unaPelicula 
	
	^ dataOutsideStageGroupColiseum includes: unaPelicula ! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 7/23/2019 16:25:02'!
tienePeliculasRegistradasEnOutSideStageGroup
	
	^ dataOutsideStageGroupColiseum notEmpty.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/18/2019 22:53:37'!
tieneRegistradoDataPrimeraRondaPointExpressDeEndMvM: unaListaDePuntos dePelicula: unaPelicula
	^ (dataPrimeraTandaPointExpressEnPrimeraRondaDeEndMvM at: unaPelicula nombre) = unaListaDePuntos.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/18/2019 22:53:59'!
tieneRegistradoDataPrimeraRondaPointExpressDePreEndMvM: unaListaDePuntos dePelicula: unaPelicula
	^ (dataPrimeraTandaPointExpressEnPrimeraRondaDePreEndMvM at: unaPelicula nombre) = unaListaDePuntos.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/18/2019 22:54:21'!
tieneRegistradoDataPrimeraRondaRevanchaPointExpressDeEndMvM: unaListaDePuntos dePelicula: unaPelicula
	^ (dataPrimeraTandaPointExpressEnRondaRevanchaDeEndMvM at: unaPelicula nombre) = unaListaDePuntos.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/18/2019 22:54:37'!
tieneRegistradoDataPrimeraRondaRevanchaPointExpressDePreEndMvM: unaListaDePuntos dePelicula: unaPelicula
	^ (dataPrimeraTandaPointExpressEnRondaRevanchaDePreEndMvM at: unaPelicula nombre) = unaListaDePuntos.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/18/2019 22:56:18'!
tieneRegistradoDataRondaRepechajePointExpressEndMvM: unaListaDePuntos dePelicula: unaPelicula
	^ (dataTandaRepechajePointExpressEnPrimeraRondaDeEndMvM at: unaPelicula nombre) = unaListaDePuntos.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/18/2019 22:56:35'!
tieneRegistradoDataRondaRepechajePointExpressPreEndMvM: unaListaDePuntos dePelicula: unaPelicula
	^ (dataTandaRepechajePointExpressEnPrimeraRondaDePreEndMvM at: unaPelicula nombre) = unaListaDePuntos.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/18/2019 22:57:10'!
tieneRegistradoDataRondaRepechajeRevanchaPointExpressPreEndMvM: unaListaDePuntos dePelicula: unaPelicula
	^ (dataTandaRepechajePointExpressEnRondaRevanchaDePreEndMvM at: unaPelicula nombre) = unaListaDePuntos.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/18/2019 22:54:55'!
tieneRegistradoDataSegundaRondaPointExpressEndMvM: unaListaDePuntos dePelicula: unaPelicula
	^ (dataSegundaTandaPointExpressEnPrimeraRondaDeEndMvM at: unaPelicula nombre) = unaListaDePuntos.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/18/2019 22:55:15'!
tieneRegistradoDataSegundaRondaPointExpressPreEndMvM: unaListaDePuntos dePelicula: unaPelicula
	^ (dataSegundaTandaPointExpressEnPrimeraRondaDePreEndMvM at: unaPelicula nombre) = unaListaDePuntos.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/18/2019 22:55:38'!
tieneRegistradoDataSegundaRondaRevanchaPointExpressEndMvM: unaListaDePuntos dePelicula: unaPelicula
	^ (dataSegundaTandaPointExpressEnRondaRevanchaDeEndMvM at: unaPelicula nombre) = unaListaDePuntos.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/18/2019 22:55:58'!
tieneRegistradoDataSegundaRondaRevanchaPointExpressPreEndMvM: unaListaDePuntos dePelicula: unaPelicula
	^ (dataSegundaTandaPointExpressEnRondaRevanchaDePreEndMvM at: unaPelicula nombre) = unaListaDePuntos.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 7/23/2019 16:15:47'!
tieneRegistradoUnRegistroRanking: unRegistro
	^ dataRanking includes: unRegistro.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/18/2019 22:53:37'!
tieneRegistradoUnaDataPrimeraRondaPointExpressDeEndMvM
	^ dataPrimeraTandaPointExpressEnPrimeraRondaDeEndMvM notEmpty.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/12/2019 23:27:51'!
tieneRegistradoUnaDataPrimeraRondaPointExpressDeIntroMvM
	^ dataPrimeraTandaPointExpressEnPrimeraRondaDeIntroMvM notEmpty.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/12/2019 23:28:07'!
tieneRegistradoUnaDataPrimeraRondaPointExpressDeIntroMvM: unaListaDePuntos dePelicula: unaPelicula
	^ (dataPrimeraTandaPointExpressEnPrimeraRondaDeIntroMvM at: unaPelicula nombre) = unaListaDePuntos.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/18/2019 22:53:59'!
tieneRegistradoUnaDataPrimeraRondaPointExpressDePreEndMvM
	^ dataPrimeraTandaPointExpressEnPrimeraRondaDePreEndMvM notEmpty.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/18/2019 22:54:21'!
tieneRegistradoUnaDataPrimeraRondaRevanchaPointExpressDeEndMvM
	^ dataPrimeraTandaPointExpressEnRondaRevanchaDeEndMvM notEmpty.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/12/2019 23:28:59'!
tieneRegistradoUnaDataPrimeraRondaRevanchaPointExpressDeIntroMvM
	^ dataPrimeraTandaPointExpressEnRondaRevanchaDeIntroMvM notEmpty.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/12/2019 23:29:17'!
tieneRegistradoUnaDataPrimeraRondaRevanchaPointExpressDeIntroMvM: unaListaDePuntos dePelicula: unaPelicula
	^ (dataPrimeraTandaPointExpressEnRondaRevanchaDeIntroMvM at: unaPelicula nombre) = unaListaDePuntos.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/18/2019 22:54:37'!
tieneRegistradoUnaDataPrimeraRondaRevanchaPointExpressDePreEndMvM
	^ dataPrimeraTandaPointExpressEnRondaRevanchaDePreEndMvM notEmpty.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/18/2019 22:56:18'!
tieneRegistradoUnaDataRondaRepechajePointExpressEndMvM
	^ dataTandaRepechajePointExpressEnPrimeraRondaDeEndMvM notEmpty.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/12/2019 23:30:04'!
tieneRegistradoUnaDataRondaRepechajePointExpressIntroMvM
	^ dataTandaRepechajePointExpressEnPrimeraRondaDeIntroMvM notEmpty.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/12/2019 23:30:23'!
tieneRegistradoUnaDataRondaRepechajePointExpressIntroMvM: unaListaDePuntos dePelicula: unaPelicula
	^ (dataTandaRepechajePointExpressEnPrimeraRondaDeIntroMvM at: unaPelicula nombre) = unaListaDePuntos.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/18/2019 22:56:35'!
tieneRegistradoUnaDataRondaRepechajePointExpressPreEndlMvM
	^ dataTandaRepechajePointExpressEnPrimeraRondaDePreEndMvM notEmpty.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/12/2019 23:31:07'!
tieneRegistradoUnaDataRondaRepechajeRevanchaPointExpressIntroMvM
	^ dataTandaRepechajePointExpressEnRondaRevanchaDeIntroMvM notEmpty.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/12/2019 23:31:25'!
tieneRegistradoUnaDataRondaRepechajeRevanchaPointExpressIntroMvM: unaListaDePuntos dePelicula: unaPelicula
	^ (dataTandaRepechajePointExpressEnRondaRevanchaDeIntroMvM at: unaPelicula nombre) = unaListaDePuntos.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/18/2019 22:57:10'!
tieneRegistradoUnaDataRondaRepechajeRevanchaPointExpressPreEndMvM
	^ dataTandaRepechajePointExpressEnRondaRevanchaDePreEndMvM notEmpty.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/18/2019 22:54:55'!
tieneRegistradoUnaDataSegundaRondaPointExpressEndMvM
	^ dataSegundaTandaPointExpressEnPrimeraRondaDeEndMvM notEmpty.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/12/2019 23:32:18'!
tieneRegistradoUnaDataSegundaRondaPointExpressIntroMvM
	^ dataSegundaTandaPointExpressEnPrimeraRondaDeIntroMvM notEmpty.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/12/2019 23:32:34'!
tieneRegistradoUnaDataSegundaRondaPointExpressIntroMvM: unaListaDePuntos dePelicula: unaPelicula
	^ (dataSegundaTandaPointExpressEnPrimeraRondaDeIntroMvM at: unaPelicula nombre) = unaListaDePuntos.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/18/2019 22:55:15'!
tieneRegistradoUnaDataSegundaRondaPointExpressPreEndMvM
	^ dataSegundaTandaPointExpressEnPrimeraRondaDePreEndMvM notEmpty.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/18/2019 22:55:38'!
tieneRegistradoUnaDataSegundaRondaRevanchaPointExpressEndMvM
	^ dataSegundaTandaPointExpressEnRondaRevanchaDeEndMvM notEmpty.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/12/2019 23:33:30'!
tieneRegistradoUnaDataSegundaRondaRevanchaPointExpressIntroMvM
	^ dataSegundaTandaPointExpressEnRondaRevanchaDeIntroMvM notEmpty.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/12/2019 23:33:47'!
tieneRegistradoUnaDataSegundaRondaRevanchaPointExpressIntroMvM: unaListaDePuntos dePelicula: unaPelicula
	^ (dataSegundaTandaPointExpressEnRondaRevanchaDeIntroMvM at: unaPelicula nombre) = unaListaDePuntos.! !

!PreTicketMvM methodsFor: 'testing - ticket' stamp: 'MB 8/18/2019 22:55:58'!
tieneRegistradoUnaDataSegundaRondaRevanchaPointExpressPreEndMvM
	^ dataSegundaTandaPointExpressEnRondaRevanchaDePreEndMvM notEmpty.! !

!PreTicketPlayOff methodsFor: 'preticket' stamp: 'MB 2/12/2019 23:32:42'!
agregarSubTicket: unSubTicket
	dataInsidePlayOffEnPreTicket add: unSubTicket.! !

!PreTicketPlayOff methodsFor: 'accessing' stamp: 'MB 2/12/2019 23:33:09'!
dataIntancePlayOffEnPreTicket
	^ dataInsidePlayOffEnPreTicket.! !

!PreTicketPlayOff methodsFor: 'testing - preticket' stamp: 'MB 2/23/2019 18:50:32'!
estaVacio
	
	^ dataInsidePlayOffEnPreTicket isEmpty! !

!PreTicketPlayOff methodsFor: 'initialization' stamp: 'MB 2/12/2019 23:32:43'!
initialize
	dataInsidePlayOffEnPreTicket _ OrderedCollection new.! !

!PreTicketPlayOff methodsFor: 'testing - preticket' stamp: 'MB 2/23/2019 18:49:19'!
noEstaVacio
	
	^ dataInsidePlayOffEnPreTicket notEmpty! !

!PreTicketStageGroup methodsFor: 'associating' stamp: 'MB 3/15/2019 18:54:05'!
asociarCuartoGanadorDeCupo: unaPelicula 
	
	dataInsideStageGroup at: 'Cuarto Ganador De Cupo' put: unaPelicula ! !

!PreTicketStageGroup methodsFor: 'associating' stamp: 'MB 3/15/2019 18:51:40'!
asociarPrimerGanadorDeCupo: unaPelicula 
	
	dataInsideStageGroup at: 'Primer Ganador De Cupo' put: unaPelicula ! !

!PreTicketStageGroup methodsFor: 'associating' stamp: 'MB 3/15/2019 18:52:47'!
asociarSegundoGanadorDeCupo: unaPelicula 
	
	dataInsideStageGroup at: 'Segundo Ganador De Cupo' put: unaPelicula ! !

!PreTicketStageGroup methodsFor: 'associating' stamp: 'MB 3/15/2019 18:53:24'!
asociarTercerGanadorDeCupo: unaPelicula 

	dataInsideStageGroup at: 'Tercer Ganador De Cupo' put: unaPelicula ! !

!PreTicketStageGroup methodsFor: 'associating' stamp: 'MB 3/15/2019 23:13:14'!
asociarTitulo: unTitulo 
	
	| titulo |
	
	titulo _ 'StageGroup' append: unTitulo .
	
	tituloTicket _ titulo ! !

!PreTicketStageGroup methodsFor: 'accessing' stamp: 'MB 3/24/2019 23:50:36'!
cuartoGanadorCupoDeStageGroup
	^ dataInsideStageGroup at: 'Cuarto Ganador De Cupo'.! !

!PreTicketStageGroup methodsFor: 'accessing' stamp: 'MB 3/15/2019 21:37:33'!
dataPrimeraTandaDePointExpressEnPrimeraRondaStageGroup
	
	^dataPrimeraTandaDePointExpressEnPrimeraRondaStageGroup! !

!PreTicketStageGroup methodsFor: 'accessing' stamp: 'MB 3/15/2019 21:37:46'!
dataPrimeraTandaDePointExpressEnPrimeraRondaStageGroupII
	
	^dataPrimeraTandaDePointExpressEnPrimeraRondaStageGroupII! !

!PreTicketStageGroup methodsFor: 'accessing' stamp: 'MB 3/15/2019 21:38:02'!
dataPrimeraTandaDePointExpressEnPrimeraRondaStageGroupIII
	
	^dataPrimeraTandaDePointExpressEnPrimeraRondaStageGroupIII! !

!PreTicketStageGroup methodsFor: 'accessing' stamp: 'MB 3/15/2019 21:38:21'!
dataPrimeraTandaDePointExpressEnPrimeraRondaStageGroupIV
	
	^dataPrimeraTandaDePointExpressEnPrimeraRondaStageGroupIV! !

!PreTicketStageGroup methodsFor: 'accessing' stamp: 'MB 3/15/2019 22:24:35'!
dataPrimeraTandaDePointExpressEnRondaRevanchaStageGroup
	
	^dataPrimeraTandaDePointExpressEnRondaRevanchaStageGroup! !

!PreTicketStageGroup methodsFor: 'accessing' stamp: 'MB 3/15/2019 22:24:48'!
dataPrimeraTandaDePointExpressEnRondaRevanchaStageGroupII
	
	^dataPrimeraTandaDePointExpressEnRondaRevanchaStageGroupII! !

!PreTicketStageGroup methodsFor: 'accessing' stamp: 'MB 3/15/2019 22:25:36'!
dataPrimeraTandaDePointExpressEnRondaRevanchaStageGroupIII
	
	^dataPrimeraTandaDePointExpressEnRondaRevanchaStageGroupIII! !

!PreTicketStageGroup methodsFor: 'accessing' stamp: 'MB 3/15/2019 22:25:53'!
dataPrimeraTandaDePointExpressEnRondaRevanchaStageGroupIV
	
	^dataPrimeraTandaDePointExpressEnRondaRevanchaStageGroupIV! !

!PreTicketStageGroup methodsFor: 'accessing' stamp: 'MB 3/15/2019 23:28:21'!
dataRanking
	
	^dataRanking! !

!PreTicketStageGroup methodsFor: 'accessing' stamp: 'MB 3/15/2019 22:03:49'!
dataRepechajeTandaDePointExpressEnPrimeraRondaStageGroup
	
	^dataRepechajeTandaDePointExpressEnPrimeraRondaStageGroup! !

!PreTicketStageGroup methodsFor: 'accessing' stamp: 'MB 3/15/2019 22:04:09'!
dataRepechajeTandaDePointExpressEnPrimeraRondaStageGroupII
	
	^dataRepechajeTandaDePointExpressEnPrimeraRondaStageGroupII! !

!PreTicketStageGroup methodsFor: 'accessing' stamp: 'MB 3/15/2019 22:04:25'!
dataRepechajeTandaDePointExpressEnPrimeraRondaStageGroupIII
	
	^dataRepechajeTandaDePointExpressEnPrimeraRondaStageGroupIII! !

!PreTicketStageGroup methodsFor: 'accessing' stamp: 'MB 3/15/2019 22:04:55'!
dataRepechajeTandaDePointExpressEnPrimeraRondaStageGroupIV
	
	^dataRepechajeTandaDePointExpressEnPrimeraRondaStageGroupIV! !

!PreTicketStageGroup methodsFor: 'accessing' stamp: 'MB 3/15/2019 23:01:37'!
dataRepechajeTandaDePointExpressEnRondaRevanchaStageGroup
	
	^dataRepechajeTandaDePointExpressEnRondaRevanchaStageGroup! !

!PreTicketStageGroup methodsFor: 'accessing' stamp: 'MB 3/15/2019 23:01:50'!
dataRepechajeTandaDePointExpressEnRondaRevanchaStageGroupII
	
	^dataRepechajeTandaDePointExpressEnRondaRevanchaStageGroupII! !

!PreTicketStageGroup methodsFor: 'accessing' stamp: 'MB 3/15/2019 23:02:05'!
dataRepechajeTandaDePointExpressEnRondaRevanchaStageGroupIII
	
	^dataRepechajeTandaDePointExpressEnRondaRevanchaStageGroupIII! !

!PreTicketStageGroup methodsFor: 'accessing' stamp: 'MB 3/15/2019 23:02:24'!
dataRepechajeTandaDePointExpressEnRondaRevanchaStageGroupIV
	
	^dataRepechajeTandaDePointExpressEnRondaRevanchaStageGroupIV! !

!PreTicketStageGroup methodsFor: 'accessing' stamp: 'MB 3/15/2019 21:43:38'!
dataSegundaTandaDePointExpressEnPrimeraRondaStageGroup
	
	^dataSegundaTandaDePointExpressEnPrimeraRondaStageGroup! !

!PreTicketStageGroup methodsFor: 'accessing' stamp: 'MB 3/15/2019 21:43:52'!
dataSegundaTandaDePointExpressEnPrimeraRondaStageGroupII
	
	^dataSegundaTandaDePointExpressEnPrimeraRondaStageGroupII! !

!PreTicketStageGroup methodsFor: 'accessing' stamp: 'MB 3/15/2019 21:44:06'!
dataSegundaTandaDePointExpressEnPrimeraRondaStageGroupIII
	
	^dataSegundaTandaDePointExpressEnPrimeraRondaStageGroupIII! !

!PreTicketStageGroup methodsFor: 'accessing' stamp: 'MB 3/15/2019 21:44:21'!
dataSegundaTandaDePointExpressEnPrimeraRondaStageGroupIV
	
	^dataSegundaTandaDePointExpressEnPrimeraRondaStageGroupIV! !

!PreTicketStageGroup methodsFor: 'accessing' stamp: 'MB 3/15/2019 22:51:13'!
dataSegundaTandaDePointExpressEnRondaRevanchaStageGroup
	
	^dataSegundaTandaDePointExpressEnRondaRevanchaStageGroup! !

!PreTicketStageGroup methodsFor: 'accessing' stamp: 'MB 3/15/2019 22:51:26'!
dataSegundaTandaDePointExpressEnRondaRevanchaStageGroupII
	
	^dataSegundaTandaDePointExpressEnRondaRevanchaStageGroupII! !

!PreTicketStageGroup methodsFor: 'accessing' stamp: 'MB 3/15/2019 22:51:43'!
dataSegundaTandaDePointExpressEnRondaRevanchaStageGroupIII
	
	^dataSegundaTandaDePointExpressEnRondaRevanchaStageGroupIII! !

!PreTicketStageGroup methodsFor: 'accessing' stamp: 'MB 3/15/2019 22:52:04'!
dataSegundaTandaDePointExpressEnRondaRevanchaStageGroupIV
	
	^dataSegundaTandaDePointExpressEnRondaRevanchaStageGroupIV! !

!PreTicketStageGroup methodsFor: 'accessing' stamp: 'MB 3/15/2019 22:01:56'!
dataTandaRepechajeDePointExpressEnPrimeraRondaStageGroup
	self shouldBeImplemented.! !

!PreTicketStageGroup methodsFor: 'associating' stamp: 'MB 3/14/2019 23:20:24'!
guardarDataPrimeraRondaDePointExpressStageGroup: unaListaDePuntos 
	
	| lista |
	
	lista _ OrderedCollection new.
	
	lista addAll: unaListaDePuntos .
	
	
	dataPrimeraTandaDePointExpressEnPrimeraRondaStageGroup _ lista ! !

!PreTicketStageGroup methodsFor: 'associating' stamp: 'MB 3/14/2019 23:21:37'!
guardarDataPrimeraRondaDePointExpressStageGroupII: unaListaDePuntos 
	
	| lista |
	
	lista _ OrderedCollection new.
	
	lista addAll: unaListaDePuntos .
	
	
	dataPrimeraTandaDePointExpressEnPrimeraRondaStageGroupII _ lista .! !

!PreTicketStageGroup methodsFor: 'associating' stamp: 'MB 3/14/2019 23:22:07'!
guardarDataPrimeraRondaDePointExpressStageGroupIII: unaListaDePuntos 
	
	| lista |
	
	lista _ OrderedCollection new.
	
	lista addAll: unaListaDePuntos .
	
	
	dataPrimeraTandaDePointExpressEnPrimeraRondaStageGroupIII _ lista ! !

!PreTicketStageGroup methodsFor: 'associating' stamp: 'MB 3/14/2019 23:22:17'!
guardarDataPrimeraRondaDePointExpressStageGroupIV: unaListaDePuntos 
	
	| lista |
	
	lista _ OrderedCollection new.
	
	lista addAll: unaListaDePuntos .
	
	
	dataPrimeraTandaDePointExpressEnPrimeraRondaStageGroupIV _ lista ! !

!PreTicketStageGroup methodsFor: 'associating' stamp: 'MB 3/14/2019 23:22:31'!
guardarDataPrimeraRondaRevanchaDePointExpressStageGroup: unaListaDePuntos 
	
	| lista |
	
	lista _ OrderedCollection new.
	
	lista addAll: unaListaDePuntos .
	
	
	dataPrimeraTandaDePointExpressEnRondaRevanchaStageGroup _ lista ! !

!PreTicketStageGroup methodsFor: 'associating' stamp: 'MB 3/14/2019 23:23:08'!
guardarDataPrimeraRondaRevanchaDePointExpressStageGroupII: unaListaDePuntos 
	
	| lista |
	
	lista _ OrderedCollection new.
	
	lista addAll: unaListaDePuntos .
	
	
	dataPrimeraTandaDePointExpressEnRondaRevanchaStageGroupII _ lista ! !

!PreTicketStageGroup methodsFor: 'associating' stamp: 'MB 3/14/2019 23:23:44'!
guardarDataPrimeraRondaRevanchaDePointExpressStageGroupIII: unaListaDePuntos 
	
	| lista |
	
	lista _ OrderedCollection new.
	
	lista addAll: unaListaDePuntos .
	
	
	dataPrimeraTandaDePointExpressEnRondaRevanchaStageGroupIII _ lista ! !

!PreTicketStageGroup methodsFor: 'associating' stamp: 'MB 3/14/2019 23:24:17'!
guardarDataPrimeraRondaRevanchaDePointExpressStageGroupIV: unaListaDePuntos 

	| lista |
	
	lista _ OrderedCollection new.
	
	lista addAll: unaListaDePuntos .


	dataPrimeraTandaDePointExpressEnRondaRevanchaStageGroupIV _ lista ! !

!PreTicketStageGroup methodsFor: 'associating' stamp: 'MB 3/14/2019 23:24:29'!
guardarDataRondaRepechajePointExpressDeStageGroup: unaListaDePuntos 
	
	| lista |
	
	lista _ OrderedCollection new.
	
	lista addAll: unaListaDePuntos .
	
	dataRepechajeTandaDePointExpressEnPrimeraRondaStageGroup _ lista ! !

!PreTicketStageGroup methodsFor: 'associating' stamp: 'MB 3/14/2019 23:24:40'!
guardarDataRondaRepechajePointExpressDeStageGroupII: unaListaDePuntos 
	
	| lista |
	
	lista _ OrderedCollection new.
	
	lista addAll: unaListaDePuntos .
	
	
	dataRepechajeTandaDePointExpressEnPrimeraRondaStageGroupII _ lista ! !

!PreTicketStageGroup methodsFor: 'associating' stamp: 'MB 3/14/2019 23:24:50'!
guardarDataRondaRepechajePointExpressDeStageGroupIII: unaListaDePuntos 
	
	| lista |
	
	lista _ OrderedCollection new.
	
	lista addAll: unaListaDePuntos .
	
	
	
	dataRepechajeTandaDePointExpressEnPrimeraRondaStageGroupIII _ lista ! !

!PreTicketStageGroup methodsFor: 'associating' stamp: 'MB 3/14/2019 23:25:02'!
guardarDataRondaRepechajePointExpressDeStageGroupIV: unaListaDePuntos 
	
	| lista |
	
	lista _ OrderedCollection new.
	
	lista addAll: unaListaDePuntos .
	
	
	dataRepechajeTandaDePointExpressEnPrimeraRondaStageGroupIV _ lista ! !

!PreTicketStageGroup methodsFor: 'associating' stamp: 'MB 3/14/2019 23:25:16'!
guardarDataRondaRepechajeRevanchaPointExpressDeStageGroup: unaListaDePuntos 
	
	| lista |
	
	lista _ OrderedCollection new.
	
	lista addAll: unaListaDePuntos .
	
	
	dataRepechajeTandaDePointExpressEnRondaRevanchaStageGroup _ lista ! !

!PreTicketStageGroup methodsFor: 'associating' stamp: 'MB 3/14/2019 23:25:32'!
guardarDataRondaRepechajeRevanchaPointExpressDeStageGroupII: unaListaDePuntos 
	
	| lista |
	
	lista _ OrderedCollection new.
	
	lista addAll: unaListaDePuntos .
	
	
	dataRepechajeTandaDePointExpressEnRondaRevanchaStageGroupII _ lista ! !

!PreTicketStageGroup methodsFor: 'associating' stamp: 'MB 3/14/2019 23:25:44'!
guardarDataRondaRepechajeRevanchaPointExpressDeStageGroupIII: unaListaDePuntos 
	
	| lista |
	
	lista _ OrderedCollection new.
	
	lista addAll: unaListaDePuntos .
	
	
	dataRepechajeTandaDePointExpressEnRondaRevanchaStageGroupIII _ lista ! !

!PreTicketStageGroup methodsFor: 'associating' stamp: 'MB 3/14/2019 23:26:24'!
guardarDataRondaRepechajeRevanchaPointExpressDeStageGroupIV: unaListaDePuntos 
	
	| lista |
	
	lista _ OrderedCollection new.
	
	lista addAll: unaListaDePuntos .
	
	
	dataRepechajeTandaDePointExpressEnRondaRevanchaStageGroupIV _ lista ! !

!PreTicketStageGroup methodsFor: 'associating' stamp: 'MB 3/14/2019 23:26:40'!
guardarDataSegundaRondaPointExpressDeStageGroup: unaListaDePuntos 

	| lista |
	
	lista _ OrderedCollection new.
	
	lista addAll: unaListaDePuntos .


	dataSegundaTandaDePointExpressEnPrimeraRondaStageGroup  _ lista ! !

!PreTicketStageGroup methodsFor: 'associating' stamp: 'MB 3/14/2019 23:27:02'!
guardarDataSegundaRondaPointExpressDeStageGroupII: unaListaDePuntos 
	
	| lista |
	
	lista _ OrderedCollection new.
	
	lista addAll: unaListaDePuntos .
	
	
	dataSegundaTandaDePointExpressEnPrimeraRondaStageGroupII _ lista ! !

!PreTicketStageGroup methodsFor: 'associating' stamp: 'MB 3/14/2019 23:27:18'!
guardarDataSegundaRondaPointExpressDeStageGroupIII: unaListaDePuntos 
	
	| lista |
	
	lista _ OrderedCollection new.
	
	lista addAll: unaListaDePuntos .
	
	
	dataSegundaTandaDePointExpressEnPrimeraRondaStageGroupIII _ lista ! !

!PreTicketStageGroup methodsFor: 'associating' stamp: 'MB 3/14/2019 23:27:30'!
guardarDataSegundaRondaPointExpressDeStageGroupIV: unaListaDePuntos 
	
	| lista |
	
	lista _ OrderedCollection new.
	
	lista addAll: unaListaDePuntos .
	
	
	dataSegundaTandaDePointExpressEnPrimeraRondaStageGroupIV _ lista ! !

!PreTicketStageGroup methodsFor: 'associating' stamp: 'MB 3/14/2019 23:27:41'!
guardarDataSegundaRondaRevanchaPointExpressDeStageGroup: unaListaDePuntos 
	
	| lista |
	
	lista _ OrderedCollection new.
	
	lista addAll: unaListaDePuntos .
	
	
	dataSegundaTandaDePointExpressEnRondaRevanchaStageGroup _ lista ! !

!PreTicketStageGroup methodsFor: 'associating' stamp: 'MB 3/14/2019 23:27:52'!
guardarDataSegundaRondaRevanchaPointExpressDeStageGroupII: unaListaDePuntos 
	
	| lista |
	
	lista _ OrderedCollection new.
	
	lista addAll: unaListaDePuntos .
	
	
	dataSegundaTandaDePointExpressEnRondaRevanchaStageGroupII _ lista ! !

!PreTicketStageGroup methodsFor: 'associating' stamp: 'MB 3/14/2019 23:28:07'!
guardarDataSegundaRondaRevanchaPointExpressDeStageGroupIII: unaListaDePuntos 
	
	| lista |
	
	lista _ OrderedCollection new.
	
	lista addAll: unaListaDePuntos .
	
	
	dataSegundaTandaDePointExpressEnRondaRevanchaStageGroupIII _ lista ! !

!PreTicketStageGroup methodsFor: 'associating' stamp: 'MB 3/14/2019 23:28:20'!
guardarDataSegundaRondaRevanchaPointExpressDeStageGroupIV: unaListaDePuntos 
	
	| lista |
	
	lista _ OrderedCollection new.
	
	lista addAll: unaListaDePuntos .
	
	
	dataSegundaTandaDePointExpressEnRondaRevanchaStageGroupIV _ lista ! !

!PreTicketStageGroup methodsFor: 'initialization' stamp: 'MB 3/15/2019 18:35:29'!
initialize


	dataRanking _ Dictionary new.
	
	dataInsideStageGroup _ Dictionary new.! !

!PreTicketStageGroup methodsFor: 'testing - preticket' stamp: 'MB 3/27/2019 00:15:07'!
noEstaVacio
	
	^ dataSegundaTandaDePointExpressEnPrimeraRondaStageGroup notEmpty &
		dataPrimeraTandaDePointExpressEnPrimeraRondaStageGroup notEmpty &
		dataRepechajeTandaDePointExpressEnPrimeraRondaStageGroup notEmpty &
		dataPrimeraTandaDePointExpressEnPrimeraRondaStageGroupII notEmpty &
		dataSegundaTandaDePointExpressEnPrimeraRondaStageGroupII notEmpty &
		dataRepechajeTandaDePointExpressEnPrimeraRondaStageGroupII notEmpty &
		dataPrimeraTandaDePointExpressEnPrimeraRondaStageGroupIII notEmpty &
		dataSegundaTandaDePointExpressEnPrimeraRondaStageGroupIII notEmpty &
		dataRepechajeTandaDePointExpressEnPrimeraRondaStageGroupIII notEmpty &
		dataPrimeraTandaDePointExpressEnPrimeraRondaStageGroupIV notEmpty &
		dataSegundaTandaDePointExpressEnPrimeraRondaStageGroupIV notEmpty &
		dataRepechajeTandaDePointExpressEnPrimeraRondaStageGroupIV notEmpty &
		dataPrimeraTandaDePointExpressEnRondaRevanchaStageGroup notEmpty &
		dataSegundaTandaDePointExpressEnRondaRevanchaStageGroup notEmpty &
		dataRepechajeTandaDePointExpressEnRondaRevanchaStageGroup notEmpty &
		dataPrimeraTandaDePointExpressEnRondaRevanchaStageGroupII notEmpty &
		dataSegundaTandaDePointExpressEnRondaRevanchaStageGroupII notEmpty &
		dataRepechajeTandaDePointExpressEnRondaRevanchaStageGroupII notEmpty &
		dataPrimeraTandaDePointExpressEnRondaRevanchaStageGroupIII notEmpty &
		dataSegundaTandaDePointExpressEnRondaRevanchaStageGroupIII notEmpty &
		dataRepechajeTandaDePointExpressEnRondaRevanchaStageGroupIII notEmpty &
		dataPrimeraTandaDePointExpressEnRondaRevanchaStageGroupIV notEmpty &
		dataSegundaTandaDePointExpressEnRondaRevanchaStageGroupIV notEmpty &
		dataRepechajeTandaDePointExpressEnRondaRevanchaStageGroupIV notEmpty &
		dataRanking notEmpty &
		dataInsideStageGroup notEmpty 
		
		
		
		
		
		
		
	   ! !

!PreTicketStageGroup methodsFor: 'accessing' stamp: 'MB 3/24/2019 23:50:58'!
primerGanadorCupoDeStageGroup
	^ dataInsideStageGroup at: 'Primer Ganador De Cupo'.! !

!PreTicketStageGroup methodsFor: 'register - preticket' stamp: 'MB 3/15/2019 17:37:33'!
registroRanking: unRegistro de: unBonus deStage: unIdStage 
	
	| stage |
	
	stage  _ 'StageGroup' append: unIdStage .
	
	dataRanking at: ('Registro puntajes ' append: stage ) put: unRegistro .
	
	dataRanking at: ('Ranking ' append: stage ) put: unBonus .! !

!PreTicketStageGroup methodsFor: 'accessing' stamp: 'MB 3/24/2019 23:49:00'!
segundoGanadorCupoDeStageGroup
	^ dataInsideStageGroup at: 'Segundo Ganador De Cupo'.! !

!PreTicketStageGroup methodsFor: 'accessing' stamp: 'MB 3/15/2019 21:03:31'!
tercerGanadorCupoDeGroup
	^ dataInsideStageGroup at: 'Tercer Ganador De Cupo'.! !

!PreTicketStageGroup methodsFor: 'accessing' stamp: 'MB 3/15/2019 21:10:33'!
tituloTicket
	
	^tituloTicket! !

!PrecuelaTicket methodsFor: 'precuela ticket' stamp: 'MB 3/17/2019 22:33:07'!
agregarPeliculasOutsideStageGroup: unaListaDePeliculas 
	
	dataOutSidePeliculasEnStageGroup addAll: unaListaDePeliculas ! !

!PrecuelaTicket methodsFor: 'accessing' stamp: 'MB 3/17/2019 22:56:57'!
dataOutSidePeliculasEnStageGroup
	
	^dataOutSidePeliculasEnStageGroup! !

!PrecuelaTicket methodsFor: 'initialization' stamp: 'MB 3/16/2019 00:22:58'!
initialize

	dataOutSidePeliculasEnStageGroup _ OrderedCollection new! !

!PrecuelaTicket methodsFor: 'testing - precuela' stamp: 'MB 3/26/2019 23:45:30'!
noEstaVacio
	^ dataOutSidePeliculasEnStageGroup notEmpty! !

!Procesador methodsFor: 'private - processing' stamp: 'MB 3/7/2019 21:43:41'!
agregarALaListaDeTicketProcesados: unFinalTicket
	listaDePreticketPlayOffProcesados add: unFinalTicket.! !

!Procesador methodsFor: 'private - processing' stamp: 'MB 4/9/2020 01:25:52'!
agregarTicketALaListaDeTicketCineWarProcesados: unFinalTicketCineWar
	listaDePreticketCineWarProcesados add: unFinalTicketCineWar.! !

!Procesador methodsFor: 'processing - playoff' stamp: 'MB 3/7/2019 21:41:12'!
analizarEstadoDePreTicketPlayOff: unPreTicketPlayOff
	^ AnalizadorDeEstadoDePreTicket unEstadoDeTicketPara: unPreTicketPlayOff.! !

!Procesador methodsFor: 'processing - playoff' stamp: 'MB 3/7/2019 21:40:44'!
armarFinalTicketPlayOff: unSubTicketPlayOff de: unNombreDeInstancia
	| tandaPointPA tandaPointPB peliculaA peliculaB finalTicket |
	finalTicket _ FinalTicketPlayOff new.
	peliculaA _ unSubTicketPlayOff dataPeliculasEnVersus first.
	peliculaB _ unSubTicketPlayOff dataPeliculasEnVersus second.
	tandaPointPA _ OrderedCollection new.
	tandaPointPB _ OrderedCollection new.
	tandaPointPA
		add: (unSubTicketPlayOff primerPuntoDe: peliculaA);
		add: (unSubTicketPlayOff segundoPuntoDe: peliculaA);
		add: (unSubTicketPlayOff tercerPuntoDe: peliculaA);
		add: (unSubTicketPlayOff cuartoPuntoDe: peliculaA);
		add: (unSubTicketPlayOff quintoPuntoDe: peliculaA).
	tandaPointPB
		add: (unSubTicketPlayOff primerPuntoDe: peliculaB);
		add: (unSubTicketPlayOff segundoPuntoDe: peliculaB);
		add: (unSubTicketPlayOff tercerPuntoDe: peliculaB);
		add: (unSubTicketPlayOff cuartoPuntoDe: peliculaB);
		add: (unSubTicketPlayOff quintoPuntoDe: peliculaB).
	finalTicket
		asociarTituloDeTicket: unSubTicketPlayOff dataIntancePlayOff
		de: unNombreDeInstancia.
	finalTicket asociarPrimeraPeliculaDelTicket: peliculaA.
	finalTicket asociarTandaPointPlayOffDePrimeraPeliculaEnTicket: tandaPointPA.
	finalTicket asociarTandaPointBlackPlayDePrimeraPeliculaEnTicket: unSubTicketPlayOff dataPuntoBlackPlayOffPeliculaA.
	finalTicket asociarSegundaPeliculaDelTicket: peliculaB.
	finalTicket asociarTandaPointPlayOffDeSegundaPeliculaEnTicket: tandaPointPB.
	finalTicket asociarTandaPointBlackPlayDeSegundaPeliculaEnTicket: unSubTicketPlayOff dataPuntoBlackPlayOffPeliculaB.
	self agregarALaListaDeTicketProcesados: finalTicket.! !

!Procesador methodsFor: 'processing - spinoff' stamp: 'MB 4/10/2020 01:42:37'!
asociarPeliculasEnFinalPrecuelaTicket
	finalPrecuelaTicket asociarDataOutSidePeliculas: codificacionAuxiliarA.
	impresora imprimirTicketCineWar: finalPrecuelaTicket.! !

!Procesador methodsFor: 'processing - endMvM' stamp: 'MB 4/9/2020 01:53:31'!
asociarPrimeraRondaPointExpressEnEndMvM: unFinalTicketCineWarMvM deTicket: unTicketCineWar
	self
		asociarPrimeraTandaDePointExpressDePrimeraRondaEnEndMvM: unFinalTicketCineWarMvM
		enTicket: unTicketCineWar.
	self
		asociarSegundaTandaDePointExpressDePrimeraRondaEnEndMvM: unFinalTicketCineWarMvM
		enTicket: unTicketCineWar.
	self
		asociarRepechajeTandaDePointExpressDePrimeraRondaEnEndMvM: unFinalTicketCineWarMvM
		enTicket: unTicketCineWar.! !

!Procesador methodsFor: 'processing - introMvM' stamp: 'MB 4/9/2020 01:54:33'!
asociarPrimeraRondaPointExpressEnIntroMvM: unFinalTicketCineWarMvM deTicket: unTicketCineWar
	self
		asociarPrimeraTandaDePointExpressDePrimeraRondaEnIntroMvM: unFinalTicketCineWarMvM
		enTicket: unTicketCineWar.
	self
		asociarSegundaTandaDePointExpressDePrimeraRondaEnIntroMvM: unFinalTicketCineWarMvM
		enTicket: unTicketCineWar.
	self
		asociarRepechajeTandaDePointExpressDePrimeraRondaEnIntroMvM: unFinalTicketCineWarMvM
		enTicket: unTicketCineWar.! !

!Procesador methodsFor: 'processing - preEndMvM' stamp: 'MB 4/9/2020 01:52:32'!
asociarPrimeraRondaPointExpressEnPreEndMvM: unFinalTicketCineWarMvM deTicket: unTicketCineWar
	self
		asociarPrimeraTandaDePointExpressDePrimeraRondaEnPreEndMvM: unFinalTicketCineWarMvM
		enTicket: unTicketCineWar.
	self
		asociarSegundaTandaDePointExpressDePrimeraRondaEnPreEndMvM: unFinalTicketCineWarMvM
		enTicket: unTicketCineWar.
	self
		asociarRepechajeTandaDePointExpressDePrimeraRondaEnPreEndMvM: unFinalTicketCineWarMvM
		enTicket: unTicketCineWar.! !

!Procesador methodsFor: 'processing - endMvM' stamp: 'MB 4/9/2020 01:27:18'!
asociarPrimeraTandaDePointExpressDePrimeraRondaEnEndMvM: unFinalTicketCineWarMvM enTicket: unTicketCineWar
	| primeraTandaPointDePeliculaA primeraTandaPointDePeliculaB peliculaA peliculaB |
	peliculaA _ unFinalTicketCineWarMvM primeraPelicula.
	peliculaB _ unFinalTicketCineWarMvM segundaPelicula.
	primeraTandaPointDePeliculaA _ self
		retonarPrimeraTandaPointDePrimeraRondaDeEndMvM: peliculaA
		en: unTicketCineWar.
	primeraTandaPointDePeliculaB _ self
		retonarPrimeraTandaPointDePrimeraRondaDeEndMvM: peliculaB
		en: unTicketCineWar.
	unFinalTicketCineWarMvM asociarPrimeraTandaPointExpressDePrimeraRondaDePeliculaA: primeraTandaPointDePeliculaA.
	unFinalTicketCineWarMvM asociarPrimeraTandaPointExpressDePrimeraRondaDePeliculaB: primeraTandaPointDePeliculaB.! !

!Procesador methodsFor: 'processing - introMvM' stamp: 'MB 4/9/2020 01:55:02'!
asociarPrimeraTandaDePointExpressDePrimeraRondaEnIntroMvM: unFinalTicketCineWarMvM enTicket: unTicketCineWar
	| primeraTandaPointDePeliculaA primeraTandaPointDePeliculaB peliculaA peliculaB |
	peliculaA _ unFinalTicketCineWarMvM primeraPelicula.
	peliculaB _ unFinalTicketCineWarMvM segundaPelicula.
	primeraTandaPointDePeliculaA _ self
		retonarPrimeraTandaPointDePrimeraRondaDeIntroMvM: peliculaA
		en: unTicketCineWar.
	primeraTandaPointDePeliculaB _ self
		retonarPrimeraTandaPointDePrimeraRondaDeIntroMvM: peliculaB
		en: unTicketCineWar.
	unFinalTicketCineWarMvM asociarPrimeraTandaPointExpressDePrimeraRondaDePeliculaA: primeraTandaPointDePeliculaA.
	unFinalTicketCineWarMvM asociarPrimeraTandaPointExpressDePrimeraRondaDePeliculaB: primeraTandaPointDePeliculaB.! !

!Procesador methodsFor: 'processing - preEndMvM' stamp: 'MB 4/9/2020 01:52:01'!
asociarPrimeraTandaDePointExpressDePrimeraRondaEnPreEndMvM: unFinalTicketCineWarMvM enTicket: unTicketCineWar
	| primeraTandaPointDePeliculaA primeraTandaPointDePeliculaB peliculaA peliculaB |
	peliculaA _ unFinalTicketCineWarMvM primeraPelicula.
	peliculaB _ unFinalTicketCineWarMvM segundaPelicula.
	primeraTandaPointDePeliculaA _ self
		retonarPrimeraTandaPointDePrimeraRondaPreEndMvMDe: peliculaA
		en: unTicketCineWar.
	primeraTandaPointDePeliculaB _ self
		retonarPrimeraTandaPointDePrimeraRondaPreEndMvMDe: peliculaB
		en: unTicketCineWar.
	unFinalTicketCineWarMvM asociarPrimeraTandaPointExpressDePrimeraRondaDePeliculaA: primeraTandaPointDePeliculaA.
	unFinalTicketCineWarMvM asociarPrimeraTandaPointExpressDePrimeraRondaDePeliculaB: primeraTandaPointDePeliculaB.! !

!Procesador methodsFor: 'processing - endMvM' stamp: 'MB 4/9/2020 01:28:17'!
asociarPrimeraTandaDePointExpressDeRondaRevanchaEnEndMvM: unFinalTicketCineWarMvM enTicket: unTicketCineWar
	| primeraTandaPointDePeliculaA primeraTandaPointDePeliculaB peliculaA peliculaB |
	peliculaA _ unFinalTicketCineWarMvM primeraPelicula.
	peliculaB _ unFinalTicketCineWarMvM segundaPelicula.
	primeraTandaPointDePeliculaA _ self
		retonarPrimeraTandaPointDeRondaRevanchaDeEndMvM: peliculaA
		en: unTicketCineWar.
	primeraTandaPointDePeliculaB _ self
		retonarPrimeraTandaPointDeRondaRevanchaDeEndMvM: peliculaB
		en: unTicketCineWar.
	unFinalTicketCineWarMvM asociarPrimeraTandaPointExpressDeRondaRevanchaDePeliculaA: primeraTandaPointDePeliculaA.
	unFinalTicketCineWarMvM asociarPrimeraTandaPointExpressDeRondaRevanchaDePeliculaB: primeraTandaPointDePeliculaB.! !

!Procesador methodsFor: 'processing - introMvM' stamp: 'MB 4/9/2020 01:55:31'!
asociarPrimeraTandaDePointExpressDeRondaRevanchaEnIntroMvM: unFinalTicketCineWarMvM enTicket: unTicketCineWar
	| primeraTandaPointDePeliculaA primeraTandaPointDePeliculaB peliculaA peliculaB |
	peliculaA _ unFinalTicketCineWarMvM primeraPelicula.
	peliculaB _ unFinalTicketCineWarMvM segundaPelicula.
	primeraTandaPointDePeliculaA _ self
		retonarPrimeraTandaPointDeRondaRevanchaDeIntroMvM: peliculaA
		en: unTicketCineWar.
	primeraTandaPointDePeliculaB _ self
		retonarPrimeraTandaPointDeRondaRevanchaDeIntroMvM: peliculaB
		en: unTicketCineWar.
	unFinalTicketCineWarMvM asociarPrimeraTandaPointExpressDeRondaRevanchaDePeliculaA: primeraTandaPointDePeliculaA.
	unFinalTicketCineWarMvM asociarPrimeraTandaPointExpressDeRondaRevanchaDePeliculaB: primeraTandaPointDePeliculaB.! !

!Procesador methodsFor: 'processing - preEndMvM' stamp: 'MB 4/9/2020 01:51:27'!
asociarPrimeraTandaDePointExpressDeRondaRevanchaEnPreEndMvM: unFinalTicketCineWarMvM enTicket: unTicketCineWar
	| primeraTandaPointDePeliculaA primeraTandaPointDePeliculaB peliculaA peliculaB |
	peliculaA _ unFinalTicketCineWarMvM primeraPelicula.
	peliculaB _ unFinalTicketCineWarMvM segundaPelicula.
	primeraTandaPointDePeliculaA _ self
		retonarPrimeraTandaPointDeRondaRevanchaPreEndMvMDe: peliculaA
		en: unTicketCineWar.
	primeraTandaPointDePeliculaB _ self
		retonarPrimeraTandaPointDeRondaRevanchaPreEndMvMDe: peliculaB
		en: unTicketCineWar.
	unFinalTicketCineWarMvM asociarPrimeraTandaPointExpressDeRondaRevanchaDePeliculaA: primeraTandaPointDePeliculaA.
	unFinalTicketCineWarMvM asociarPrimeraTandaPointExpressDeRondaRevanchaDePeliculaB: primeraTandaPointDePeliculaB.! !

!Procesador methodsFor: 'processing - top puntajes' stamp: 'MB 4/9/2020 02:00:50'!
asociarPuntajesFinales: unRegistro en: unFinalTicketCineWar
	| puntajeFinalPeliculaA puntajeFinalPeliculaB peliculaA peliculaB |
	peliculaA _ unFinalTicketCineWar primeraPelicula.
	peliculaB _ unFinalTicketCineWar segundaPelicula.
	puntajeFinalPeliculaA _ decodificador decodificar: (unRegistro retornaPuntajeDe: peliculaA).
	puntajeFinalPeliculaB _ decodificador decodificar: (unRegistro retornaPuntajeDe: peliculaB).
	unFinalTicketCineWar puntajeFinalPeliculaA: puntajeFinalPeliculaA.
	unFinalTicketCineWar puntajeFinalPeliculaB: puntajeFinalPeliculaB.! !

!Procesador methodsFor: 'processing - endMvM' stamp: 'MB 4/9/2020 01:29:08'!
asociarRepechajeTandaDePointExpressDePrimeraRondaEnEndMvM: unFinalTicketCineWarMvM enTicket: unTicketCineWar
	| primeraTandaPointDePeliculaA primeraTandaPointDePeliculaB peliculaA peliculaB |
	peliculaA _ unFinalTicketCineWarMvM primeraPelicula.
	peliculaB _ unFinalTicketCineWarMvM segundaPelicula.
	primeraTandaPointDePeliculaA _ self
		retonarRepechajeTandaPointDePrimeraRondaDeEndMvM: peliculaA
		en: unTicketCineWar.
	primeraTandaPointDePeliculaB _ self
		retonarRepechajeTandaPointDePrimeraRondaDeEndMvM: peliculaB
		en: unTicketCineWar.
	unFinalTicketCineWarMvM asociarRepechajeTandaPointExpressDePrimeraRondaDePeliculaA: primeraTandaPointDePeliculaA.
	unFinalTicketCineWarMvM asociarRepechajeTandaPointExpressDePrimeraRondaDePeliculaB: primeraTandaPointDePeliculaB.! !

!Procesador methodsFor: 'processing - introMvM' stamp: 'MB 4/9/2020 01:55:58'!
asociarRepechajeTandaDePointExpressDePrimeraRondaEnIntroMvM: unFinalTicketCineWarMvM enTicket: unTicketCineWar
	| primeraTandaPointDePeliculaA primeraTandaPointDePeliculaB peliculaA peliculaB |
	peliculaA _ unFinalTicketCineWarMvM primeraPelicula.
	peliculaB _ unFinalTicketCineWarMvM segundaPelicula.
	primeraTandaPointDePeliculaA _ self
		retonarRepechajeTandaPointDePrimeraRondaDeIntroMvM: peliculaA
		en: unTicketCineWar.
	primeraTandaPointDePeliculaB _ self
		retonarRepechajeTandaPointDePrimeraRondaDeIntroMvM: peliculaB
		en: unTicketCineWar.
	unFinalTicketCineWarMvM asociarRepechajeTandaPointExpressDePrimeraRondaDePeliculaA: primeraTandaPointDePeliculaA.
	unFinalTicketCineWarMvM asociarRepechajeTandaPointExpressDePrimeraRondaDePeliculaB: primeraTandaPointDePeliculaB.! !

!Procesador methodsFor: 'processing - preEndMvM' stamp: 'MB 4/9/2020 01:51:01'!
asociarRepechajeTandaDePointExpressDePrimeraRondaEnPreEndMvM: unFinalTicketCineWarMvM enTicket: unTicketCineWar
	| primeraTandaPointDePeliculaA primeraTandaPointDePeliculaB peliculaA peliculaB |
	peliculaA _ unFinalTicketCineWarMvM primeraPelicula.
	peliculaB _ unFinalTicketCineWarMvM segundaPelicula.
	primeraTandaPointDePeliculaA _ self
		retonarRepechajeTandaPointDePrimeraRondaPreEndMvMDe: peliculaA
		en: unTicketCineWar.
	primeraTandaPointDePeliculaB _ self
		retonarRepechajeTandaPointDePrimeraRondaPreEndMvMDe: peliculaB
		en: unTicketCineWar.
	unFinalTicketCineWarMvM asociarRepechajeTandaPointExpressDePrimeraRondaDePeliculaA: primeraTandaPointDePeliculaA.
	unFinalTicketCineWarMvM asociarRepechajeTandaPointExpressDePrimeraRondaDePeliculaB: primeraTandaPointDePeliculaB.! !

!Procesador methodsFor: 'processing - endMvM' stamp: 'MB 4/9/2020 01:32:45'!
asociarRepechajeTandaDePointExpressDeRondaRevanchaEnEndMvM: unFinalTicketCineWarMvM enTicket: unTicketCineWar
	| primeraTandaPointDePeliculaA primeraTandaPointDePeliculaB peliculaA peliculaB |
	peliculaA _ unFinalTicketCineWarMvM primeraPelicula.
	peliculaB _ unFinalTicketCineWarMvM segundaPelicula.
	primeraTandaPointDePeliculaA _ self
		retonarRepechajeTandaPointDeRondaRevanchaDeEndMvM: peliculaA
		en: unTicketCineWar.
	primeraTandaPointDePeliculaB _ self
		retonarRepechajeTandaPointDeRondaRevanchaDeEndMvM: peliculaB
		en: unTicketCineWar.
	unFinalTicketCineWarMvM asociarRepechajeTandaPointExpressDeRondaRevanchaDePeliculaA: primeraTandaPointDePeliculaA.
	unFinalTicketCineWarMvM asociarRepechajeTandaPointExpressDeRondaRevanchaDePeliculaB: primeraTandaPointDePeliculaB.! !

!Procesador methodsFor: 'processing - introMvM' stamp: 'MB 4/9/2020 01:56:23'!
asociarRepechajeTandaDePointExpressDeRondaRevanchaEnIntroMvM: unFinalTicketCineWarMvM enTicket: unTicketCineWar
	| primeraTandaPointDePeliculaA primeraTandaPointDePeliculaB peliculaA peliculaB |
	peliculaA _ unFinalTicketCineWarMvM primeraPelicula.
	peliculaB _ unFinalTicketCineWarMvM segundaPelicula.
	primeraTandaPointDePeliculaA _ self
		retonarRepechajeTandaPointDeRondaRevanchaDeIntroMvM: peliculaA
		en: unTicketCineWar.
	primeraTandaPointDePeliculaB _ self
		retonarRepechajeTandaPointDeRondaRevanchaDeIntroMvM: peliculaB
		en: unTicketCineWar.
	unFinalTicketCineWarMvM asociarRepechajeTandaPointExpressDeRondaRevanchaDePeliculaA: primeraTandaPointDePeliculaA.
	unFinalTicketCineWarMvM asociarRepechajeTandaPointExpressDeRondaRevanchaDePeliculaB: primeraTandaPointDePeliculaB.! !

!Procesador methodsFor: 'processing - preEndMvM' stamp: 'MB 4/9/2020 01:50:30'!
asociarRepechajeTandaDePointExpressDeRondaRevanchaEnPreEndMvM: unFinalTicketCineWarMvM enTicket: unTicketCineWar
	| primeraTandaPointDePeliculaA primeraTandaPointDePeliculaB peliculaA peliculaB |
	peliculaA _ unFinalTicketCineWarMvM primeraPelicula.
	peliculaB _ unFinalTicketCineWarMvM segundaPelicula.
	primeraTandaPointDePeliculaA _ self
		retonarRepechajeTandaPointDeRondaRevanchaPreEndMvMDe: peliculaA
		en: unTicketCineWar.
	primeraTandaPointDePeliculaB _ self
		retonarRepechajeTandaPointDeRondaRevanchaPreEndMvMDe: peliculaB
		en: unTicketCineWar.
	unFinalTicketCineWarMvM asociarRepechajeTandaPointExpressDeRondaRevanchaDePeliculaA: primeraTandaPointDePeliculaA.
	unFinalTicketCineWarMvM asociarRepechajeTandaPointExpressDeRondaRevanchaDePeliculaB: primeraTandaPointDePeliculaB.! !

!Procesador methodsFor: 'processing - endMvM' stamp: 'MB 4/9/2020 01:34:32'!
asociarRondaRevanchaPointExpresEnEndMvM: unFinalTicketCineWarMvM deTicket: unTicketCineWar
	self
		asociarPrimeraTandaDePointExpressDeRondaRevanchaEnEndMvM: unFinalTicketCineWarMvM
		enTicket: unTicketCineWar.
	self
		asociarSegundaTandaDePointExpressDeRondaRevanchaEnEndMvM: unFinalTicketCineWarMvM
		enTicket: unTicketCineWar.
	self
		asociarRepechajeTandaDePointExpressDeRondaRevanchaEnEndMvM: unFinalTicketCineWarMvM
		enTicket: unTicketCineWar.! !

!Procesador methodsFor: 'processing - introMvM' stamp: 'MB 4/9/2020 01:56:48'!
asociarRondaRevanchaPointExpresEnIntroMvM: unFinalTicketCineWarMvM deTicket: unTicketCineWar
	self
		asociarPrimeraTandaDePointExpressDeRondaRevanchaEnIntroMvM: unFinalTicketCineWarMvM
		enTicket: unTicketCineWar.
	self
		asociarSegundaTandaDePointExpressDeRondaRevanchaEnIntroMvM: unFinalTicketCineWarMvM
		enTicket: unTicketCineWar.
	self
		asociarRepechajeTandaDePointExpressDeRondaRevanchaEnIntroMvM: unFinalTicketCineWarMvM
		enTicket: unTicketCineWar.! !

!Procesador methodsFor: 'processing - preEndMvM' stamp: 'MB 4/9/2020 01:49:57'!
asociarRondaRevanchaPointExpresEnPreEndMvM: unFinalTicketCineWarMvM deTicket: unTicketCineWar
	self
		asociarPrimeraTandaDePointExpressDeRondaRevanchaEnPreEndMvM: unFinalTicketCineWarMvM
		enTicket: unTicketCineWar.
	self
		asociarSegundaTandaDePointExpressDeRondaRevanchaEnPreEndMvM: unFinalTicketCineWarMvM
		enTicket: unTicketCineWar.
	self
		asociarRepechajeTandaDePointExpressDeRondaRevanchaEnPreEndMvM: unFinalTicketCineWarMvM
		enTicket: unTicketCineWar.! !

!Procesador methodsFor: 'processing - endMvM' stamp: 'MB 4/9/2020 01:35:01'!
asociarSegundaTandaDePointExpressDePrimeraRondaEnEndMvM: unFinalTicketCineWarMvM enTicket: unTicketCineWar
	| primeraTandaPointDePeliculaA primeraTandaPointDePeliculaB peliculaA peliculaB |
	peliculaA _ unFinalTicketCineWarMvM primeraPelicula.
	peliculaB _ unFinalTicketCineWarMvM segundaPelicula.
	primeraTandaPointDePeliculaA _ self
		retonarSegundaTandaPointDePrimeraRondaDeEndMvM: peliculaA
		en: unTicketCineWar.
	primeraTandaPointDePeliculaB _ self
		retonarSegundaTandaPointDePrimeraRondaDeEndMvM: peliculaB
		en: unTicketCineWar.
	unFinalTicketCineWarMvM asociarSegundaTandaPointExpressDePrimeraRondaDePeliculaA: primeraTandaPointDePeliculaA.
	unFinalTicketCineWarMvM asociarSegundaTandaPointExpressDePrimeraRondaDePeliculaB: primeraTandaPointDePeliculaB.! !

!Procesador methodsFor: 'processing - introMvM' stamp: 'MB 4/9/2020 01:57:18'!
asociarSegundaTandaDePointExpressDePrimeraRondaEnIntroMvM: unFinalTicketCineWarMvM enTicket: unTicketCineWar
	| primeraTandaPointDePeliculaA primeraTandaPointDePeliculaB peliculaA peliculaB |
	peliculaA _ unFinalTicketCineWarMvM primeraPelicula.
	peliculaB _ unFinalTicketCineWarMvM segundaPelicula.
	primeraTandaPointDePeliculaA _ self
		retonarSegundaTandaPointDePrimeraRondaDeIntroMvM: peliculaA
		en: unTicketCineWar.
	primeraTandaPointDePeliculaB _ self
		retonarSegundaTandaPointDePrimeraRondaDeIntroMvM: peliculaB
		en: unTicketCineWar.
	unFinalTicketCineWarMvM asociarSegundaTandaPointExpressDePrimeraRondaDePeliculaA: primeraTandaPointDePeliculaA.
	unFinalTicketCineWarMvM asociarSegundaTandaPointExpressDePrimeraRondaDePeliculaB: primeraTandaPointDePeliculaB.! !

!Procesador methodsFor: 'processing - preEndMvM' stamp: 'MB 4/9/2020 01:49:06'!
asociarSegundaTandaDePointExpressDePrimeraRondaEnPreEndMvM: unFinalTicketCineWarMvM enTicket: unTicketCineWar
	| primeraTandaPointDePeliculaA primeraTandaPointDePeliculaB peliculaA peliculaB |
	peliculaA _ unFinalTicketCineWarMvM primeraPelicula.
	peliculaB _ unFinalTicketCineWarMvM segundaPelicula.
	primeraTandaPointDePeliculaA _ self
		retonarSegundaTandaPointDePrimeraRondaPreEndMvMDe: peliculaA
		en: unTicketCineWar.
	primeraTandaPointDePeliculaB _ self
		retonarSegundaTandaPointDePrimeraRondaPreEndMvMDe: peliculaB
		en: unTicketCineWar.
	unFinalTicketCineWarMvM asociarSegundaTandaPointExpressDePrimeraRondaDePeliculaA: primeraTandaPointDePeliculaA.
	unFinalTicketCineWarMvM asociarSegundaTandaPointExpressDePrimeraRondaDePeliculaB: primeraTandaPointDePeliculaB.! !

!Procesador methodsFor: 'processing - endMvM' stamp: 'MB 4/9/2020 01:35:32'!
asociarSegundaTandaDePointExpressDeRondaRevanchaEnEndMvM: unFinalTicketCineWarMvM enTicket: unTicketCineWar
	| primeraTandaPointDePeliculaA primeraTandaPointDePeliculaB peliculaA peliculaB |
	peliculaA _ unFinalTicketCineWarMvM primeraPelicula.
	peliculaB _ unFinalTicketCineWarMvM segundaPelicula.
	primeraTandaPointDePeliculaA _ self
		retonarSegundaTandaPointDeRondaRevanchaDeEndMvM: peliculaA
		en: unTicketCineWar.
	primeraTandaPointDePeliculaB _ self
		retonarSegundaTandaPointDeRondaRevanchaDeEndMvM: peliculaB
		en: unTicketCineWar.
	unFinalTicketCineWarMvM asociarSegundaTandaPointExpressDeRondaRevanchaDePeliculaA: primeraTandaPointDePeliculaA.
	unFinalTicketCineWarMvM asociarSegundaTandaPointExpressDeRondaRevanchaDePeliculaB: primeraTandaPointDePeliculaB.! !

!Procesador methodsFor: 'processing - introMvM' stamp: 'MB 4/9/2020 01:57:53'!
asociarSegundaTandaDePointExpressDeRondaRevanchaEnIntroMvM: unFinalTicketCineWarMvM enTicket: unTicketCineWar
	| primeraTandaPointDePeliculaA primeraTandaPointDePeliculaB peliculaA peliculaB |
	peliculaA _ unFinalTicketCineWarMvM primeraPelicula.
	peliculaB _ unFinalTicketCineWarMvM segundaPelicula.
	primeraTandaPointDePeliculaA _ self
		retonarSegundaTandaPointDeRondaRevanchaDeIntroMvM: peliculaA
		en: unTicketCineWar.
	primeraTandaPointDePeliculaB _ self
		retonarSegundaTandaPointDeRondaRevanchaDeIntroMvM: peliculaB
		en: unTicketCineWar.
	unFinalTicketCineWarMvM asociarSegundaTandaPointExpressDeRondaRevanchaDePeliculaA: primeraTandaPointDePeliculaA.
	unFinalTicketCineWarMvM asociarSegundaTandaPointExpressDeRondaRevanchaDePeliculaB: primeraTandaPointDePeliculaB.! !

!Procesador methodsFor: 'processing - preEndMvM' stamp: 'MB 4/9/2020 01:48:02'!
asociarSegundaTandaDePointExpressDeRondaRevanchaEnPreEndMvM: unFinalTicketCineWarMvM enTicket: unTicketCineWar
	| primeraTandaPointDePeliculaA primeraTandaPointDePeliculaB peliculaA peliculaB |
	peliculaA _ unFinalTicketCineWarMvM primeraPelicula.
	peliculaB _ unFinalTicketCineWarMvM segundaPelicula.
	primeraTandaPointDePeliculaA _ self
		retonarSegundaTandaPointDeRondaRevanchaPreEndMvMDe: peliculaA
		en: unTicketCineWar.
	primeraTandaPointDePeliculaB _ self
		retonarSegundaTandaPointDeRondaRevanchaPreEndMvMDe: peliculaB
		en: unTicketCineWar.
	unFinalTicketCineWarMvM asociarSegundaTandaPointExpressDeRondaRevanchaDePeliculaA: primeraTandaPointDePeliculaA.
	unFinalTicketCineWarMvM asociarSegundaTandaPointExpressDeRondaRevanchaDePeliculaB: primeraTandaPointDePeliculaB.! !

!Procesador methodsFor: 'accessing' stamp: 'MB 3/26/2019 18:14:15'!
codificacionAuxiliarB
	^ codificacionAuxiliarB.! !

!Procesador methodsFor: 'accessing' stamp: 'MB 3/26/2019 18:12:24'!
codificacionAuxiliarC
	^ codificacionAuxiliarC.! !

!Procesador methodsFor: 'private - processing' stamp: 'MB 3/17/2019 23:25:40'!
estadoCantidadDePeliculas: unaListaDePuntos 
	
	^ AnalizadorDeCantidadDePeliculas unEstadoDeCantidadDePeliculas: unaListaDePuntos ! !

!Procesador methodsFor: 'initialization' stamp: 'MB 4/9/2020 01:24:41'!
initialize
	listaDePreticketPlayOffProcesados _ OrderedCollection new.
	listaDePreticketCineWarProcesados _ OrderedCollection new.
	finalTicket _ FinalTicketPlayOff new.
	finalTicketStageGroup _ FinalTicketCineWarStageGroup new.
	finalTicketMvM _ FinalTicketCineWarMvM new.
	finalPrecuelaTicket _ FinalPrecuelaTicket new.
	decodificador _ Decodificador new.
	impresora _ Impresora new.
	codificacionAuxiliarA _ ''.
	codificacionAuxiliarB _ ''.
	codificacionAuxiliarC _ ''.! !

!Procesador methodsFor: 'accessing' stamp: 'MB 4/9/2020 01:24:41'!
listaDePreticketColiseumProcesados
	^ listaDePreticketCineWarProcesados.! !

!Procesador methodsFor: 'accessing' stamp: 'MB 3/7/2019 21:43:42'!
listaDePreticketPlayOffProcesados
	^ listaDePreticketPlayOffProcesados.! !

!Procesador methodsFor: 'private - processing' stamp: 'MB 4/10/2020 01:42:37'!
mandarAImprimirTicket: unFinalTicketCineWar
	impresora imprimirTicketCineWar: unFinalTicketCineWar.! !

!Procesador methodsFor: 'processing - playoff' stamp: 'MB 3/7/2019 21:41:12'!
procesamientoDeTicketPlayOff: unPreTicketPlayOff de: nombreDeLaInstancia
	(self analizarEstadoDePreTicketPlayOff: unPreTicketPlayOff)
		realizarProcesamientoDePreticket: unPreTicketPlayOff
		de: nombreDeLaInstancia.! !

!Procesador methodsFor: 'processing - stagegroup' stamp: 'MB 3/26/2019 18:11:02'!
procesarGanadorBonusInvitacion: unNombreDeLaPelicula
	| peliculaProcesada |
	peliculaProcesada _ unNombreDeLaPelicula append: ' - '.
	codificacionAuxiliarC _ codificacionAuxiliarC append: peliculaProcesada.! !

!Procesador methodsFor: 'processing - stagegroup' stamp: 'MB 4/9/2020 01:38:50'!
procesarGanadoresDeCupoEnStageGroup: unTicketCineWar
	| primerGanadorDeCupo segundoGanadorDeCupo tercerGanadorDeCupo cuartoGanadorDeCupo |
	primerGanadorDeCupo _ unTicketCineWar primerGanadorCupoDeStageGroup.
	segundoGanadorDeCupo _ unTicketCineWar segundoGanadorCupoDeStageGroup.
	tercerGanadorDeCupo _ unTicketCineWar tercerGanadorCupoDeGroup.
	cuartoGanadorDeCupo _ unTicketCineWar cuartoGanadorCupoDeStageGroup.
	finalTicketStageGroup asociarPrimerGanadorDeCupo: primerGanadorDeCupo.
	finalTicketStageGroup asociarSegundoGanadorDeCupo: segundoGanadorDeCupo.
	finalTicketStageGroup asociarTercerGanadorDeCupo: tercerGanadorDeCupo.
	finalTicketStageGroup asociarCuartoGanadorDeCupo: cuartoGanadorDeCupo.! !

!Procesador methodsFor: 'processing - spinoff' stamp: 'MB 3/26/2019 18:13:54'!
procesarPeliculaEnPrecuelaTicket: unaPelicula
	| nombreDeLaPelicula peliculaProcesada |
	nombreDeLaPelicula _ unaPelicula nombre.
	peliculaProcesada _ nombreDeLaPelicula append: ' - '.
	codificacionAuxiliarA _ codificacionAuxiliarA append: peliculaProcesada.! !

!Procesador methodsFor: 'processing - top puntajes' stamp: 'MB 3/22/2019 00:25:28'!
procesarPeliculasEnTop: unaListaDePeliculasEnTop 

	^ (self estadoCantidadDePeliculas: unaListaDePeliculasEnTop ) definirProcesamientoPeliculasEnTopTicket: unaListaDePeliculasEnTop en: self! !

!Procesador methodsFor: 'processing - stagegroup' stamp: 'MB 3/22/2019 01:01:11'!
procesarPeliculasGanadorasDeBonusInvitacion: unaListaDePeliculas 
	
	^ (self estadoCantidadDePeliculas: unaListaDePeliculas ) definirProcesamientoPeliculasGanadorasDeBonusInvitacion: unaListaDePeliculas en: self! !

!Procesador methodsFor: 'processing - spinoff' stamp: 'MB 3/17/2019 23:12:15'!
procesarPrecuelaTicket: unaPrecuelaTicket 
	
	| listaDePeliculasEnOutSideStageGroup |
	
	
	listaDePeliculasEnOutSideStageGroup _ unaPrecuelaTicket dataOutSidePeliculasEnStageGroup .
	
	(self estadoCantidadDePeliculas: listaDePeliculasEnOutSideStageGroup ) definirProcesamientoDeFinalPrecuelaTicket: listaDePeliculasEnOutSideStageGroup en: self! !

!Procesador methodsFor: 'processing - stagegroup' stamp: 'MB 4/9/2020 01:39:08'!
procesarPrimeraRondaStageGroup: unTicketCineWar
	self procesarPrimeraTandaPointDePrimeraRondaStageGroupDe: unTicketCineWar.
	self procesarSegundaTandaPointDePrimeraRondaStageGroupDe: unTicketCineWar.
	self procesarTandaRepechajePointDePrimeraRondaStageGroupDe: unTicketCineWar.! !

!Procesador methodsFor: 'processing - stagegroup' stamp: 'MB 4/9/2020 01:39:27'!
procesarPrimeraTandaPointDePrimeraRondaStageGroupDe: unTicketCineWar
	| primeraTandaDePrimerCupo primeraTandaDeSegundoCupo primeraTandaDeTercerCupo primeraTandaDeCuartoCupo |
	primeraTandaDePrimerCupo _ decodificador codificarTandaDePuntos: unTicketCineWar dataPrimeraTandaDePointExpressEnPrimeraRondaStageGroup.
	primeraTandaDeSegundoCupo _ decodificador codificarTandaDePuntos: unTicketCineWar dataPrimeraTandaDePointExpressEnPrimeraRondaStageGroupII.
	primeraTandaDeTercerCupo _ decodificador codificarTandaDePuntos: unTicketCineWar dataPrimeraTandaDePointExpressEnPrimeraRondaStageGroupIII.
	primeraTandaDeCuartoCupo _ decodificador codificarTandaDePuntos: unTicketCineWar dataPrimeraTandaDePointExpressEnPrimeraRondaStageGroupIV.
	finalTicketStageGroup asociarPrimeraTandaPointEnPrimeraRondaDePeliculaA: primeraTandaDePrimerCupo.
	finalTicketStageGroup asociarPrimeraTandaPointEnPrimeraRondaDePeliculaB: primeraTandaDeSegundoCupo.
	finalTicketStageGroup asociarPrimeraTandaPointEnPrimeraRondaDePeliculaC: primeraTandaDeTercerCupo.
	finalTicketStageGroup asociarPrimeraTandaPointEnPrimeraRondaDePeliculaD: primeraTandaDeCuartoCupo.! !

!Procesador methodsFor: 'processing - stagegroup' stamp: 'MB 4/9/2020 01:40:00'!
procesarPrimeraTandaPointDeRondaRevanchaStageGroupDe: unTicketCineWar
	| primeraTandaDePrimerCupo primeraTandaDeSegundoCupo primeraTandaDeTercerCupo primeraTandaDeCuartoCupo |
	primeraTandaDePrimerCupo _ decodificador codificarTandaDePuntos: unTicketCineWar dataPrimeraTandaDePointExpressEnRondaRevanchaStageGroup.
	primeraTandaDeSegundoCupo _ decodificador codificarTandaDePuntos: unTicketCineWar dataPrimeraTandaDePointExpressEnRondaRevanchaStageGroupII.
	primeraTandaDeTercerCupo _ decodificador codificarTandaDePuntos: unTicketCineWar dataPrimeraTandaDePointExpressEnRondaRevanchaStageGroupIII.
	primeraTandaDeCuartoCupo _ decodificador codificarTandaDePuntos: unTicketCineWar dataPrimeraTandaDePointExpressEnRondaRevanchaStageGroupIV.
	finalTicketStageGroup asociarPrimeraTandaPointEnRondaRevanchaDePeliculaA: primeraTandaDePrimerCupo.
	finalTicketStageGroup asociarPrimeraTandaPointEnRondaRevanchaDePeliculaB: primeraTandaDeSegundoCupo.
	finalTicketStageGroup asociarPrimeraTandaPointEnRondaRevanchaDePeliculaC: primeraTandaDeTercerCupo.
	finalTicketStageGroup asociarPrimeraTandaPointEnRondaRevanchaDePeliculaD: primeraTandaDeCuartoCupo.! !

!Procesador methodsFor: 'processing - stagegroup' stamp: 'MB 4/9/2020 01:40:17'!
procesarRanking: unTicketCineWar
	| rankingBonus registroPuntajes tituloRanking tituloBonus tituloStage |
	tituloStage _ unTicketCineWar tituloTicket.
	tituloRanking _ 'Ranking ' append: tituloStage.
	tituloBonus _ 'Registro puntajes ' append: tituloStage.
	rankingBonus _ unTicketCineWar dataRanking at: tituloRanking.
	registroPuntajes _ unTicketCineWar dataRanking at: tituloBonus.
	finalTicketStageGroup asociarPuestosDeRanking: rankingBonus.
	finalTicketStageGroup asociarCantidadDePuntosDePuesto: registroPuntajes.! !

!Procesador methodsFor: 'processing - stagegroup' stamp: 'MB 4/9/2020 01:40:33'!
procesarRondaRevanchaStageGroup: unTicketCineWar
	self procesarPrimeraTandaPointDeRondaRevanchaStageGroupDe: unTicketCineWar.
	self procesarSegundaTandaPointDeRondaRevanchaStageGroupDe: unTicketCineWar.
	self procesarTandaRepechajePointDeRondaRevanchaStageGroupDe: unTicketCineWar.! !

!Procesador methodsFor: 'processing - stagegroup' stamp: 'MB 4/9/2020 01:41:02'!
procesarSegundaTandaPointDePrimeraRondaStageGroupDe: unTicketCineWar
	| segundaTandaDePrimerCupo segundaTandaDeSegundoCupo segundaTandaDeTercerCupo segundaTandaDeCuartoCupo |
	segundaTandaDePrimerCupo _ decodificador codificarTandaDePuntos: unTicketCineWar dataSegundaTandaDePointExpressEnPrimeraRondaStageGroup.
	segundaTandaDeSegundoCupo _ decodificador codificarTandaDePuntos: unTicketCineWar dataSegundaTandaDePointExpressEnPrimeraRondaStageGroupII.
	segundaTandaDeTercerCupo _ decodificador codificarTandaDePuntos: unTicketCineWar dataSegundaTandaDePointExpressEnPrimeraRondaStageGroupIII.
	segundaTandaDeCuartoCupo _ decodificador codificarTandaDePuntos: unTicketCineWar dataSegundaTandaDePointExpressEnPrimeraRondaStageGroupIV.
	finalTicketStageGroup asociarSegundaTandaPointEnPrimeraRondaDePeliculaA: segundaTandaDePrimerCupo.
	finalTicketStageGroup asociarSegundaTandaPointEnPrimeraRondaDePeliculaB: segundaTandaDeSegundoCupo.
	finalTicketStageGroup asociarSegundaTandaPointEnPrimeraRondaDePeliculaC: segundaTandaDeTercerCupo.
	finalTicketStageGroup asociarSegundaTandaPointEnPrimeraRondaDePeliculaD: segundaTandaDeCuartoCupo.! !

!Procesador methodsFor: 'processing - stagegroup' stamp: 'MB 4/9/2020 01:41:29'!
procesarSegundaTandaPointDeRondaRevanchaStageGroupDe: unTicketCineWar
	| segundaTandaDePrimerCupo segundaTandaDeSegundoCupo segundaTandaDeTercerCupo segundaTandaDeCuartoCupo |
	segundaTandaDePrimerCupo _ decodificador codificarTandaDePuntos: unTicketCineWar dataSegundaTandaDePointExpressEnRondaRevanchaStageGroup.
	segundaTandaDeSegundoCupo _ decodificador codificarTandaDePuntos: unTicketCineWar dataSegundaTandaDePointExpressEnRondaRevanchaStageGroupII.
	segundaTandaDeTercerCupo _ decodificador codificarTandaDePuntos: unTicketCineWar dataSegundaTandaDePointExpressEnRondaRevanchaStageGroupIII.
	segundaTandaDeCuartoCupo _ decodificador codificarTandaDePuntos: unTicketCineWar dataSegundaTandaDePointExpressEnRondaRevanchaStageGroupIV.
	finalTicketStageGroup asociarSegundaTandaPointEnRondaRevanchaDePeliculaA: segundaTandaDePrimerCupo.
	finalTicketStageGroup asociarSegundaTandaPointEnRondaRevanchaDePeliculaB: segundaTandaDeSegundoCupo.
	finalTicketStageGroup asociarSegundaTandaPointEnRondaRevanchaDePeliculaC: segundaTandaDeTercerCupo.
	finalTicketStageGroup asociarSegundaTandaPointEnRondaRevanchaDePeliculaD: segundaTandaDeCuartoCupo.! !

!Procesador methodsFor: 'processing - stagegroup' stamp: 'MB 4/9/2020 01:41:45'!
procesarTandaRepechajePointDePrimeraRondaStageGroupDe: unTicketCineWar
	| tandaRepechajeDePrimerCupo tandaRepechajeDeSegundoCupo tandaRepechajeDeTercerCupo tandaRepechajeDeCuartoCupo |
	tandaRepechajeDePrimerCupo _ decodificador codificarTandaDePuntos: unTicketCineWar dataRepechajeTandaDePointExpressEnPrimeraRondaStageGroup.
	tandaRepechajeDeSegundoCupo _ decodificador codificarTandaDePuntos: unTicketCineWar dataRepechajeTandaDePointExpressEnPrimeraRondaStageGroupII.
	tandaRepechajeDeTercerCupo _ decodificador codificarTandaDePuntos: unTicketCineWar dataRepechajeTandaDePointExpressEnPrimeraRondaStageGroupIII.
	tandaRepechajeDeCuartoCupo _ decodificador codificarTandaDePuntos: unTicketCineWar dataRepechajeTandaDePointExpressEnPrimeraRondaStageGroupIV.
	finalTicketStageGroup asociarRepechajeTandaPointEnPrimeraRondaDePeliculaA: tandaRepechajeDePrimerCupo.
	finalTicketStageGroup asociarRepechajeTandaPointEnPrimeraRondaDePeliculaB: tandaRepechajeDeSegundoCupo.
	finalTicketStageGroup asociarRepechajeTandaPointEnPrimeraRondaDePeliculaC: tandaRepechajeDeTercerCupo.
	finalTicketStageGroup asociarRepechajeTandaPointEnPrimeraRondaDePeliculaD: tandaRepechajeDeCuartoCupo.! !

!Procesador methodsFor: 'processing - stagegroup' stamp: 'MB 4/9/2020 01:42:04'!
procesarTandaRepechajePointDeRondaRevanchaStageGroupDe: unTicketCineWar
	| tandaRepechajeDePrimerCupo tandaRepechajeDeSegundoCupo tandaRepechajeDeTercerCupo tandaRepechajeDeCuartoCupo |
	tandaRepechajeDePrimerCupo _ decodificador codificarTandaDePuntos: unTicketCineWar dataRepechajeTandaDePointExpressEnRondaRevanchaStageGroup.
	tandaRepechajeDeSegundoCupo _ decodificador codificarTandaDePuntos: unTicketCineWar dataRepechajeTandaDePointExpressEnRondaRevanchaStageGroupII.
	tandaRepechajeDeTercerCupo _ decodificador codificarTandaDePuntos: unTicketCineWar dataRepechajeTandaDePointExpressEnRondaRevanchaStageGroupIII.
	tandaRepechajeDeCuartoCupo _ decodificador codificarTandaDePuntos: unTicketCineWar dataRepechajeTandaDePointExpressEnRondaRevanchaStageGroupIV.
	finalTicketStageGroup asociarRepechajeTandaPointEnRondaRevanchaDePeliculaA: tandaRepechajeDePrimerCupo.
	finalTicketStageGroup asociarRepechajeTandaPointEnRondaRevanchaDePeliculaB: tandaRepechajeDeSegundoCupo.
	finalTicketStageGroup asociarRepechajeTandaPointEnRondaRevanchaDePeliculaC: tandaRepechajeDeTercerCupo.
	finalTicketStageGroup asociarRepechajeTandaPointEnRondaRevanchaDePeliculaD: tandaRepechajeDeCuartoCupo.! !

!Procesador methodsFor: 'processing - stagegroup' stamp: 'MB 4/10/2020 01:42:37'!
procesarTicketColiseumStageGroup: unTicketCineWar
	self procesarTituloTicketColiseumDeStageGroup: unTicketCineWar.
	self procesarGanadoresDeCupoEnStageGroup: unTicketCineWar.
	self procesarPrimeraRondaStageGroup: unTicketCineWar.
	self procesarRondaRevanchaStageGroup: unTicketCineWar.
	self procesarRanking: unTicketCineWar.
	impresora imprimirTicketCineWar: finalTicketStageGroup.! !

!Procesador methodsFor: 'processing - stagegroup' stamp: 'MB 4/9/2020 01:42:33'!
procesarTituloTicketColiseumDeStageGroup: unTicketCineWar
	finalTicketStageGroup asociarTituloDeTicketStageGroup: unTicketCineWar.! !

!Procesador methodsFor: 'processing - top puntajes' stamp: 'MB 3/26/2019 18:13:36'!
procesarTopPelicula: unNombreDePelicula
	| peliculaProcesada |
	peliculaProcesada _ unNombreDePelicula append: ' - '.
	codificacionAuxiliarB _ codificacionAuxiliarB append: peliculaProcesada.! !

!Procesador methodsFor: 'private - processing' stamp: 'MB 4/9/2020 01:24:41'!
resetearListaDePreTicketColiseumProcesados
	listaDePreticketCineWarProcesados removeAll.! !

!Procesador methodsFor: 'processing - endMvM' stamp: 'MB 4/9/2020 01:36:14'!
retonarPrimeraTandaPointDePrimeraRondaDeEndMvM: unNombreDeLaPelicula en: unTicketCineWar
	| listaDeTandaDePuntos tandaDePuntos |
	listaDeTandaDePuntos _ unTicketCineWar dataPrimeraTandaDePointExpressEnPrimeraRondaEndMvM.
	tandaDePuntos _ listaDeTandaDePuntos at: unNombreDeLaPelicula.
	^ decodificador codificarTandaDePuntos: tandaDePuntos.! !

!Procesador methodsFor: 'processing - introMvM' stamp: 'MB 4/9/2020 01:58:42'!
retonarPrimeraTandaPointDePrimeraRondaDeIntroMvM: unNombreDeLaPelicula en: unTicketCineWar
	| listaDeTandaDePuntos tandaDePuntos |
	listaDeTandaDePuntos _ unTicketCineWar dataPrimeraTandaDePointExpressEnPrimeraRondaIntroMvM.
	tandaDePuntos _ listaDeTandaDePuntos at: unNombreDeLaPelicula.
	^ decodificador codificarTandaDePuntos: tandaDePuntos.! !

!Procesador methodsFor: 'processing - preEndMvM' stamp: 'MB 4/9/2020 01:47:30'!
retonarPrimeraTandaPointDePrimeraRondaPreEndMvMDe: unNombreDeLaPelicula en: unTicketCineWar
	| listaDeTandaDePuntos tandaDePuntos |
	listaDeTandaDePuntos _ unTicketCineWar dataPrimeraTandaDePointExpressEnPrimeraRondaPreEndMvM.
	tandaDePuntos _ listaDeTandaDePuntos at: unNombreDeLaPelicula.
	^ decodificador codificarTandaDePuntos: tandaDePuntos.! !

!Procesador methodsFor: 'processing - endMvM' stamp: 'MB 4/9/2020 01:36:30'!
retonarPrimeraTandaPointDeRondaRevanchaDeEndMvM: unNombreDeLaPelicula en: unTicketCineWar
	| listaDeTandaDePuntos tandaDePuntos |
	listaDeTandaDePuntos _ unTicketCineWar dataPrimeraTandaDePointExpressEnRondaRevanchaEndMvM.
	tandaDePuntos _ listaDeTandaDePuntos at: unNombreDeLaPelicula.
	^ decodificador codificarTandaDePuntos: tandaDePuntos.! !

!Procesador methodsFor: 'processing - introMvM' stamp: 'MB 4/9/2020 01:58:55'!
retonarPrimeraTandaPointDeRondaRevanchaDeIntroMvM: unNombreDeLaPelicula en: unTicketCineWar
	| listaDeTandaDePuntos tandaDePuntos |
	listaDeTandaDePuntos _ unTicketCineWar dataPrimeraTandaDePointExpressEnRondaRevanchaIntroMvM.
	tandaDePuntos _ listaDeTandaDePuntos at: unNombreDeLaPelicula.
	^ decodificador codificarTandaDePuntos: tandaDePuntos.! !

!Procesador methodsFor: 'processing - preEndMvM' stamp: 'MB 4/9/2020 01:47:08'!
retonarPrimeraTandaPointDeRondaRevanchaPreEndMvMDe: unNombreDeLaPelicula en: unTicketCineWar
	| listaDeTandaDePuntos tandaDePuntos |
	listaDeTandaDePuntos _ unTicketCineWar dataPrimeraTandaDePointExpressEnRondaRevanchaPreEndMvM.
	tandaDePuntos _ listaDeTandaDePuntos at: unNombreDeLaPelicula.
	^ decodificador codificarTandaDePuntos: tandaDePuntos.! !

!Procesador methodsFor: 'processing - endMvM' stamp: 'MB 4/9/2020 01:36:48'!
retonarRepechajeTandaPointDePrimeraRondaDeEndMvM: unNombreDeLaPelicula en: unTicketCineWar
	| listaDeTandaDePuntos tandaDePuntos |
	listaDeTandaDePuntos _ unTicketCineWar dataRepechajeTandaDePointExpressEnPrimeraRondaEndMvM.
	tandaDePuntos _ listaDeTandaDePuntos at: unNombreDeLaPelicula.
	^ decodificador codificarTandaDePuntos: tandaDePuntos.! !

!Procesador methodsFor: 'processing - introMvM' stamp: 'MB 4/9/2020 01:59:08'!
retonarRepechajeTandaPointDePrimeraRondaDeIntroMvM: unNombreDeLaPelicula en: unTicketCineWar
	| listaDeTandaDePuntos tandaDePuntos |
	listaDeTandaDePuntos _ unTicketCineWar dataRepechajeTandaDePointExpressEnPrimeraRondaIntroMvM.
	tandaDePuntos _ listaDeTandaDePuntos at: unNombreDeLaPelicula.
	^ decodificador codificarTandaDePuntos: tandaDePuntos.! !

!Procesador methodsFor: 'processing - preEndMvM' stamp: 'MB 4/9/2020 01:44:44'!
retonarRepechajeTandaPointDePrimeraRondaPreEndMvMDe: unNombreDeLaPelicula en: unTicketCineWar
	| listaDeTandaDePuntos tandaDePuntos |
	listaDeTandaDePuntos _ unTicketCineWar dataRepechajeTandaDePointExpressEnPrimeraRondaPreEndMvM.
	tandaDePuntos _ listaDeTandaDePuntos at: unNombreDeLaPelicula.
	^ decodificador codificarTandaDePuntos: tandaDePuntos.! !

!Procesador methodsFor: 'processing - endMvM' stamp: 'MB 4/9/2020 01:37:17'!
retonarRepechajeTandaPointDeRondaRevanchaDeEndMvM: unNombreDeLaPelicula en: unTicketCineWar
	| listaDeTandaDePuntos tandaDePuntos |
	listaDeTandaDePuntos _ unTicketCineWar dataRepechajeTandaDePointExpressEnRondaRevanchaEndMvM.
	tandaDePuntos _ listaDeTandaDePuntos at: unNombreDeLaPelicula.
	^ decodificador codificarTandaDePuntos: tandaDePuntos.! !

!Procesador methodsFor: 'processing - introMvM' stamp: 'MB 4/9/2020 01:59:23'!
retonarRepechajeTandaPointDeRondaRevanchaDeIntroMvM: unNombreDeLaPelicula en: unTicketCineWar
	| listaDeTandaDePuntos tandaDePuntos |
	listaDeTandaDePuntos _ unTicketCineWar dataRepechajeTandaDePointExpressEnRondaRevanchaIntroMvM.
	tandaDePuntos _ listaDeTandaDePuntos at: unNombreDeLaPelicula.
	^ decodificador codificarTandaDePuntos: tandaDePuntos.! !

!Procesador methodsFor: 'processing - preEndMvM' stamp: 'MB 4/9/2020 01:44:18'!
retonarRepechajeTandaPointDeRondaRevanchaPreEndMvMDe: unNombreDeLaPelicula en: unTicketCineWar
	| listaDeTandaDePuntos tandaDePuntos |
	listaDeTandaDePuntos _ unTicketCineWar dataRepechajeTandaDePointExpressEnRondaRevanchaPreEndMvM.
	tandaDePuntos _ listaDeTandaDePuntos at: unNombreDeLaPelicula.
	^ decodificador codificarTandaDePuntos: tandaDePuntos.! !

!Procesador methodsFor: 'processing - endMvM' stamp: 'MB 4/9/2020 01:37:31'!
retonarSegundaTandaPointDePrimeraRondaDeEndMvM: unNombreDeLaPelicula en: unTicketCineWar
	| listaDeTandaDePuntos tandaDePuntos |
	listaDeTandaDePuntos _ unTicketCineWar dataSegundaTandaPointExpressDeEndMvM.
	tandaDePuntos _ listaDeTandaDePuntos at: unNombreDeLaPelicula.
	^ decodificador codificarTandaDePuntos: tandaDePuntos.! !

!Procesador methodsFor: 'processing - introMvM' stamp: 'MB 4/9/2020 01:59:38'!
retonarSegundaTandaPointDePrimeraRondaDeIntroMvM: unNombreDeLaPelicula en: unTicketCineWar
	| listaDeTandaDePuntos tandaDePuntos |
	listaDeTandaDePuntos _ unTicketCineWar dataSegundaTandaPointExpressDeIntroMvM.
	tandaDePuntos _ listaDeTandaDePuntos at: unNombreDeLaPelicula.
	^ decodificador codificarTandaDePuntos: tandaDePuntos.! !

!Procesador methodsFor: 'processing - preEndMvM' stamp: 'MB 4/9/2020 01:43:49'!
retonarSegundaTandaPointDePrimeraRondaPreEndMvMDe: unNombreDeLaPelicula en: unTicketCineWar
	| listaDeTandaDePuntos tandaDePuntos |
	listaDeTandaDePuntos _ unTicketCineWar dataSegundaTandaPointExpressDePreEndMvM.
	tandaDePuntos _ listaDeTandaDePuntos at: unNombreDeLaPelicula.
	^ decodificador codificarTandaDePuntos: tandaDePuntos.! !

!Procesador methodsFor: 'processing - endMvM' stamp: 'MB 4/9/2020 01:37:50'!
retonarSegundaTandaPointDeRondaRevanchaDeEndMvM: unNombreDeLaPelicula en: unTicketCineWar
	| listaDeTandaDePuntos tandaDePuntos |
	listaDeTandaDePuntos _ unTicketCineWar dataSegundaTandaDePointExpressEnRondaRevanchaEndMvM.
	tandaDePuntos _ listaDeTandaDePuntos at: unNombreDeLaPelicula.
	^ decodificador codificarTandaDePuntos: tandaDePuntos.! !

!Procesador methodsFor: 'processing - introMvM' stamp: 'MB 4/9/2020 01:59:54'!
retonarSegundaTandaPointDeRondaRevanchaDeIntroMvM: unNombreDeLaPelicula en: unTicketCineWar
	| listaDeTandaDePuntos tandaDePuntos |
	listaDeTandaDePuntos _ unTicketCineWar dataSegundaTandaDePointExpressEnRondaRevanchaIntroMvM.
	tandaDePuntos _ listaDeTandaDePuntos at: unNombreDeLaPelicula.
	^ decodificador codificarTandaDePuntos: tandaDePuntos.! !

!Procesador methodsFor: 'processing - preEndMvM' stamp: 'MB 4/9/2020 01:43:12'!
retonarSegundaTandaPointDeRondaRevanchaPreEndMvMDe: unNombreDeLaPelicula en: unTicketCineWar
	| listaDeTandaDePuntos tandaDePuntos |
	listaDeTandaDePuntos _ unTicketCineWar dataSegundaTandaDePointExpressEnRondaRevanchaPreEndMvM.
	tandaDePuntos _ listaDeTandaDePuntos at: unNombreDeLaPelicula.
	^ decodificador codificarTandaDePuntos: tandaDePuntos.! !

!Procesador methodsFor: 'processing - stagegroup' stamp: 'MB 4/9/2020 01:38:18'!
transcribirTicketStageGroup: unTicketCineWar
	self procesarTicketColiseumStageGroup: unTicketCineWar.! !

!Procesador methodsFor: 'processing - top puntajes' stamp: 'MB 3/22/2019 00:17:49'!
transcribirTopPeliculas: unTopPuntajesDePeliculas enEndTicket: unEndTicket 
	
	 | listaDePeliculasDelTopOrdenada  peliculasEnTop primeraPeliculaEnTop  puntajeDelTop|
	
	listaDePeliculasDelTopOrdenada _ unTopPuntajesDePeliculas keys asOrderedCollection .
	
	primeraPeliculaEnTop _ listaDePeliculasDelTopOrdenada first .
	
	puntajeDelTop _ decodificador  decodificar: (unTopPuntajesDePeliculas at: primeraPeliculaEnTop ) .
	
	peliculasEnTop _ self procesarPeliculasEnTop: listaDePeliculasDelTopOrdenada .
	
	unEndTicket asociarPeliculasEnTop: peliculasEnTop .
	
	unEndTicket asociarPuntajeDelTop: puntajeDelTop .! !

!Procesador methodsFor: 'processing - stagegroup' stamp: 'MB 3/22/2019 00:58:57'!
trascribirPeliculasGanadorasDeBonusInvitacion: unaListaDePeliculas en: unEndTicket 
	
	| peliculasGanadorasDeBonusInvitacionCodificadas |
	
	peliculasGanadorasDeBonusInvitacionCodificadas _ self procesarPeliculasGanadorasDeBonusInvitacion: unaListaDePeliculas .
	
	unEndTicket asociarPeliculasGanadorasDeBonusInvitacion: peliculasGanadorasDeBonusInvitacionCodificadas .! !

!Procesador class methodsFor: 'processing' stamp: 'MB 3/7/2019 21:40:44'!
armarFinalTicketPlayOff: unSubTicketPlayOff de: unNombreDeInstancia
	^ self crearInstancia
		armarFinalTicketPlayOff: unSubTicketPlayOff
		de: unNombreDeInstancia.! !

!Procesador class methodsFor: 'processing' stamp: 'MB 2/23/2019 22:32:00'!
crearInstancia
	
	^ self new! !

!ProveedorDeCantidadDePeliculas class methodsFor: 'proveedor - cantidad de peliculas' stamp: 'MB 11/7/2018 22:01:55'!
unEstadoPara: unaListaDePeliculas 
	
	^( self allSubclasses detect: [:unEstado | unEstado puedeHacerseCargo: unaListaDePeliculas ]) new! !

!EstadoDeMasDeUnaPelicula methodsFor: 'instance status - cantidad de peliculas' stamp: 'MB 11/13/2018 19:53:39'!
definirPeliculaEnZona: unaListaDePeliculas para: unaRuleta 
	
	unaListaDePeliculas do: [:unaPelicula | unaRuleta definirZonaDePelicula: unaPelicula en: unaListaDePeliculas ]! !

!EstadoDeMasDeUnaPelicula methodsFor: 'instance status - cantidad de peliculas' stamp: 'MB 3/24/2019 23:15:50'!
realizarSpinOff: unaListaDePeliculas para: unSpinOff
	self
		definirPeliculaEnZona: unaListaDePeliculas
		para: unSpinOff.
	unSpinOff realizarOnFire: unaListaDePeliculas.
	unSpinOff unaPeliculaEntre: unaListaDePeliculas.! !

!EstadoDeMasDeUnaPelicula methodsFor: 'instance status - cantidad de peliculas' stamp: 'MB 4/1/2019 14:44:28'!
realizarSpinOff: unaListaDePeliculas para: unSpinOff de: unLeague
	
	self
		definirPeliculaEnZona: unaListaDePeliculas
		para: unSpinOff.
		
	unSpinOff
	 realizarOnFire: unaListaDePeliculas.
	
	unSpinOff
		unaPeliculaEntre: unaListaDePeliculas
		en: unLeague.! !

!EstadoDeMasDeUnaPelicula class methodsFor: 'status - cantidad de peliculas' stamp: 'MB 11/7/2018 22:06:41'!
puedeHacerseCargo: unaListaDePelicula 
	
	^ unaListaDePelicula size > 1! !

!EstadoDeUnaUnicaPelicula methodsFor: 'instance status - cantidad de peliculas' stamp: 'MB 3/24/2019 23:15:09'!
realizarSpinOff: unaListaDePeliculas para: unSpinOff
	| ganadorDeCupoReservado |
	ganadorDeCupoReservado _ unaListaDePeliculas first.
	unSpinOff ganadorDeCupoReservado: ganadorDeCupoReservado.! !

!EstadoDeUnaUnicaPelicula methodsFor: 'instance status - cantidad de peliculas' stamp: 'MB 3/30/2019 01:05:53'!
realizarSpinOff: unaListaDePelicula para: unaRuleta de: unLeague
	| peliculaGanadora |
	peliculaGanadora _ unaListaDePelicula first.
	unLeague registrarGanadorEnSpinOff: peliculaGanadora.! !

!EstadoDeUnaUnicaPelicula class methodsFor: 'status - cantidad de peliculas' stamp: 'MB 11/7/2018 22:04:43'!
puedeHacerseCargo: unaListaDePeliculas 
	
	^ unaListaDePeliculas size = 1! !

!ProveedorDeEstadoCantidadDePeliculasEnLastRango class methodsFor: 'proveedor - cantidad de peliculas' stamp: 'MB 7/26/2019 18:20:41'!
unEstadoActualDeLastRango: unaLeague
	
	^ (self allSubclasses detect: [ :unEstado | unEstado puedeHacerseCargo: unaLeague ]) new.! !

!EstadoActualDeLastCupoConPeliculas methodsFor: 'instance status - cantidad de peliculas en categoria' stamp: 'MB 3/30/2019 01:06:47'!
retonarPeliculaGanadoraDeLastRango: unaCategoria en: unaLeague
	unaLeague ganadorDeCategoria: unaCategoria.
	^ unaLeague ganadorSpinOff.! !

!EstadoActualDeLastCupoConPeliculas class methodsFor: 'status - cantidad de peliculas en categoria' stamp: 'MB 12/22/2018 23:20:50'!
puedeHacerseCargo: unaLeague
	^ unaLeague lastRangoTienePeliculas.! !

!EstadoActualDeUltimoCupoSinPeliculas methodsFor: 'instance status - cantidad de peliculas en categoria' stamp: 'MB 4/2/2019 00:13:23'!
retonarPeliculaGanadoraDeLastRango: unaCategoria en: unaLeague
	| ganadorCupoRepechaje |
	unaLeague cupoRepechaje.
	ganadorCupoRepechaje _ unaLeague spinOff ganadorCupoReservado.
	unaLeague borrarPeliculaDeCupoRepechaje: ganadorCupoRepechaje.
	^ ganadorCupoRepechaje.! !

!EstadoActualDeUltimoCupoSinPeliculas class methodsFor: 'status - cantidad de peliculas en categoria' stamp: 'MB 12/22/2018 21:27:40'!
puedeHacerseCargo: unaLeague 
	
	^ unaLeague ultimoRangoDeCategoriaSinPeliculas! !

!ProveedorDeEstadoDeCategoria class methodsFor: 'proveedor - categoria' stamp: 'MB 12/19/2018 15:42:34'!
unEstadoDeCategoriaPara: unaCategoria en: unLeague 
	
	^ (self allSubclasses detect:[:unEstado | unEstado puedeHacerseCargo: unaCategoria en: unLeague ]) new! !

!EstadoConPeliculasEnCategoria methodsFor: 'instance status - cantidad de peliculas en categoria' stamp: 'MB 3/30/2019 01:06:49'!
retonarPeliculaGanadoraDeCupoOne: unaCategoria en: unaLeague
	unaLeague ganadorDeCategoria: unaCategoria.
	^ unaLeague ganadorSpinOff.! !

!EstadoConPeliculasEnCategoria methodsFor: 'instance status - cantidad de peliculas en categoria' stamp: 'MB 3/30/2019 01:06:50'!
retonarPeliculaGanadoraDeCupoSecond: unaCategoria en: unaLeague
	unaLeague ganadorDeCategoria: unaCategoria.
	^ unaLeague ganadorSpinOff.! !

!EstadoConPeliculasEnCategoria methodsFor: 'instance status - cantidad de peliculas en categoria' stamp: 'MB 3/30/2019 01:06:47'!
retonarPeliculaGanadoraDeCupoThird: unaCategoria en: unaLeague
	unaLeague ganadorDeCategoria: unaCategoria.
	^ unaLeague ganadorSpinOff.! !

!EstadoConPeliculasEnCategoria class methodsFor: 'status - cantidad de peliculas en categoria' stamp: 'MB 12/19/2018 15:43:33'!
puedeHacerseCargo: unaCategoria en: unLeague 
	
	^ unLeague tienePeliculasEnCategoria: unaCategoria ! !

!EstadoSinPeliculasEnCategoria methodsFor: 'instance status - cantidad de peliculas en categoria' stamp: 'MB 12/26/2018 23:36:38'!
retonarPeliculaGanadoraDeCupoOne: unaCategoria en: unaLeague
	unaLeague mejorPeliculaDeCupoSecond.
	^ unaLeague cupoSecond ganadorCupoSecond.! !

!EstadoSinPeliculasEnCategoria methodsFor: 'instance status - cantidad de peliculas en categoria' stamp: 'MB 12/26/2018 23:37:11'!
retonarPeliculaGanadoraDeCupoSecond: unaCategoria en: unaLeague
	unaLeague mejorPeliculaDeCupoThird.
	^ unaLeague cupoThird ganadorCupoThird.! !

!EstadoSinPeliculasEnCategoria methodsFor: 'instance status - cantidad de peliculas en categoria' stamp: 'MB 12/26/2018 23:37:45'!
retonarPeliculaGanadoraDeCupoThird: unaCategoria en: unaLeague
	unaLeague mejorPeliculaDeLastCupo.
	^ unaLeague lastCupo ganadorLastCupo.! !

!EstadoSinPeliculasEnCategoria class methodsFor: 'status - cantidad de peliculas en categoria' stamp: 'MB 12/20/2018 21:16:18'!
puedeHacerseCargo: unaCategoria en: unaLeague 
	
	^ unaLeague tieneLaCategoriaSinPeliculas: unaCategoria .! !

!ProveedorDeEstadoDeZonaRoja class methodsFor: 'proveedor - zona' stamp: 'MB 11/13/2018 20:15:10'!
unEstadoDeZonaRoja: unaListaDePeliculaEnZonaRoja 
	
	^ (self allSubclasses detect: [:unEstado | unEstado puedeHacerseCargoDe: unaListaDePeliculaEnZonaRoja ]) new! !

!EstadoDeZonaConPeliculas methodsFor: 'instance status - zona' stamp: 'MB 3/22/2019 23:19:02'!
definirOnFire: listaDePeliculaEnZonaRoja en: listaDePeliculaEnZonaSegura
	^ OnFire
		definirOnFire: listaDePeliculaEnZonaRoja
		en: listaDePeliculaEnZonaSegura.! !

!EstadoDeZonaConPeliculas class methodsFor: 'status - zona' stamp: 'MB 11/13/2018 20:18:55'!
puedeHacerseCargoDe: unaListaDePeliculaEnZonaRoja 
	
	^ (unaListaDePeliculaEnZonaRoja isEmpty ) not! !

!EstadoDeZonaVacia methodsFor: 'instance status - ganador pelicula' stamp: 'MB 3/22/2019 23:19:01'!
definirOnFire: unaListaDePeliculaEnZonaRoja en: unaListaDePeliculaEnZonaSegura
	^ unaListaDePeliculaEnZonaSegura.! !

!EstadoDeZonaVacia class methodsFor: 'status - zona' stamp: 'MB 11/13/2018 20:17:49'!
puedeHacerseCargoDe: unaListaDePelicula 
	
	^ unaListaDePelicula isEmpty ! !

!Negativo methodsFor: 'initialization' stamp: 'MB 1/4/2019 23:37:21'!
initialize


	simbolo _ X ! !

!Negativo methodsFor: 'accessing' stamp: 'MB 10/7/2018 14:27:27'!
simbolo
	^simbolo! !

!Negativo class methodsFor: 'instance creation' stamp: 'MB 10/7/2018 15:37:17'!
crearInstancia
	^ self new! !

!Negativo class methodsFor: 'accessing' stamp: 'MB 10/7/2018 15:37:02'!
simbolo
	^ self crearInstancia simbolo! !

!Positivo methodsFor: 'initialization' stamp: 'MB 1/4/2019 23:37:34'!
initialize


	simbolo _ O ! !

!Positivo methodsFor: 'accessing' stamp: 'MB 10/7/2018 14:29:30'!
simbolo
	^simbolo! !

!Positivo class methodsFor: 'instance creation' stamp: 'MB 10/7/2018 15:56:37'!
crearInstancia
	
	^ self new! !

!Positivo class methodsFor: 'accessing' stamp: 'MB 10/7/2018 15:56:09'!
simbolo
	
	^ self crearInstancia simbolo! !

!RecolectorDePuntos methodsFor: 'recolector de puntos' stamp: 'MB 12/7/2018 21:16:44'!
unaListaDePuntosDe: unaPelicula en: unPlayOff 
	
	| listaFinal primerPunto segundoPunto tercerPunto 	cuartoPunto quintoPunto nombreDeLaPelicula |
	
	listaFinal _ OrderedCollection new.
	
	nombreDeLaPelicula _ unaPelicula nombre.
	
	primerPunto _ unPlayOff resultadoDePunto: unPlayOff primerPunto de: nombreDeLaPelicula.
	segundoPunto _ unPlayOff resultadoDePunto: unPlayOff segundoPunto de: nombreDeLaPelicula.
	tercerPunto _ unPlayOff resultadoDePunto: unPlayOff tercerPunto de: nombreDeLaPelicula.
	cuartoPunto _ unPlayOff resultadoDePunto: unPlayOff cuartoPunto de: nombreDeLaPelicula.
	quintoPunto _ unPlayOff resultadoDePunto: unPlayOff quintoPunto de: nombreDeLaPelicula.
	
	listaFinal 
		add: primerPunto;
		add: segundoPunto;
		add: tercerPunto;
		add: cuartoPunto;
		add: quintoPunto.
		
	^ listaFinal 
	
	 
	
	! !

!RecolectorDePuntos class methodsFor: 'instance creation' stamp: 'MB 10/21/2018 21:37:14'!
crearInstancia
	^ self new! !

!RecolectorDePuntos class methodsFor: 'recolector de puntos' stamp: 'MB 12/7/2018 21:09:49'!
unaListaDePuntosDe: unaPelicula en: unaPlayOff 
	
	^ self crearInstancia unaListaDePuntosDe: unaPelicula en: unaPlayOff ! !

!Registro methodsFor: 'accessing' stamp: 'MB 11/17/2018 20:35:28'!
baseDeDatos
	^baseDeDatos! !

!Registro methodsFor: 'registro' stamp: 'MB 11/17/2018 22:18:40'!
guardarPuntaje: puntajeTotal de: unaPelicula 

	| puntajeNuevo puntajeActual |
	
	puntajeActual _ self puntajeDe: unaPelicula .
	
	puntajeNuevo _ puntajeActual + puntajeTotal .

	
	
	baseDeDatos at: unaPelicula nombre put: puntajeNuevo .! !

!Registro methodsFor: 'initialization' stamp: 'MB 11/14/2018 21:07:18'!
initialize


	baseDeDatos _ Dictionary new.! !

!Registro methodsFor: 'private - registro' stamp: 'MB 3/21/2019 23:31:57'!
peliculasConIgualPuntajes: mejorPuntaje 
	
	^  baseDeDatos select: [:unPuntaje | unPuntaje =  mejorPuntaje ].! !

!Registro methodsFor: 'accessing' stamp: 'MB 11/16/2018 22:58:12'!
puntajeDe: unaPelicula 
	
	^ baseDeDatos at: unaPelicula nombre ifAbsent: [0]! !

!Registro methodsFor: 'private - registro' stamp: 'MB 3/21/2019 21:53:10'!
puntajeGlobalDe: unaPelicula 
	
	^ baseDeDatos at: unaPelicula ifAbsent: [0]! !

!Registro methodsFor: 'private - registro' stamp: 'MB 3/13/2019 16:45:12'!
puntajeStageGroupFinalDe: unNombreDeLaPelicula 
	
	^ baseDeDatos at: unNombreDeLaPelicula ! !

!Registro methodsFor: 'private - registro' stamp: 'MB 3/13/2019 23:33:16'!
resetearRegistro
	
	baseDeDatos removeAll! !

!Registro methodsFor: 'private - registro' stamp: 'MB 3/19/2019 23:31:04'!
retornaPuntajeDe: unNombreDeLaPelicula 
	
 	 ^ baseDeDatos at: unNombreDeLaPelicula ! !

!Registro class methodsFor: 'instance creation' stamp: 'MB 11/14/2018 21:09:07'!
crearInstancia
	^ self new! !

!Registro class methodsFor: 'registro' stamp: 'MB 11/14/2018 21:24:30'!
guardarPuntaje: puntajeTotal de: unaPelicula 
	
	^ self crearInstancia guardarPuntaje: puntajeTotal de: unaPelicula ! !

!Registro class methodsFor: 'registro' stamp: 'MB 11/14/2018 21:08:21'!
puntajeDe: unaPelicula 
	
	^ self crearInstancia puntajeDe: unaPelicula ! !

!Simbolo methodsFor: 'associating' stamp: 'MB 1/4/2019 23:14:37'!
conIdSimbolo: unIdSimbolo 
	
	idSimbolo _ unIdSimbolo ! !

!Simbolo methodsFor: 'accessing' stamp: 'MB 1/4/2019 23:22:14'!
idSimbolo

	^ idSimbolo ! !

!Simbolo class methodsFor: 'instance creation' stamp: 'MB 1/4/2019 23:13:13'!
conIdSimbolo: unIdSimbolo 
	
	^ self crearInstancia conIdSimbolo: unIdSimbolo ! !

!Simbolo class methodsFor: 'instance creation' stamp: 'MB 1/4/2019 23:13:33'!
crearInstancia
	
	^ self new! !

!Simbolo class methodsFor: 'instance creation' stamp: 'MB 1/12/2019 16:46:32'!
idSimbolo
	
	^ self crearInstancia idSimbolo! !

!O methodsFor: 'printing' stamp: 'MB 1/4/2019 23:28:47'!
printOn: aStream

	aStream nextPutAll: self idSimbolo! !

!X methodsFor: 'printing' stamp: 'MB 1/4/2019 23:21:14'!
printOn: aStream

	aStream nextPutAll: self idSimbolo! !

!SpinOff methodsFor: 'private - spinoff' stamp: 'MB 12/19/2018 22:50:36'!
agregarAZonaRoja: unaPelicula

	| unFiltro unaCondicion |
	
	unaCondicion _ [:unaPeliculaDeLaColeccion | self noEsPeliculaRepetida: unaPeliculaDeLaColeccion en: zonaEnRiesgo ].
	
	unFiltro _ Filter filteredCondition: unaCondicion .
	
	^ unFiltro toAdd: unaPelicula at: zonaEnRiesgo ! !

!SpinOff methodsFor: 'private - spinoff' stamp: 'MB 11/13/2018 19:58:42'!
definirZonaDePelicula: unaPelicula en: unaListaDePeliculas 
	
	(DefinidorDeZona zonasPosibles ) registrarZona: unaPelicula en: unaListaDePeliculas de: self! !

!SpinOff methodsFor: 'private - spinoff' stamp: 'MB 11/13/2018 20:13:35'!
estadoActualDeZonaRoja: unaListaDePeliculaEnZonaRoja
	
	^ ProveedorDeEstadoDeZonaRoja unEstadoDeZonaRoja: unaListaDePeliculaEnZonaRoja ! !

!SpinOff methodsFor: 'private - spinoff' stamp: 'MB 11/7/2018 21:52:17'!
estadoDeLista: unaListaDePeliculas 
	
	^ ProveedorDeCantidadDePeliculas unEstadoPara: unaListaDePeliculas ! !

!SpinOff methodsFor: 'accessing' stamp: 'MB 3/24/2019 18:13:56'!
ganadorCupoReservado
	
	^ganadorCupoReservado! !

!SpinOff methodsFor: 'private - spinoff' stamp: 'MB 3/24/2019 17:59:28'!
ganadorDeCupoReservado: unaPelicula 
	
	ganadorCupoReservado _ unaPelicula ! !

!SpinOff methodsFor: 'initialization' stamp: 'MB 11/15/2018 18:14:22'!
initialize
	zonaEnRiesgo _ OrderedCollection new.! !

!SpinOff methodsFor: 'testing - spinoff' stamp: 'MB 12/19/2018 22:51:36'!
noEsPeliculaRepetida: unaPelicula en: unaListaDePeliculas
	
	^ (unaListaDePeliculas anySatisfy: [:unaPeliculaDeLaColeccion | unaPeliculaDeLaColeccion estaRepetida: unaPelicula]) not! !

!SpinOff methodsFor: 'private - spinoff' stamp: 'MB 3/24/2019 23:15:49'!
realizarOnFire: unaListaDePeliculas
	^ (self estadoActualDeZonaRoja: self zonaEnRiesgo)
		definirOnFire: self zonaEnRiesgo
		en: unaListaDePeliculas.! !

!SpinOff methodsFor: 'spinoff' stamp: 'MB 3/24/2019 23:15:09'!
unaPeliculaEntre: unaListaDePeliculas
	| listaDePeliculasDeRuleta |
	listaDePeliculasDeRuleta _ OrderedCollection new.
	listaDePeliculasDeRuleta addAll: unaListaDePeliculas.
	^ (self estadoDeLista: listaDePeliculasDeRuleta)
		realizarSpinOff: listaDePeliculasDeRuleta
		para: self.! !

!SpinOff methodsFor: 'spinoff' stamp: 'MB 4/1/2019 14:43:16'!
unaPeliculaEntre: unaListaDePeliculas en: unLeague
	
	| listaDePeliculasDeSpinOff |
	
	listaDePeliculasDeSpinOff _ OrderedCollection new.
	
	listaDePeliculasDeSpinOff addAll: unaListaDePeliculas.
	
	(self estadoDeLista: listaDePeliculasDeSpinOff) realizarSpinOff: listaDePeliculasDeSpinOff para: self de: unLeague.! !

!SpinOff methodsFor: 'accessing' stamp: 'MB 11/15/2018 18:14:21'!
zonaEnRiesgo
	^ zonaEnRiesgo.! !

!SpinOff class methodsFor: 'instance creation' stamp: 'MB 11/7/2018 21:40:43'!
crearInstancia
	
	^ self new! !

!SpinOff class methodsFor: 'spinoff' stamp: 'MB 3/24/2019 17:38:21'!
unaPeliculaEntre: unaListaDePeliculas 
	
	^ self crearInstancia unaPeliculaEntre: unaListaDePeliculas ! !

!SpinOff class methodsFor: 'spinoff' stamp: 'MB 12/7/2018 19:08:31'!
unaPeliculaEntre: unaListaDePelicula en: unLeague 
	
	^ self crearInstancia unaPeliculaEntre: unaListaDePelicula en: unLeague ! !

!StageGroup methodsFor: 'private - stagegroup' stamp: 'MB 11/22/2018 22:46:37'!
agregarAlRanking: unaPelicula 

	ranking add: unaPelicula! !

!StageGroup methodsFor: 'stagegroup' stamp: 'MB 4/1/2019 14:50:23'!
agregarPelicula: unaPelicula

	| unFiltro unaCondicion |
	
	unaCondicion _ [:unaPeliculaDeLaColeccion | self noEsPeliculaRepetida: unaPeliculaDeLaColeccion ].
	
	unFiltro _ Filter filteredCondition: unaCondicion .
	
	^ unFiltro toAdd: unaPelicula at:  peliculas 
	! !

!StageGroup methodsFor: 'private ticket - stagegroup' stamp: 'MB 2/15/2019 23:20:29'!
agregarPrivatePreTicketBonusComodinConSubticketUnicoPlayOff
	
	| subTicket |
	
	subTicket _ (SubTicketPlayOff dataIntancePlayOff: 'Unico playOff de bonus comodin') crearFalsoSubTicketPlayOff .
	
	preTicketBonusComodin agregarSubTicket: subTicket .! !

!StageGroup methodsFor: 'private ticket - stagegroup' stamp: 'MB 2/21/2019 22:38:47'!
agregarPrivatePreTicketBonusComodinConSubticketsDeCuatripleEmpatePlayOff
	
	| primerSubTicket segundoSubTicket tercerSubTicket |
	
	primerSubTicket _ (SubTicketPlayOff dataIntancePlayOff:'1er playOff cuatriple empate de bonus comodin') crearFalsoSubTicketPlayOff.
	
	segundoSubTicket _ (SubTicketPlayOff dataIntancePlayOff: '2do playOff cuatriple empate de bonus comodin') crearFalsoSubTicketPlayOff.
	
	tercerSubTicket _ (SubTicketPlayOff dataIntancePlayOff: '3er playOff cuatriple empate de bonus comodin') crearFalsoSubTicketPlayOff.
	
	preTicketBonusComodin agregarSubTicket: primerSubTicket .
	
	preTicketBonusComodin agregarSubTicket: segundoSubTicket .
	
	preTicketBonusComodin agregarSubTicket: tercerSubTicket .! !

!StageGroup methodsFor: 'private ticket - stagegroup' stamp: 'MB 2/15/2019 23:35:47'!
agregarPrivatePreTicketBonusComodinConSubticketsDeTripleEmpatePlayOff
	
	| primerSubTicket segundoSubTicket |
	
	primerSubTicket _ (SubTicketPlayOff dataIntancePlayOff:'1er playOff triple empate de bonus comodin') crearFalsoSubTicketPlayOff.
	
	segundoSubTicket _ (SubTicketPlayOff dataIntancePlayOff: '2do playOff triple empate de bonus comodin') crearFalsoSubTicketPlayOff.
	
	preTicketBonusComodin agregarSubTicket: primerSubTicket .
	
	preTicketBonusComodin agregarSubTicket: segundoSubTicket .! !

!StageGroup methodsFor: 'private - stagegroup' stamp: 'MB 12/4/2018 23:04:04'!
agregarPuntajeTotal: unPuntaje a: unaPelicula 
	
	registroPuntajeTotal guardarPuntaje: unPuntaje de: unaPelicula ! !

!StageGroup methodsFor: 'private - bonus' stamp: 'MB 12/3/2018 22:53:34'!
analizarCasosDeEmpateDeBonusComodin
	^ AnalizadorDeBonus unEstadoBonusComodinPara: ranking de: self.! !

!StageGroup methodsFor: 'private - bonus' stamp: 'MB 12/3/2018 23:48:06'!
analizarCasosDeEmpateDeBonusInvitacion
	
	^ AnalizadorDeBonus unEstadoBonusInvitacionPara: ranking de: self.! !

!StageGroup methodsFor: 'private - bonus' stamp: 'MB 12/3/2018 22:59:57'!
analizarCasosDeEmpateDeBonusPromocion
	
	^ AnalizadorDeBonus unEstadoBonusPromocionPara: ranking de: self.! !

!StageGroup methodsFor: 'private - stagegroup' stamp: 'MB 11/22/2018 22:46:06'!
armarRanking

	self rankingCondition .
	
	peliculas do: [:unaPelicula | self agregarAlRanking: unaPelicula ]! !

!StageGroup methodsFor: 'private ticket - stagegroup' stamp: 'MB 2/8/2019 00:00:32'!
asignarDataVersusStageBonusComodin: unSubTicketPlayOff
	
	preTicketBonusComodin agregarSubTicket: unSubTicketPlayOff ! !

!StageGroup methodsFor: 'private ticket - stagegroup' stamp: 'MB 2/8/2019 00:00:50'!
asignarDataVersusStageBonusInvitacion: unSubTicketPlayOff 
	
	preTicketBonusInvitacion agregarSubTicket: unSubTicketPlayOff ! !

!StageGroup methodsFor: 'private - stagegroup' stamp: 'MB 2/7/2019 23:42:52'!
asignarDataVersusStageBonusPromocion: unSubTicketPlayOff 
	
	preTicketBonusPromocion agregarSubTicket: unSubTicketPlayOff .! !

!StageGroup methodsFor: 'accessing' stamp: 'MB 12/1/2018 00:02:40'!
bonus
	^bonus! !

!StageGroup methodsFor: 'private - bonus' stamp: 'MB 12/3/2018 22:22:06'!
borrarPeliculaRanking: unaPelicula 
	
	ranking remove: unaPelicula ! !

!StageGroup methodsFor: 'private - bonus' stamp: 'MB 12/5/2018 19:39:28'!
casoDeCuatripleEmpateEnBonusComodin: unRanking 
	
	| puntosPrimerPuesto puntosSegundoPuesto puntosTercerPuesto puntosCuartoPuesto primerPuesto segundoPuesto tercerPuesto cuartoPuesto |
	
	
	primerPuesto _ unRanking first .
	
	segundoPuesto _ unRanking second.
	
	tercerPuesto _ unRanking third .
	
	cuartoPuesto _ unRanking fourth.
	
	
	puntosPrimerPuesto _ registroPuntajeTotal puntajeDe: primerPuesto .
	
	puntosSegundoPuesto _ registroPuntajeTotal puntajeDe: segundoPuesto.
	
	puntosTercerPuesto _ registroPuntajeTotal puntajeDe: tercerPuesto .
	
	puntosCuartoPuesto _ registroPuntajeTotal puntajeDe: cuartoPuesto .
	
	^( puntosPrimerPuesto = puntosSegundoPuesto ) & (puntosPrimerPuesto  = puntosTercerPuesto) & (puntosPrimerPuesto  = puntosCuartoPuesto)! !

!StageGroup methodsFor: 'private - bonus' stamp: 'MB 12/5/2018 21:27:43'!
casoDeDobleEmpateEnBonusComodin: unRanking
	
	| puntosPrimerPuesto puntosSegundoPuesto puntosTercerPuesto puntosCuartoPuesto primerPuesto segundoPuesto tercerPuesto cuartoPuesto |
	
	primerPuesto _ unRanking first.
	segundoPuesto _ unRanking second.
	tercerPuesto _ unRanking third.
	cuartoPuesto _ unRanking fourth.
	
	puntosPrimerPuesto _ registroPuntajeTotal puntajeDe: primerPuesto.
	puntosSegundoPuesto _ registroPuntajeTotal puntajeDe: segundoPuesto.
	puntosTercerPuesto _ registroPuntajeTotal puntajeDe: tercerPuesto.
	puntosCuartoPuesto _ registroPuntajeTotal puntajeDe: cuartoPuesto.
	
	^ puntosPrimerPuesto = puntosSegundoPuesto & (puntosPrimerPuesto ~= puntosTercerPuesto) & (puntosPrimerPuesto ~= puntosCuartoPuesto).! !

!StageGroup methodsFor: 'private - bonus' stamp: 'MB 12/5/2018 19:54:11'!
casoDeDobleEmpateEnBonusInvitacion: unRanking 
	
	| puntosPrimerPuesto puntosSegundoPuesto   primerPuesto segundoPuesto   |
	
	
	primerPuesto _ unRanking first .
	
	segundoPuesto _ unRanking second.
	
	
	puntosPrimerPuesto _ registroPuntajeTotal puntajeDe: primerPuesto .
	
	puntosSegundoPuesto _ registroPuntajeTotal puntajeDe: segundoPuesto.
	
	
	
	^( puntosPrimerPuesto = puntosSegundoPuesto )
	! !

!StageGroup methodsFor: 'private - bonus' stamp: 'MB 12/5/2018 18:54:08'!
casoDeDobleEmpateEnBonusPromocion: unRanking 
	
	| puntosPrimerPuesto puntosSegundoPuesto puntosTercerPuesto  primerPuesto segundoPuesto tercerPuesto  |
	
	
	primerPuesto _ unRanking first .
	
	segundoPuesto _ unRanking second.
	
	tercerPuesto _ unRanking third .
	
	
	puntosPrimerPuesto _ registroPuntajeTotal puntajeDe: primerPuesto .
	
	puntosSegundoPuesto _ registroPuntajeTotal puntajeDe: segundoPuesto.
	
	puntosTercerPuesto _ registroPuntajeTotal puntajeDe: tercerPuesto .
	
	
	^( puntosPrimerPuesto = puntosSegundoPuesto ) & (puntosPrimerPuesto  ~= puntosTercerPuesto)
	! !

!StageGroup methodsFor: 'private - bonus' stamp: 'MB 12/5/2018 19:14:34'!
casoDeEmpateNuloDeBonusComodin: unRanking 
	
	| puntosPrimerPuesto puntosSegundoPuesto primerPuesto segundoPuesto |
	
	
	primerPuesto _ unRanking first .
	
	segundoPuesto _ unRanking second.
	
	
	
	puntosPrimerPuesto _ registroPuntajeTotal puntajeDe: primerPuesto .
	
	puntosSegundoPuesto _ registroPuntajeTotal puntajeDe: segundoPuesto.
	
	^ ( puntosPrimerPuesto > puntosSegundoPuesto )! !

!StageGroup methodsFor: 'private - bonus' stamp: 'MB 12/5/2018 19:37:49'!
casoDeTripleEmpateDeBonusComodin: unRanking 
	
	| puntosPrimerPuesto puntosSegundoPuesto puntosTercerPuesto puntosCuartoPuesto primerPuesto segundoPuesto tercerPuesto cuartoPuesto |
	
	
	primerPuesto _ unRanking first .
	
	segundoPuesto _ unRanking second.
	
	tercerPuesto _ unRanking third .
	
	cuartoPuesto _ unRanking fourth.
	
	
	puntosPrimerPuesto _ registroPuntajeTotal puntajeDe: primerPuesto .
	
	puntosSegundoPuesto _ registroPuntajeTotal puntajeDe: segundoPuesto.
	
	puntosTercerPuesto _ registroPuntajeTotal puntajeDe: tercerPuesto .
	
	puntosCuartoPuesto _ registroPuntajeTotal puntajeDe: cuartoPuesto .
	
	^( puntosPrimerPuesto = puntosSegundoPuesto ) & (puntosPrimerPuesto  = puntosTercerPuesto) & (puntosPrimerPuesto  ~= puntosCuartoPuesto)! !

!StageGroup methodsFor: 'private - bonus' stamp: 'MB 12/5/2018 19:47:23'!
casoDeTripleEmpateEnBonusPromocion: unRanking 
	
	| puntosPrimerPuesto puntosSegundoPuesto puntosTercerPuesto  primerPuesto segundoPuesto tercerPuesto  |
	
	
	primerPuesto _ unRanking first .
	
	segundoPuesto _ unRanking second.
	
	tercerPuesto _ unRanking third .
	
	
	puntosPrimerPuesto _ registroPuntajeTotal puntajeDe: primerPuesto .
	
	puntosSegundoPuesto _ registroPuntajeTotal puntajeDe: segundoPuesto.
	
	puntosTercerPuesto _ registroPuntajeTotal puntajeDe: tercerPuesto .
	
	
	^( puntosPrimerPuesto = puntosSegundoPuesto ) & (puntosPrimerPuesto  = puntosTercerPuesto)! !

!StageGroup methodsFor: 'private - bonus' stamp: 'MB 12/5/2018 14:49:12'!
coronarGanadorComodinAlPrimerPuestoDelRanking
	
	| primerPuestoRanking |
	
	primerPuestoRanking _ ranking first .
	
	
	self bonus coronarGanador: primerPuestoRanking deBonus: 'Comodin' .
	
	self borrarPeliculaRanking: primerPuestoRanking .! !

!StageGroup methodsFor: 'private - bonus' stamp: 'MB 3/13/2019 17:03:25'!
coronarGanadorInvitacionAlPrimerPuestoDelRanking
	
	| primerPuestoRanking segundoPuestoRanking |
	
	primerPuestoRanking _ ranking first .
	
	segundoPuestoRanking _ ranking second.
	
	self bonus coronarGanador: primerPuestoRanking deBonus: 'Invitacion' .
	
	bonus lastPelicula: segundoPuestoRanking .
	
	self borrarPeliculaRanking: primerPuestoRanking .! !

!StageGroup methodsFor: 'private - bonus' stamp: 'MB 12/5/2018 20:00:00'!
coronarGanadorPromocionAlPrimerPuestoDelRanking
	
	| primerPuestoRanking |
	
	primerPuestoRanking _ ranking first .
	
	
	self bonus coronarGanador: primerPuestoRanking deBonus: 'Promocion'  .
	
	self borrarPeliculaRanking: primerPuestoRanking .! !

!StageGroup methodsFor: 'definition - bonus' stamp: 'MB 12/3/2018 23:43:07'!
definirBonus
	
	self definirBonusComodin.
	
	self definirBonusPromocion.
	
	self definirBonusInvitacion.! !

!StageGroup methodsFor: 'definition - bonus' stamp: 'MB 11/30/2018 23:58:22'!
definirBonusComodin
	self analizarCasosDeEmpateDeBonusComodin definirGanadorComodinPara: self! !

!StageGroup methodsFor: 'definition - bonus' stamp: 'MB 12/3/2018 23:45:48'!
definirBonusInvitacion
	
	self analizarCasosDeEmpateDeBonusInvitacion definirGanadorInvitacionPara: self! !

!StageGroup methodsFor: 'definition - bonus' stamp: 'MB 12/3/2018 22:57:36'!
definirBonusPromocion
	
	self analizarCasosDeEmpateDeBonusPromocion definirGanadorPromocionPara: self! !

!StageGroup methodsFor: 'private definition - bonus' stamp: 'MB 2/22/2019 23:43:40'!
definirCuatripleEmpateDeBonusComodin
	
	
	| peliculaA peliculaB peliculaC peliculaD subDueloA subDueloB subGanadorA subGanadorB ganador dueloFinal |
	
	peliculaA _ ranking first.
	peliculaB _ ranking second.
	peliculaC _ ranking third.
	peliculaD _ ranking fourth.
	
	subDueloA _ playOffOne primerVersusDeCuatripleEmpateDeStageGroupBonusComodin: peliculaA vs: peliculaB.
	
	playOffOne emitirDataPrimerVersusDelCuatripleEmpateDeStageGroupBonusComodinPara: self.
		
	subGanadorA _ subDueloA ganadorPlayOff.
	
	subDueloB _ playOffSecond segundoVersusDeCuatripleEmpateDeStageGroupBonusComodin: peliculaC vs: peliculaD.
	
	playOffSecond emitirDataSegundoVersusDelCuatripleEmpateDeStageGroupBonusComodinPara: self.
		
	subGanadorB _ subDueloB ganadorPlayOff.
	
	dueloFinal _ playOffThird tercerVersusDeCuatripleEmpateDeStageGroupBonusComodin: subGanadorA vs: subGanadorB .
	
	playOffThird emitirDataTercerVersusDelTripleEmpateDeStageGroupBonusComodinPara: self.
		
	ganador _ dueloFinal ganadorPlayOff.
	
	bonus
		coronarGanador: ganador
		deBonus: 'Comodin'.
		
	self borrarPeliculaRanking: ganador.
	
	playOffOne resetear.
	
	playOffSecond resetear.
	
	playOffThird resetear
	! !

!StageGroup methodsFor: 'private definition - bonus' stamp: 'MB 2/22/2019 23:43:02'!
definirDobleEmpateDeBonusComodin
	
	| peliculaA peliculaB ganador |
	
	peliculaA _ ranking first.
	peliculaB _ ranking second.
	
	playOffOne
		versusUnicoDueloParaStageGroupBonusComodin: peliculaA
		vs: peliculaB.
		
	playOffOne emitirDataUnicoVersusStageGroupBonusComodinPara: self.
		
	ganador _ playOffOne ganadorPlayOff.
	
	bonus
		coronarGanador: ganador
		deBonus: 'Comodin'.
		
	self borrarPeliculaRanking: ganador.
	
	playOffOne resetear.
	! !

!StageGroup methodsFor: 'private definition - bonus' stamp: 'MB 3/12/2019 22:44:24'!
definirDobleEmpateDeBonusInvitacion
	
	| peliculaA peliculaB ganador |
	
	peliculaA _ ranking first.
	peliculaB _ ranking second.
	
	playOffOne versusUnicoDueloParaStageGroupBonusInvitacion: peliculaA vs: peliculaB.
		
	ganador _ playOffOne ganadorPlayOff.
	
	bonus
		coronarGanador: ganador
		deBonus: 'Invitacion'.
		
	bonus lastPelicula: playOffOne perdedorPlayOff .
		
	self borrarPeliculaRanking: ganador.
	
	playOffOne resetear.
	
	playOffOne emitirDataUnicoVersusStageGroupBonusInvitacionPara: self.! !

!StageGroup methodsFor: 'private definition - bonus' stamp: 'MB 2/22/2019 23:44:32'!
definirDobleEmpateDeBonusPromocion
	
	| peliculaA peliculaB ganador |
	
	peliculaA _ ranking first.
	peliculaB _ ranking second.
	
	playOffOne versusUnicoDueloParaStageGroupBonusPromocion: peliculaA vs: peliculaB.
	
	playOffOne emitirDataUnicoVersusStageGroupBonusPromocionPara: self.
		
	ganador _ playOffOne ganadorPlayOff.
	
	bonus
		coronarGanador: ganador
		deBonus: 'Promocion'.
		
	self borrarPeliculaRanking: ganador.
	
	playOffOne resetear.
	! !

!StageGroup methodsFor: 'definition - stage group' stamp: 'MB 3/13/2019 22:16:10'!
definirPrimeraRondaStageGroupEnTicket: unTicketColiseum
	| primeraPelicula segundaPelicula terceraPelicula cuartaPelicula |
	primeraPelicula _ peliculas first.
	segundaPelicula _ peliculas second.
	terceraPelicula _ peliculas third.
	cuartaPelicula _ peliculas fourth.
	
	pointExpress
		definirPrimeraRondaDeStageGroupPara: primeraPelicula
		enRegistro: registroPrimeraRonda 
		enTicket: unTicketColiseum.
		
	pointExpress
		definirPrimeraRondaIIDeStageGroupPara: segundaPelicula
		enRegistro:registroPrimeraRonda 
		enTicket: unTicketColiseum.
		
	pointExpress
		definirPrimeraRondaIIIDeStageGroupPara: terceraPelicula
		enRegistro: registroPrimeraRonda 
		enTicket: unTicketColiseum.
		
	pointExpress
		definirPrimeraRondaIVDeStageGroupPara: cuartaPelicula
		enRegistro: registroPrimeraRonda 
		enTicket: unTicketColiseum.
		
	self registrarPrimeraRonda.
	
	pointExpress vaciarRondas! !

!StageGroup methodsFor: 'definition - stage group' stamp: 'MB 3/14/2019 01:17:35'!
definirRondaRevanchaStageGroupEnTicket: unTicketColiseum
	
	| primeraPelicula segundaPelicula terceraPelicula cuartaPelicula |
	
	primeraPelicula _ peliculas first.
	segundaPelicula _ peliculas second.
	terceraPelicula _ peliculas third.
	cuartaPelicula _ peliculas fourth.
	
	pointExpress
		definirPrimeraRondaRevanchaDeStageGroupPara: primeraPelicula
		enRegistro: registroRondaRevancha 
		enTicket: unTicketColiseum.
		
	pointExpress
		definirPrimeraRondaIIRevanchaDeStageGroupPara: segundaPelicula
		enRegistro: registroRondaRevancha 
		enTicket: unTicketColiseum.
		
	pointExpress
		definirPrimeraRondaIIIRevanchaDeStageGroupPara: terceraPelicula
		enRegistro: registroRondaRevancha 
		enTicket: unTicketColiseum.
		
	pointExpress
		definirPrimeraRondaIVRevanchaDeStageGroupPara: cuartaPelicula
		enRegistro: registroRondaRevancha 
		enTicket: unTicketColiseum.
		
	self registrarRondaRevancha .
	
	pointExpress vaciarRondas! !

!StageGroup methodsFor: 'stagegroup' stamp: 'MB 3/15/2019 18:41:23'!
definirStageGroupEnTicket: unTicketColiseum 
	
	unTicketColiseum asociarTitulo: self idStage .
	
	self emitirDataGanadoresDeCupos: unTicketColiseum .
	
	self 
		definirPrimeraRondaStageGroupEnTicket: unTicketColiseum ;
		definirRondaRevanchaStageGroupEnTicket: unTicketColiseum .
	
	self armarRanking.
	
	self definirBonus.
	
	unTicketColiseum registroRanking: registroPuntajeTotal de: bonus deStage: self idStage.
	
	procesador transcribirTicketStageGroup: unTicketColiseum 
	
		! !

!StageGroup methodsFor: 'private definition - bonus' stamp: 'MB 2/22/2019 23:42:24'!
definirTripleEmpateDeBonusComodin
	| peliculaA peliculaB peliculaC subDuelo subganador ganador dueloFinal |
	
	peliculaA _ ranking first.
	peliculaB _ ranking second.
	peliculaC _ ranking third.
	
	subDuelo _ playOffOne
		primerVersusDeTripleEmpateDeStageGroupBonusComodin: peliculaA
		vs: peliculaB.
		
	playOffOne emitirDataPrimerVersusDelTripleEmpateDeStageGroupBonusComodinPara: self.
	
	subganador _ subDuelo ganadorPlayOff.
	
	dueloFinal _ playOffSecond
		segundoVersusDeTripleEmpateDeStageGroupBonusComodin: subganador
		vs: peliculaC.
		
	playOffSecond emitirDataSegundoVersusDelTripleEmpateDeStageGroupBonusComodinPara: self.
	
	ganador _ dueloFinal ganadorPlayOff.
	
	bonus
		coronarGanador: ganador
		deBonus: 'Comodin'.
		
	self borrarPeliculaRanking: ganador.
	
	playOffOne resetear.
	
	playOffSecond resetear.! !

!StageGroup methodsFor: 'private definition - bonus' stamp: 'MB 2/22/2019 23:44:47'!
definirTripleEmpateDeBonusPromocion
	
	| peliculaA peliculaB peliculaC subDuelo subganador ganador dueloFinal |
	
	peliculaA _ ranking first.
	peliculaB _ ranking second.
	peliculaC _ ranking third.
	
	subDuelo _ playOffOne primerVersusDeTripleEmpateDeStageGroupBonusPromocion: peliculaA vs: peliculaB .
	
	playOffOne emitirDataPrimerVersusDelTripleEmpateDeStageGroupBonusPromocionPara: self.
		
	subganador _ subDuelo ganadorPlayOff.
	
	dueloFinal _ playOffSecond segundoVersusDeTripleEmpateDeStageGroupBonusPromocion: subganador vs: peliculaC .
	
	playOffSecond emitirDataSegundoVersusDelTripleEmpateDeStageGroupBonusPromocionPara: self.
		
	ganador _ dueloFinal ganadorPlayOff.
	
	bonus coronarGanador: ganador deBonus: 'Promocion'.
	
	self borrarPeliculaRanking: ganador.
	
	playOffOne resetear.
	
	playOffSecond resetear.! !

!StageGroup methodsFor: 'private ticket - stagegroup' stamp: 'MB 3/15/2019 18:47:34'!
emitirDataGanadoresDeCupos: unTicketColiseum
	
	| primerGanadorDeCupo segundoGanadorDeCupo tercerGanadorDeCupo cuartoGanadorDeCupo |
	
	primerGanadorDeCupo _ peliculas first .
	
	segundoGanadorDeCupo _ peliculas second .
	
	tercerGanadorDeCupo _ peliculas third .
	
	cuartoGanadorDeCupo _ peliculas fourth.
	
	unTicketColiseum asociarPrimerGanadorDeCupo: primerGanadorDeCupo .
	
	unTicketColiseum asociarSegundoGanadorDeCupo: segundoGanadorDeCupo .
	
	unTicketColiseum asociarTercerGanadorDeCupo: tercerGanadorDeCupo .
	
	unTicketColiseum asociarCuartoGanadorDeCupo: cuartoGanadorDeCupo .! !

!StageGroup methodsFor: 'accessing' stamp: 'MB 3/24/2019 22:31:01'!
ganadorDeBonusInvitacion

	^ bonus ganadorInvitacion 
	! !

!StageGroup methodsFor: 'accessing' stamp: 'MB 3/12/2019 23:00:59'!
idStage
	
	^idStage! !

!StageGroup methodsFor: 'associating' stamp: 'MB 12/27/2018 23:11:18'!
idStage: unIdStage 
	
	idStage _ unIdStage ! !

!StageGroup methodsFor: 'initialization' stamp: 'MB 3/22/2019 23:04:06'!
initialize
	peliculas _ OrderedCollection new.
	registroPrimeraRonda _ Registro new.
	registroRondaRevancha _ Registro new.
	registroPuntajeTotal _ Registro new.
	ranking _ SortedCollection new.
	bonus _ Bonus new.
	playOffOne _ PlayOff new.
	playOffSecond _ PlayOff new.
	playOffThird _ PlayOff new.
	pointExpress _ PointExpress new.
	procesador _ Procesador new.
	ticket _ PreTicketStageGroup new.
	preTicketBonusComodin _ PreTicketPlayOff new.
	preTicketBonusPromocion _ PreTicketPlayOff new.
	preTicketBonusInvitacion _ PreTicketPlayOff new.! !

!StageGroup methodsFor: 'testing - stagegroup' stamp: 'MB 4/1/2019 15:02:37'!
noEsPeliculaRepetida: unaPelicula 
	
	^  (self peliculas anySatisfy: [:unaPeliculaDeLaColeccion | unaPeliculaDeLaColeccion estaRepetida: unaPelicula]) not! !

!StageGroup methodsFor: 'private testing - bonus' stamp: 'MB 12/5/2018 14:40:15'!
noTieneGanadorDeBonusComodin
	
	^ bonus noTieneBonus: 'Comodin'! !

!StageGroup methodsFor: 'private testing - bonus' stamp: 'MB 12/5/2018 20:14:26'!
noTieneGanadorDeBonusInvitacion
	
	^ bonus noTieneBonus: 'Invitacion'! !

!StageGroup methodsFor: 'private testing - bonus' stamp: 'MB 12/5/2018 20:07:10'!
noTieneGanadorDeBonusPromocion
	
	^ bonus noTieneBonus: 'Promocion'! !

!StageGroup methodsFor: 'testing - stagegroup' stamp: 'MB 11/16/2018 20:46:31'!
noTienePeliculas
	^ peliculas isEmpty.! !

!StageGroup methodsFor: 'accessing' stamp: 'MB 11/16/2018 21:05:07'!
peliculas
	^peliculas! !

!StageGroup methodsFor: 'accessing' stamp: 'MB 2/11/2019 23:00:49'!
preTicketBonusComodin
	^preTicketBonusComodin! !

!StageGroup methodsFor: 'accessing' stamp: 'MB 2/11/2019 23:01:28'!
preTicketBonusInvitacion
	^preTicketBonusInvitacion! !

!StageGroup methodsFor: 'accessing' stamp: 'MB 2/11/2019 23:01:10'!
preTicketBonusPromocion
	^preTicketBonusPromocion! !

!StageGroup methodsFor: 'private - stagegroup' stamp: 'MB 3/21/2019 21:07:53'!
puntajeFinal: unaPelicula 
	
	^ registroPuntajeTotal baseDeDatos at: unaPelicula nombre! !

!StageGroup methodsFor: 'stagegroup' stamp: 'MB 11/17/2018 21:30:51'!
puntajeTotal: unaPelicula 
	
	^ registroPuntajeTotal baseDeDatos at: (unaPelicula nombre)! !

!StageGroup methodsFor: 'accessing' stamp: 'MB 11/22/2018 22:35:09'!
ranking
	^ranking! !

!StageGroup methodsFor: 'private - stagegroup' stamp: 'MB 11/22/2018 22:39:57'!
rankingCondition

	ranking sortBlock: [ :peliculaA :peliculaB |
		(registroPuntajeTotal puntajeDe: peliculaA) > (registroPuntajeTotal puntajeDe: peliculaB) ].! !

!StageGroup methodsFor: 'register - stage group' stamp: 'MB 3/13/2019 22:56:26'!
registrarPrimeraRonda
	
	peliculas do: [:unaPelicula | registroPuntajeTotal guardarPuntaje: (registroPrimeraRonda puntajeDe: unaPelicula ) de: unaPelicula ]! !

!StageGroup methodsFor: 'register - stage group' stamp: 'MB 1/6/2019 16:12:46'!
registrarRondaRevancha
	
	peliculas do: [:unaPelicula | registroPuntajeTotal guardarPuntaje: (registroRondaRevancha puntajeDe: unaPelicula ) de: unaPelicula ]! !

!StageGroup methodsFor: 'accessing' stamp: 'MB 11/17/2018 21:15:04'!
registroPrimeraRonda
	^ registroPrimeraRonda.! !

!StageGroup methodsFor: 'accessing' stamp: 'MB 11/22/2018 22:36:40'!
registroPuntajeTotal
	^registroPuntajeTotal! !

!StageGroup methodsFor: 'accessing' stamp: 'MB 11/17/2018 21:14:39'!
registroRondaRevancha
	^registroRondaRevancha! !

!StageGroup methodsFor: 'private - stagegroup' stamp: 'MB 3/13/2019 23:33:50'!
resetearRegistros
	
	registroPrimeraRonda  resetearRegistro.
	
	registroRondaRevancha resetearRegistro .
	
	registroPuntajeTotal resetearRegistro ! !

!StageGroup methodsFor: 'accessing' stamp: 'MB 1/6/2019 17:11:20'!
ticket
	^ticket! !

!StageGroup class methodsFor: 'instance creation' stamp: 'MB 12/27/2018 23:10:32'!
crearInstancia
	
	^ self new! !

!StageGroup class methodsFor: 'instance creation' stamp: 'MB 12/27/2018 23:10:12'!
idStage: unIdStage 
	
	^ self crearInstancia idStage: unIdStage ! !

!SubTicketPlayOff methodsFor: 'associating' stamp: 'MB 3/1/2019 00:08:55'!
agregarListaDePuntajeBlackPlayOffDePeliculaA: unaListaDePuntos 

	dataPuntoBlackPlayOffPeliculaA addAll: unaListaDePuntos ! !

!SubTicketPlayOff methodsFor: 'associating' stamp: 'MB 3/1/2019 00:10:22'!
agregarListaDePuntajeBlackPlayOffDePeliculaB: unaListaDePuntos 
	
	^ dataPuntoBlackPlayOffPeliculaB addAll: unaListaDePuntos ! !

!SubTicketPlayOff methodsFor: 'private - subticket' stamp: 'MB 2/14/2019 15:35:46'!
agregarPrivateUnicoPlayOff
	
	| cuartoPuntoPA cuartoPuntoPB primerPuntoPA primerPuntoPB quintoPuntoPA quintoPuntoPB segundoPuntoPA segundoPuntoPB tercerPuntoPA tercerPuntoPB nombreDePeliculaA nombreDePeliculaB |
	
	nombreDePeliculaA _ 'peliculaA' .
	nombreDePeliculaB _ 'peliculaB' .
	
	self
		asignarDataPeliculasEnVersus: nombreDePeliculaA 
		vs: nombreDePeliculaB .
	
	primerPuntoPA _ O.
	segundoPuntoPA _ O .
	tercerPuntoPA _ O .
	cuartoPuntoPA _ X .
	quintoPuntoPA _ O  .
	primerPuntoPB _ X .
	segundoPuntoPB _ O .
	tercerPuntoPB _ X.
	cuartoPuntoPB _ O .
	quintoPuntoPB _ O .
	
	self
		registrarPrimerPuntoDePlayOffEnSubTicket: primerPuntoPA
		de: nombreDePeliculaA .
		
	self 
		registrarSegundoPuntoDePlayOffEnSubTicket: segundoPuntoPA
		de: nombreDePeliculaA .
		
	self
		registrarTercerPuntoDePlayOffEnSubTicket: tercerPuntoPA
		de: nombreDePeliculaA .
		
	self
		registrarCuartoPuntoDePlayOffEnSubTicket: cuartoPuntoPA
		de: nombreDePeliculaA .
		
	self
		registrarQuintoPuntoDePlayOffEnSubTicket: quintoPuntoPA
		de: nombreDePeliculaA .
		
	self
		registrarPrimerPuntoDePlayOffEnSubTicket: primerPuntoPB
		de: nombreDePeliculaB .
		
	self
		registrarSegundoPuntoDePlayOffEnSubTicket: segundoPuntoPB
		de: nombreDePeliculaB .
		
	self
		registrarTercerPuntoDePlayOffEnSubTicket: tercerPuntoPB
		de: nombreDePeliculaB .
		
	self
		registrarCuartoPuntoDePlayOffEnSubTicket: cuartoPuntoPB
		de: nombreDePeliculaB .
		
	self
		registrarQuintoPuntoDePlayOffEnSubTicket: quintoPuntoPB
		de: nombreDePeliculaB .
		! !

!SubTicketPlayOff methodsFor: 'associating' stamp: 'MB 1/20/2019 14:44:11'!
asignarDataPeliculasEnVersus: peliculaA vs: peliculaB 
	
	dataPeliculasEnVersus 
		add: peliculaA ;
		add: peliculaB.! !

!SubTicketPlayOff methodsFor: 'private - subticket' stamp: 'MB 2/15/2019 23:20:02'!
crearFalsoSubTicketPlayOff
	
	| cuartoPuntoPA cuartoPuntoPB primerPuntoPA primerPuntoPB quintoPuntoPA quintoPuntoPB segundoPuntoPA segundoPuntoPB tercerPuntoPA tercerPuntoPB nombreDePeliculaA nombreDePeliculaB |
	
	nombreDePeliculaA _ 'peliculaA' .
	nombreDePeliculaB _ 'peliculaB' .
	
	self
		asignarDataPeliculasEnVersus: nombreDePeliculaA 
		vs: nombreDePeliculaB .
	
	primerPuntoPA _ O.
	segundoPuntoPA _ O .
	tercerPuntoPA _ O .
	cuartoPuntoPA _ X .
	quintoPuntoPA _ O  .
	primerPuntoPB _ X .
	segundoPuntoPB _ O .
	tercerPuntoPB _ X.
	cuartoPuntoPB _ O .
	quintoPuntoPB _ O .
	
	self
		registrarPrimerPuntoDePlayOffEnSubTicket: primerPuntoPA
		de: nombreDePeliculaA .
		
	self 
		registrarSegundoPuntoDePlayOffEnSubTicket: segundoPuntoPA
		de: nombreDePeliculaA .
		
	self
		registrarTercerPuntoDePlayOffEnSubTicket: tercerPuntoPA
		de: nombreDePeliculaA .
		
	self
		registrarCuartoPuntoDePlayOffEnSubTicket: cuartoPuntoPA
		de: nombreDePeliculaA .
		
	self
		registrarQuintoPuntoDePlayOffEnSubTicket: quintoPuntoPA
		de: nombreDePeliculaA .
		
	self
		registrarPrimerPuntoDePlayOffEnSubTicket: primerPuntoPB
		de: nombreDePeliculaB .
		
	self
		registrarSegundoPuntoDePlayOffEnSubTicket: segundoPuntoPB
		de: nombreDePeliculaB .
		
	self
		registrarTercerPuntoDePlayOffEnSubTicket: tercerPuntoPB
		de: nombreDePeliculaB .
		
	self
		registrarCuartoPuntoDePlayOffEnSubTicket: cuartoPuntoPB
		de: nombreDePeliculaB .
		
	self
		registrarQuintoPuntoDePlayOffEnSubTicket: quintoPuntoPB
		de: nombreDePeliculaB .
		! !

!SubTicketPlayOff methodsFor: 'associating' stamp: 'MB 2/14/2019 23:46:18'!
cuartoPuntoDe: unIdPelicula 
	
	^ dataCuartoPunto at: unIdPelicula ! !

!SubTicketPlayOff methodsFor: 'accessing' stamp: 'MB 2/12/2019 23:43:08'!
dataIntancePlayOff

 ^ dataIntancePlayOff! !

!SubTicketPlayOff methodsFor: 'associating' stamp: 'MB 2/13/2019 23:06:27'!
dataIntancePlayOff: uniDDataIntance 

	dataIntancePlayOff _ uniDDataIntance ! !

!SubTicketPlayOff methodsFor: 'accessing' stamp: 'MB 2/14/2019 23:44:26'!
dataPeliculasEnVersus
	^dataPeliculasEnVersus! !

!SubTicketPlayOff methodsFor: 'accessing' stamp: 'MB 2/14/2019 23:46:55'!
dataPuntoBlackPlayOffPeliculaA
	^dataPuntoBlackPlayOffPeliculaA! !

!SubTicketPlayOff methodsFor: 'accessing' stamp: 'MB 2/14/2019 23:47:14'!
dataPuntoBlackPlayOffPeliculaB
	^dataPuntoBlackPlayOffPeliculaB! !

!SubTicketPlayOff methodsFor: 'initialization' stamp: 'MB 1/20/2019 14:43:27'!
initialize

	
	
	dataPeliculasEnVersus _ OrderedCollection new.
	
	dataPrimerPunto _ Dictionary new.
	
	dataSegundoPunto _ Dictionary new.
	
	dataTercerPunto _ Dictionary new.
	
	dataCuartoPunto _ Dictionary new.
	
	dataQuintoPunto _ Dictionary new.
	
	dataPuntoBlackPlayOffPeliculaA _ OrderedCollection new.
	
	dataPuntoBlackPlayOffPeliculaB _ OrderedCollection new.
	! !

!SubTicketPlayOff methodsFor: 'associating' stamp: 'MB 2/14/2019 23:45:13'!
primerPuntoDe: unIdPelicula 
	
	
	^ dataPrimerPunto at: unIdPelicula ! !

!SubTicketPlayOff methodsFor: 'printing' stamp: 'MB 2/12/2019 23:43:33'!
printOn: aStream

	aStream nextPutAll: dataIntancePlayOff! !

!SubTicketPlayOff methodsFor: 'associating' stamp: 'MB 2/14/2019 23:46:40'!
quintoPuntoDe: unIdPelicula 
	
	
	^ dataQuintoPunto at: unIdPelicula ! !

!SubTicketPlayOff methodsFor: 'register - subticket' stamp: 'MB 1/18/2019 23:17:08'!
registrarCuartoPuntoDePlayOffEnSubTicket: unPunto de: unaPelicula 
	
	dataCuartoPunto at: unaPelicula put: unPunto ! !

!SubTicketPlayOff methodsFor: 'register - subticket' stamp: 'MB 1/18/2019 23:14:50'!
registrarPrimerPuntoDePlayOffEnSubTicket: unPunto de: unaPelicula 
	
	dataPrimerPunto at: unaPelicula put: unPunto ! !

!SubTicketPlayOff methodsFor: 'register - subticket' stamp: 'MB 1/29/2019 23:05:54'!
registrarPuntoDeBlackPlayOffPeliculaA: unPuntaje 
	
	dataPuntoBlackPlayOffPeliculaA add: unPuntaje ! !

!SubTicketPlayOff methodsFor: 'register - subticket' stamp: 'MB 1/29/2019 23:08:49'!
registrarPuntoDeBlackPlayOffPeliculaB: unPuntaje 
	
	dataPuntoBlackPlayOffPeliculaB add: unPuntaje ! !

!SubTicketPlayOff methodsFor: 'register - subticket' stamp: 'MB 1/18/2019 23:18:06'!
registrarQuintoPuntoDePlayOffEnSubTicket: unPunto de: unaPelicula 
	
	dataQuintoPunto at: unaPelicula put: unPunto ! !

!SubTicketPlayOff methodsFor: 'register - subticket' stamp: 'MB 1/18/2019 23:15:16'!
registrarSegundoPuntoDePlayOffEnSubTicket: unPunto de: unaPelicula 
	
	dataSegundoPunto at: unaPelicula put: unPunto ! !

!SubTicketPlayOff methodsFor: 'register - subticket' stamp: 'MB 1/18/2019 23:16:22'!
registrarTercerPuntoDePlayOffEnSubTicket: unPunto de: unaPelicula 
	
	dataTercerPunto at: unaPelicula put: unPunto ! !

!SubTicketPlayOff methodsFor: 'associating' stamp: 'MB 2/14/2019 23:45:33'!
segundoPuntoDe: unIdPelicula 
	
	
	^ dataSegundoPunto at: unIdPelicula ! !

!SubTicketPlayOff methodsFor: 'associating' stamp: 'MB 2/14/2019 23:45:53'!
tercerPuntoDe: unIdPelicula 
	
	
	^ dataTercerPunto at: unIdPelicula ! !

!SubTicketPlayOff class methodsFor: 'instance creation' stamp: 'MB 2/14/2019 15:21:11'!
agregarPrivateUnicoPlayOff
	
	^ self crearInstancia agregarPrivateUnicoPlayOff! !

!SubTicketPlayOff class methodsFor: 'instance creation' stamp: 'MB 2/13/2019 23:05:47'!
crearInstancia
	
	^ self new! !

!SubTicketPlayOff class methodsFor: 'instance creation' stamp: 'MB 2/13/2019 23:05:18'!
dataIntancePlayOff: uniDDataIntance 
	
	^ self crearInstancia dataIntancePlayOff: uniDDataIntance ! !

!SumadorDePuntos methodsFor: 'sumador de puntos' stamp: 'MB 10/21/2018 23:23:40'!
unPuntajeDeRonda: unaRonda 
	
	^ (unaRonda count: [:unPuntaje | unPuntaje = O] ) ! !

!SumadorDePuntos class methodsFor: 'instance creation' stamp: 'MB 10/21/2018 23:21:03'!
crearInstancia
	
	^ self new.! !

!SumadorDePuntos class methodsFor: 'puntos' stamp: 'MB 10/21/2018 23:20:32'!
unPuntajeDeRonda: unaRonda 
	
	^ self crearInstancia unPuntajeDeRonda: unaRonda ! !

!SumadorDePuntosPlayOff methodsFor: 'sumador de puntos' stamp: 'MB 1/12/2019 22:45:36'!
contarPuntos: unaLista 
	
	
	^ unaLista count: [:unPuntaje | unPuntaje idSimbolo = 'O']
	
	! !

!SumadorDePuntosPlayOff methodsFor: 'sumador de puntos' stamp: 'MB 12/7/2018 21:08:10'!
listaDePuntosDe: unaPelicula en: unPlayOff
	
	^ RecolectorDePuntos unaListaDePuntosDe: unaPelicula en: unPlayOff ! !

!SumadorDePuntosPlayOff methodsFor: 'sumador de puntos' stamp: 'MB 12/7/2018 21:08:22'!
unPuntajePara: unaPelicula en: unPlayOff
	
	| listaDePuntos |
	
	listaDePuntos _ self listaDePuntosDe: unaPelicula en: unPlayOff .
	
	^ self contarPuntos: listaDePuntos .! !

!SumadorDePuntosPlayOff class methodsFor: 'instance creation' stamp: 'MB 10/21/2018 21:30:24'!
crearInstancia
	
	^ self new! !

!SumadorDePuntosPlayOff class methodsFor: 'sumador de puntos' stamp: 'MB 12/7/2018 21:09:27'!
unPuntajePara: unaPelicula en: unPlayOff
	
	^ self crearInstancia unPuntajePara: unaPelicula en: unPlayOff ! !

!ZonaEnRiesgo class methodsFor: 'zona' stamp: 'MB 11/13/2018 20:02:18'!
registrarZona: unaPelicula en: unaListaDePeliculas de: unaRuleta 
	
	unaRuleta agregarAZonaRoja: unaPelicula .
	
	unaListaDePeliculas remove: unaPelicula .! !

!ZonaSegura class methodsFor: 'zona' stamp: 'MB 12/7/2018 21:09:12'!
registrarZona: unaPelicula en: unaListaDePelicula de: unaRuleta 
	
	" No Hace Nada esta en zona segura"! !
